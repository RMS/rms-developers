openapi: 3.0.1
info:
  title: Risk Modeler
  description: This documentation provides information on the Risk Modeler 2.0 public API.
  version: 'March, 2023'
servers:
  - url: 'https://{host}/riskmodeler'
    description: Risk Intelligence Analytics Platform
    variables:
      host:
        enum:
          - api-euw1.rms.com
          - api-use1.rms.com
        default: api-euw1.rms.com
        description: 'Data center that hosts the tenant instance: api-euw1.rms.com or api-use1.rms.com.'
paths:
  /v1/accounts:
    get:
      operationId: searchAccounts
      summary: Get accounts
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >-
            Number of pages that are offset before the initial page of records returned. By default, _0_
          schema:
            type: integer
            format: int32
        - name: portfoliofilter
          in: query
          description: Indicates if search was triggered by portfolio.
          schema:
            type: boolean
        - name: policyExpirationDays
          in: query
          description: The date the latest policy expires.
          schema:
            type: integer
            format: int32
            default: 120
      responses:
        '200':
          description: List of accounts successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
    post:
      operationId: createAccount
      summary: Create account
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '201':
          description: Account created.
          headers:
            Location:
              description: Account resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  /v1/accounts/count:
    get:
      operationId: getExposureCountAccount
      summary: Count accounts
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}':
    get:
      operationId: getAccount
      summary: Get account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
    put:
      operationId: updateAccount
      summary: Update account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '204':
          description: Validation updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
    delete:
      operationId: deleteAccount
      summary: Delete account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: |
            Accepted: A `DELETE_ACCOUNT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/analyses':
    get:
      operationId: getAccountAnalysesResults
      summary: Get results by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >-
            Number of pages that are offset before the initial page of records returned. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: userName
          in: query
          description: Name of <<glossary:principal>> that ran the analysis.
          schema:
            type: string
        - name: runDate
          in: query
          description: Date that the analysis was run.
          schema:
            type: string
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/copy':
    post:
      operationId: copyAccountsv1
      summary: Copy account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAccountInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/geohaz':
    post:
      operationId: geohazAccount
      summary: Geohazard account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/convertcurrency':
    post:
      operationId: convertAccountCurrencyv1
      summary: Convert currency by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/coordinate':
    get:
      operationId: getCoordinateByLatitudeAndLongitude
      summary: Get account locations
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: Latitude coordinates.
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude coordinates.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Location coordinate retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/coordinates':
    get:
      operationId: getCoordinatesByAccount
      summary: Get location coordinates by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of location coordinates retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/countries':
    get:
      operationId: getCountriesByAccount
      summary: Get countries by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of countries retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/locationcount':
    get:
      operationId: getLocationCount
      summary: Count locations by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Number of locations is successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/metrics':
    get:
      operationId: getAccountMetrics
      summary: Get metrics by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified account are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMetrics'
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/move':
    post:
      operationId: moveAccount
      summary: Move account to EDM
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: option
          in: query
          description: Include (`1`) or exclude (`0`) locations in moved account.
          schema:
            type: integer
            format: int32
            maximum: 1
            minimum: 0
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Account successfully moved.
          headers:
            Location:
              description: URI for newly created account
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/policycount':
    get:
      operationId: getPolicyCount
      summary: Count policies by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Number of policies is successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/process':
    post:
      operationId: processAccount
      summary: Analyze account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  /v1/accounts/{id}/reports:
    get:
      tags:
        - AccountV1
      summary: Get account reports
      description: ' '
      operationId: accountReportsv1
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to display on the page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of reports successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden: Access to this resource is denied or not authorized to
            perform the "View Accounts" action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  '/v1/accounts/{id}/sites':
    get:
      operationId: getSiteNames
      summary: Get sites by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site names retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/summary_report':
    post:
      operationId: summaryReportAccount
      summary: Generate summary report by account
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureSummaryReportInput'
        required: true
      responses:
        '202':
          description: Job accepted.
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download Report" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/surplustreatieslocation':
    get:
      operationId: getLocationSurplusTreaties
      summary: Get surplus treaties by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location level surplus treaties retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/validate':
    get:
      operationId: validateAccount
      summary: Validate account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Validation retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationConditionValidationInfo'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  '/v1/accounts/{id}/validatemedia':
    get:
      operationId: downloadValidationAccountFile
      summary: Get validation files by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Validation retrieved.
          content:
            '*/*':
              schema:
                type: object
            application/json:
              schema:
                type: object
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV1
  /v2/accounts:
    get:
      operationId: searchAccountsv2
      summary: Get accounts
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to display on the page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: portfoliofilter
          in: query
          description: If This search was triggered from portfolio starting at _0_.
          schema:
            type: boolean
        - name: policyExpirationDays
          in: query
          schema:
            type: integer
            format: int32
            default: 120
      responses:
        '200':
          description: List of accounts successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
    post:
      operationId: createAccountv2
      summary: Create account
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '201':
          description: Account created.
          headers:
            Location:
              description: Account resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  /v2/accounts/count:
    get:
      operationId: getExposureCountAccountv2
      summary: Count accounts
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}':
    get:
      operationId: getAccountv2
      summary: Get account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
    put:
      operationId: updateAccountv2
      summary: Update account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '204':
          description: Validation updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
    delete:
      operationId: deleteAccountv2
      summary: Delete account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: >
            Accepted: A `DELETE_ACCOUNT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/analyses':
    get:
      operationId: getAccountAnalysesResultsV2
      summary: Get results by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: userName
          in: query
          description: Name of <<glossary:principal>> that ran the analysis.
          schema:
            type: string
        - name: runDate
          in: query
          description: Date that the analysis was run.
          schema:
            type: string
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/convertcurrency':
    post:
      operationId: convertAccountCurrencyv2
      summary: Convert currency by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/copy':
    post:
      operationId: copyAccountsv2
      summary: Copy account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAccountInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/coordinate':
    get:
      operationId: getCoordinateByLatitudeAndLongitudeAccountv2
      summary: Get account locations
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: Latitude coordinates.
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude coordinates.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Location coordinate retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/coordinates':
    get:
      operationId: getCoordinatesByAccountv2
      summary: Get location coordinates by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of location coordinates retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/countries':
    get:
      operationId: getCountriesByAccountv2
      summary: Get countries by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of countries retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/locationcount':
    get:
      operationId: getLocationCountv2
      summary: Count locations by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Number of locations is successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/geohaz':
    post:
      operationId: geohazAccountv2
      summary: Geohazard account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        description: Layers that define geocoding or hazard lookup jobs.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/metrics':
    get:
      operationId: getAccountMetricsv2
      summary: Get metrics by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified account are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMetrics'
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/move':
    post:
      operationId: moveAccountv2
      summary: Move account to EDM
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: option
          in: query
          description: Include (`1`) or exclude (`0`) locations in moved account.
          schema:
            type: integer
            format: int32
            maximum: 1
            minimum: 0
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Account successfully moved.
          headers:
            Location:
              description: URI for newly created account
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/policycount':
    get:
      operationId: getPolicyCountv2
      summary: Count policies by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Number of policies is successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/process':
    post:
      operationId: processAccountv2
      summary: Analyze account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessInputV2'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/sites':
    get:
      operationId: getSiteNamesv2
      summary: Get sites by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site names retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  /v2/accounts/{id}/reports:
    get:
      tags:
        - AccountV2
      summary: Get account reports
      description: ''
      operationId: accountReportsv2
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM. 
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of reports successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden: Access to this resource is denied or not authorized to
            perform the "View Accounts" action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  '/v2/accounts/{id}/summary_report':
    post:
      operationId: summaryReportAccountv2
      summary: Generate summary report by account
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureSummaryReportInput'
        required: true
      responses:
        '202':
          description: Job accepted.
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download Report" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/surplustreatieslocation':
    get:
      operationId: getLocationSurplusTreatiesv2
      summary: Get surplus treaties by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location level surplus treaties retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/validate':
    get:
      operationId: validateAccountv2
      summary: Validate account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Validation retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationConditionValidationInfo'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  '/v2/accounts/{id}/validatemedia':
    get:
      operationId: downloadValidationAccountFilev2
      summary: Get validation file by account
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the account.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Validation retrieved.
          content:
            '*/*':
              schema:
                type: object
            application/json:
              schema:
                type: object
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Accounts" action.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - AccountV2
  /v1/aggregate-portfolios:
    get:
      operationId: searchAggregatePortfoliosv1
      summary: Get aggregate portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of aggregate portfolios retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
    post:
      operationId: createAggregatePortfoliov1
      summary: Create aggregate portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregatePortfolio'
        required: true
      responses:
        '201':
          description: Aggregate portfolio created.
          headers:
            Location:
              description: Aggregate portfolio resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  /v1/aggregate-portfolios/count:
    get:
      operationId: getExposureCountAggregatePortfolio
      summary: Count aggregate portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Aggregate portfolio count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}':
    get:
      operationId: getAggregatePortfolioByIdv1
      summary: Get aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Aggregate portfolio retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioSearchItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
    put:
      operationId: updateAggregatePortfoliov1
      summary: Update aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregatePortfolio'
        required: true
      responses:
        '204':
          description: Aggregate portfolio successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
    delete:
      operationId: deleteAggregatePortfoliov1
      summary: Delete aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/aggregate-exposures-lists':
    get:
      operationId: getAggregateExposureListsv1
      summary: Get exposures by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          description: Country to filter by.
          required: true
          schema:
            type: string
        - name: resolution
          in: query
          description: Resolution to filter by.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of aggregate exposure values retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateExposuresList'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/analyses':
    get:
      operationId: getAggregatePortfolioAnalysesResultsv1
      summary: Get results by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/convert-currency':
    post:
      operationId: convertAggregatePortfolioCurrencyv1
      summary: Convert currency by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/copy':
    post:
      operationId: copyAggregatePortfoliov1
      summary: Copy aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAggregatePortfolioInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/countries':
    get:
      operationId: getCountriesByAggregatePortfoliov1
      summary: Get countries by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of countries retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioCountryMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/metrics':
    get:
      operationId: getAggregatePortfolioMetricsv1
      summary: Get metrics by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified aggregate portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/process':
    post:
      operationId: processAggregatePortfoliov1
      summary: Analyze aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmProcessInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/profiles':
    get:
      operationId: getDefaultProfilesv1
      summary: Get ALM profiles by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: softwareVersionCode
          in: query
          description: Software version code.
          required: true
          schema:
            type: string
        - name: includeHD
          in: query
          description: Indicator to include HD profiles
          schema:
            type: boolean
      responses:
        '200':
          description: List of ALM profiles retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultAlmProfilesResponse'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  '/v1/aggregate-portfolios/{id}/treaties':
    get:
      operationId: getAggregatePortfolioTreatiesv1
      summary: Get treaties by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaties applicable for a specified aggregate portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV1
  /v2/aggregate-portfolios:
    get:
      operationId: searchAggregatePortfoliosv2
      summary: Get aggregate portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of aggregate portfolios retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
    post:
      operationId: createAggregatePortfoliov2
      summary: Create aggregate portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregatePortfolio'
        required: true
      responses:
        '201':
          description: Aggregate portfolio created.
          headers:
            Location:
              description: Aggregate portfolio resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  /v2/aggregate-portfolios/count:
    get:
      operationId: getExposureCountAggregatePortfoliov2
      summary: Count aggregate portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Aggregate portfolio count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}':
    get:
      operationId: getAggregatePortfolioByIdv2
      summary: Get aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Aggregate portfolio retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioSearchItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
    put:
      operationId: updateAggregatePortfoliov2
      summary: Update aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregatePortfolio'
        required: true
      responses:
        '204':
          description: Aggregate portfolio successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
    delete:
      operationId: deleteAggregatePortfoliov2
      summary: Delete aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/analyses':
    get:
      operationId: getAggregatePortfolioAnalysesResultsv2
      summary: Get results by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: userName
          in: query
          description: Name of <<glossary:principal>> that submitted the workflow.
          schema:
            type: string
        - name: runDate
          in: query
          description: Date that the analysis was run.
          schema:
            type: string
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/aggregate-exposures-lists':
    get:
      operationId: searchAggregateExposuresv2
      summary: Get aggregate exposures by aggregate
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          description: Country to filter by.
          schema:
            type: string
        - name: resolution
          in: query
          description: Resolution to filter by.
          schema:
            type: string
      responses:
        '200':
          description: List of aggregate exposure values retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateExposuresListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/convert-currency':
    post:
      operationId: convertAggregatePortfolioCurrencyv2
      summary: Convert currency by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/copy':
    post:
      operationId: copyAggregatePortfoliov2
      summary: Copy aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAggregatePortfolioInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/countries':
    get:
      operationId: getCountriesByAggregatePortfoliov2
      summary: Get countries by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of countries retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioCountryMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/metrics':
    get:
      operationId: getAggregatePortfolioMetricsv2
      summary: Get metrics by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified aggregate portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePortfolioMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/process':
    post:
      operationId: processAggregatePortfoliov2
      summary: Analyze aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlmProcessInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/profiles':
    get:
      operationId: getDefaultProfilesv2
      summary: Get ALM profiles by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: softwareVersionCode
          in: query
          description: Software version code.
          required: true
          schema:
            type: string
        - name: includeHD
          in: query
          description: Indicator to include HD profiles
          schema:
            type: boolean
      responses:
        '200':
          description: List of ALM profiles retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultAlmProfilesResponse'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  '/v2/aggregate-portfolios/{id}/treaties':
    get:
      operationId: getAggregatePortfolioTreatiesv2
      summary: Get treaties by aggregate portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the aggregate portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaties applicable for a specified aggregate portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Aggregate Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Aggregate PortfolioV2
  /v1/analysis-groups:
    get:
      operationId: getAnalysisGroups
      summary: Get analysis groups
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of all Analysis Groups have been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisGroupSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
    post:
      operationId: createAnalysisGroup
      summary: Create analysis group
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisGroup'
        required: true
      responses:
        '201':
          description: The Analysis Group resource was successfully created.
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the Grouping action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
  '/v1/analysis-groups/{id}':
    get:
      operationId: getAnalysisGroupById
      summary: Get analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: Analysis Group ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Analysis Group has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisGroup'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
    put:
      operationId: updateAnalysisGroup
      summary: Update analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the Analysis Group.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisGroup'
        required: true
      responses:
        '204':
          description: Analysis Group successfully updated
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the Grouping action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
  '/v1/analysis-groups/{id}/regroup':
    post:
      operationId: regroupAnalysisGroup
      summary: Regroup analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the Analysis Group.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Analysis Group successfully updated
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the Grouping action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
  /v1/analysis-groups/validate:
    post:
      operationId: validateAnalysisGroup
      summary: Validate analysis group
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        '200':
          description: List of inconsistent treaties has been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TreatyWithAnalysisInfo'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: |-
            Forbidden: Access to this resource is denied or not authorized to
              perform the Grouping action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV1
  /v2/analysis-groups:
    get:
      operationId: getAnalysisGroupsv2
      summary: Get analysis groups
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of all Analysis Groups have been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisGroupSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
    post:
      operationId: createAnalysisGroupv2
      summary: Create analysis group
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisGroupWithSimulation'
        required: true
      responses:
        '201':
          description: The Analysis Group resource was successfully created.
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Grouping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
  '/v2/analysis-groups/{id}':
    get:
      operationId: getAnalysisGroupByIdv2
      summary: Get analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: Analysis Group ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Analysis Group has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisGroup'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
    put:
      operationId: updateAnalysisGroupv2
      summary: Update analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the Analysis Group.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisGroup'
        required: true
      responses:
        '204':
          description: Analysis Group successfully updated
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Grouping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
  '/v2/analysis-groups/{id}/regroup':
    post:
      operationId: regroupAnalysisGroupv2
      summary: Regroup analysis group
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the Analysis Group.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Analysis Group successfully updated
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Grouping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
  /v2/analysis-groups/validate:
    post:
      operationId: validateAnalysisGroupv2
      summary: Validate analysis group
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
              maxItems: 2147483647
              minItems: 1
        required: true
      responses:
        '200':
          description: List of inconsistent treaties has been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InconsistentTreaties'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Grouping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Analysis GroupsV2
  /v1/branches:
    get:
      operationId: getBranches
      summary: Get branches
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of branches in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - BranchV1
    post:
      operationId: createBranch
      summary: Create branch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      responses:
        '201':
          description: New branch is created in the data source is successfully.
          headers:
            Location:
              description: Location of the new Branch
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict. Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - BranchV1
  '/v1/branches/{id}':
    get:
      operationId: getBranchById
      summary: Get branch by ID
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the branch.
          required: true
          schema:
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Branch by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Branch not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - BranchV1
    put:
      operationId: updateBranch
      summary: Update branch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the branch.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      responses:
        '204':
          description: Updated. branch is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - BranchV1
    delete:
      operationId: deleteBranch
      summary: Delete branch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the branch.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Branch is deleted from the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - BranchV1
  /v1/cedants:
    get:
      operationId: getCedants
      summary: Get cedants
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of cedants in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CedantSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - CedantV1
    post:
      operationId: createCedant
      summary: Create cedant
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cedant'
        required: true
      responses:
        '201':
          description: New cedant is created in the data source is successfully.
          headers:
            Location:
              description: Location of the new Cedant
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict. Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - CedantV1
  '/v1/cedants/{id}':
    get:
      operationId: getCedantById
      summary: Get cedant
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the cedant.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cedant by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cedant'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Cedant not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - CedantV1
    put:
      operationId: updateCedant
      summary: Update cedant
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the cedant.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cedant'
        required: true
      responses:
        '204':
          description: Cedant is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - CedantV1
    delete:
      operationId: deleteCedant
      summary: Delete cedant
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the cedant.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      responses:
        '204':
          description: Deleted. cedant is deleted from the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - CedantV1
  /v1/datasources:
    get:
      operationId: searchEdms
      summary: Get EDMs
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
            default: datasourceName ASC
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page of returned records starting at `0`.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: EDM list is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV1
    post:
      operationId: dbOperations
      summary: Administer EDM
      description: ''
      parameters:
        - name: datasourcename
          in: query
          description: 'Unique name of EDM data source. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (space). Maximum length is 80 characters.'
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        - name: filename
          in: query
          description: >-
            Name of the file for download. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (space).
          schema:
            type: string
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        - name: operation
          in: query
          description: Database operation to perform. One of `CREATE`, `DOWNLOAD_EDM`, or `EDM_DATA_UPGRADE`.
          required: true
          schema:
            type: string
            enum:
              - CREATE
              - DOWNLOAD_EDM
              - EDM_DATA_UPGRADE
        - name: servername
          in: query
          description: Name of server instance hosting the EDM.
          schema:
            type: string
        - name: format
          in: query
          description: File format downloaded database artifact. By default, `BAK`.
          schema:
            type: string
            default: BAK
            enum:
              - CSV
              - PARQUET
              - BAK
              - MDF
        - name: sqlversion
          in: query
          description: SQL server version of exported BAK or MDF.
          schema:
            type: string
            default: '2014'
            enum:
              - '2014'
              - '2019'
      responses:
        '202':
          description: >-
            'Accepted: A `CREATE_EDM`, `DOWNLOAD_EDM`, or `EDM_DATA_UPGRADE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job, e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV1
  '/v1/datasources/{datasourcename}':
    delete:
      operationId: deleteEdm
      summary: Delete EDM
      description: ''
      parameters:
        - name: datasourcename
          in: path
          description: Data source name
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV1
  /v1/datasources/db-instances:
    get:
      operationId: searchDbInstances
      summary: Get SQL Server instances
      description: ''
      parameters:
        - name: type
          in: query
          description: DB instance namespace RM or Data Bridge
          schema:
            type: string
        - name: status
          in: query
          description: DB instance status active or inactive
          schema:
            type: string
      responses:
        '200':
          description: tenant DB instance list is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV1
  /v2/datasources:
    get:
      operationId: searchEdmsV2
      summary: Get EDMs
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
            default: datasourceName ASC
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: EDM list is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV2
    post:
      operationId: dbOperationsv2
      summary: Administer EDM
      description: ''
      parameters:
        - name: datasourcename
          in: query
          description: 'Unique name of EDM data source. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (space). Maximum length is 80 characters.'
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        - name: filename
          in: query
          description: >-
            Name of the file for download. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (space).
          schema:
            type: string
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        - name: operation
          in: query
          description: Database operation to perform. One of `CREATE`, `DOWNLOAD_EDM`, or `EDM_DATA_UPGRADE`.
          required: true
          schema:
            type: string
            enum:
              - CREATE
              - DOWNLOAD_EDM
              - EDM_DATA_UPGRADE
        - name: servername
          in: query
          description: Name of server instance hosting the EDM.
          schema:
            type: string
        - name: format
          in: query
          description: File format downloaded database artifact. By default, `BAK`.
          schema:
            type: string
            default: BAK
            enum:
              - CSV
              - PARQUET
              - BAK
              - MDF
        - name: sqlversion
          in: query
          description: SQL server version of exported BAK or MDF.
          schema:
            type: string
            default: '2014'
            enum:
              - '2014'
              - '2019'
      requestBody:
        description: Specify the edm request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdmRequest'
      responses:
        '202':
          description: 'Accepted: A `CREATE_EDM`, `DOWNLOAD_EDM`, or EDM_DATA_UPGRADE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job, e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV2
  '/v2/datasources/{datasourcename}':
    delete:
      operationId: deleteEdm_1
      summary: Delete EDM
      description: ''
      parameters:
        - name: datasourcename
          in: path
          description: Data source name
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV2
  /v2/datasources/db-instances:
    get:
      operationId: searchDbInstancesv2
      summary: Get SQL Server instances
      description: ''
      parameters:
        - name: type
          in: query
          description: DB instance namespace RM or Data Bridge
          schema:
            type: string
        - name: status
          in: query
          description: DB instance status active or inactive
          schema:
            type: string
      responses:
        '200':
          description: tenant DB instance list is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatasourcesV2
  '/v1/data-bridge/{serverId}/databases':
    get:
      operationId: getAvailableDatabases
      summary: Get data modules on Data Bridge
      description: ''
      parameters:
        - name: serverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: dbType
          in: query
          schema:
            type: string
            default: EDM
            enum:
              - EDM
              - RDM
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page of returned records starting at `0`.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List all available EDMs from DB instance is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBridgeDatabaseSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV1
  /v1/data-bridge/register:
    post:
      operationId: registerDatabase
      summary: Register EDM
      description: ''
      parameters:
        - name: datasourcename
          in: query
          description: Name of the datasource to register with Risk Modeler.
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV1
  '/v1/data-bridge/de-register/{datasourcename}':
    delete:
      operationId: deregisterDatabase
      summary: Deregister EDM
      description: ''
      parameters:
        - name: datasourcename
          in: path
          description: Data source name
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV1
  '/v2/data-bridge/{serverId}/databases':
    get:
      operationId: getAvailableDatabasesv2
      summary: Get data modules on Data Bridge
      description: ''
      parameters:
        - name: serverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: dbType
          in: query
          schema:
            type: string
            default: EDM
            enum:
              - EDM
              - RDM
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List all available EDMs from DB instance is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBridgeDatabaseSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV2
  /v2/data-bridge/register:
    post:
      operationId: registerDatabaseV2
      summary: Register EDM
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBridgeRegisterInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: |-
            Bad Request: Please check that you are provided all
              required values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV2
  '/v2/data-bridge/de-register/{datasourcename}':
    delete:
      operationId: deregisterDatabasev2
      summary: Deregister EDM
      description: ''
      parameters:
        - name: datasourcename
          in: path
          description: Data source name
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DatastoreV2
  /v1/domains:
    get:
      operationId: getDomainsv1
      summary: Get domains
      description: ''
      responses:
        '200':
          description: List of domains is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainReference'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace':
    get:
      operationId: getTablespacesv1
      summary: Get tablespaces
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of table spaces for a domain is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainReference'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities':
    get:
      operationId: getEntitiesv1
      summary: Get entities by domain tablespace
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of entities for a domain tablespace is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainReference'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities/{entity}':
    get:
      operationId: getEntitiesMetaOrValuesv1
      summary: Get entity by domain tablespace
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metadata for an entity in a domain tablespace is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityMeta'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
    post:
      operationId: createCurrencyv1
      summary: Create currency
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValueStore'
      responses:
        '201':
          description: Created. New Currency is created in the data source successfully.
          headers:
            Location:
              description: Location of the Currency resource.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict. Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities/{entity}/hazards':
    get:
      operationId: getHazardsv1
      summary: Get hazards
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
        - name: jsonfield
          in: query
          description: Name of the field user wants to fetch in the hazards.
          required: true
          schema:
            type: string
        - name: option
          in: query
          description: Optional attribute to filter the values. Defaults to returning all values.
          schema:
            type: string
        - name: tag
          in: query
          description: Name of the metadata tag.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sortby
          in: query
          description: The name of the field on which to sort the results.
          schema:
            type: string
        - name: sortorder
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of hazards for a specified domain/tablespace/entity is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities/{entity}/meta':
    get:
      operationId: getEntityAttributesv1
      summary: Get attributes domain tablespace entity
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
        - name: tag
          in: query
          description: Name of the metadata tag.
          schema:
            type: string
      responses:
        '200':
          description: Attributes for a specified entry in a domain tablespace are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities/{entity}/secondarymodifiers':
    get:
      operationId: getSecondaryModifiersv1
      summary: Get secondary modifiers
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
        - name: jsonfield
          in: query
          description: Name of the field user wants to fetch in the secondary modifiers.
          required: true
          schema:
            type: string
        - name: option
          in: query
          description: Optional attribute to filter the values. Defaults to returning all values.
          schema:
            type: string
        - name: tag
          in: query
          description: Name of the metadata tag.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sortby
          in: query
          description: The name of the field on which to sort the results.
          schema:
            type: string
        - name: sortorder
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page of returned records \ starting at _0_.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of secondary modifiers for a specified domain/tablespace/entity is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecondaryModifierResult'
        '400':
          description: 'Bad Request: Please check that you are provided all \ required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  '/v1/domains/{domainname}/tablespace/{tablespace}/entities/{entity}/values':
    get:
      operationId: getEntityValuesv1
      summary: Get entity values
      description: ''
      parameters:
        - name: domainname
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: tablespace
          in: path
          description: Name of the tablespace.
          required: true
          schema:
            type: string
        - name: entity
          in: path
          description: Name of the entity.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma delimited list of fields to be fetched. Defaults to all.
          schema:
            type: string
        - name: tag
          in: query
          description: Name of the metadata tag.
          schema:
            type: string
        - name: attributename
          in: query
          schema:
            type: string
        - name: sortby
          in: query
          description: This parameter is not currently used.
          schema:
            type: string
        - name: sortorder
          in: query
          description: This parameter is not currently used.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: Optional attribute to filter the values. Defaults to returning all values.
          schema:
            type: string
      responses:
        '200':
          description: Values for a specified domain/tablespace/entity is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - DomainsV1
  /v1/exports:
    post:
      operationId: exportDatav1
      summary: Export data module to file
      description: ''
      parameters:
        - name: servername
          in: query
          description: The optional `servername` query parameter specifies the name of the server.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: URL of the export job.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - ExportsV1
  /v1/exports/downloadresults:
    post:
      operationId: downloadResults
      summary: Download analysis results
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadResultsInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: Workflow relative URL
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download CSV/Parquet" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - ExportsV1
  /v2/exports:
    post:
      operationId: exportdatav2
      summary: Export data module to file
      description: ''
      parameters:
        - name: servername
          in: query
          description: The optional `servername` query parameter specifies the name of the server.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: URL of the export job.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ExportsV2
  /v3/exposurebatches:
    post:
      operationId: executeBatchOperationV3
      summary: Manage exposures in batch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: Content-Encoding
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkExposureInput'
        required: true
      responses:
        '202':
          description: Operation executed.
          headers:
            Location:
              description: URL of the batch workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Exposure BatchV3
  /v1/exposuresets:
    get:
      operationId: searchExposureSetId
      summary: Get exposure sets
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters applied to the query results of the `id` or `name` attribute. The operation supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Sort order for query results based on the `id` or `name` attribute. Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page of returned records starting at ''0''.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Exposure set list successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureSetSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Exposure SetsV1
  '/v1/exposuresets/{exposureSetId}':
    patch:
      operationId: updateExposureSet
      summary: Update exposure set
      parameters:
        - name: exposureSetId
          in: path
          description: ID of the exposure set to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Specify the patch request input
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PatchExposureSetReq'
      responses:
        '200':
          description: Update to exposure set name or group successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Exposure SetsV1
  '/v1/exposuresets/{exposureSetId}/groups':
    get:
      operationId: searchExposureSetGroups
      summary: Get groups by exposure set
      description: ''
      parameters:
        - name: exposureSetId
          in: path
          description: ID exposure set to update.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exposure set group list successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Exposure SetsV1
  /v1/storage:
    post:
      operationId: createBucket
      summary: Create storage bucket
      description: ''
      responses:
        '201':
          description: Storage bucket is successfully created.
          headers:
            Location:
              description: Location of the new bucket
              style: simple
              schema:
                type: string
                format: URI
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/storage/{bucketId}/files/{fileId}/aggregate-exposures-lists':
    post:
      operationId: extractAggregateExposureValues
      summary: Extract aggregate exposure values
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: Bucket ID
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          description: ID of the file.
          required: true
          schema:
            type: integer
            format: int32
        - name: delimiter
          in: query
          schema:
            type: string
            enum:
              - TAB
              - COMMA
              - SEMICOLON
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AggregatePortfolioFlatFileMapping'
        required: true
      responses:
        '201':
          description: List of aggregate exposure values retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateExposuresList'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/storage/{bucketId}/files/{fileId}/media':
    get:
      operationId: getFileContents
      summary: Get file URI by storage bucket
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: Bucket ID
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          description: ID of the file requested.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Media information for the specified file is successfully retrieved.
          headers:
            Content-Disposition:
              description: Pre-signed S3 URL for uploading database
              style: simple
              schema:
                type: string
                format: URI
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/storage/{bucketId}/files/aggregate-exposures-lists':
    post:
      operationId: saveObjectFromExtractedAlmFile
      summary: Get aggregate exposures
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: Bucket ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AggregateExposuresList'
        required: true
      responses:
        '201':
          description: Success saving.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/storage/{bucketId}/path':
    post:
      operationId: getBucketPath
      summary: Get file location on S3
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: Bucket ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileInput'
        required: true
      responses:
        '201':
          description: File id and S3 location is successfully retrieved.
          headers:
            Location:
              description: File Resource location
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Bucket'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  /v1/uploads:
    get:
      operationId: getUrlForUpload
      summary: Get storage bucket URL
      parameters:
        - name: filename
          in: query
          description: Name of the file. Includes the file extension.
          required: true
          schema:
            type: string
        - name: dbtype
          in: query
          description: 'Database type of the data source. One of `ANLSHAZARD`, `DLMPROFILES`, `EDM`, `EVENTINFO`, `GEOCODE`, `GEOGRAPHY`, `MAPCONFIG`, `NONE`, `RDM`, `REPORT`, `SYSTEMDATA`, `TABDATA`, `TARGET`, `USERCONFIG`, `UWG`, `VULNERABILITY`, `WEB`. '
          required: true
          schema:
            type: string
            enum:
              - NONE
              - EDM
              - USERCONFIG
              - EVENTINFO
              - RDM
              - WEB
              - TABDATA
              - TARGET
              - SYSTEMDATA
              - GEOGRAPHY
              - GEOCODE
              - MAPCONFIG
              - DLMPROFILES
              - VULNERABILITY
              - ANLSHAZARD
              - REPORT
              - UWG
        - name: fileextension
          in: query
          description: 'File extension of file. One of `BAK`, `CSV`, `MDF`, or `PARQUET`.'
          required: true
          schema:
            type: string
            enum:
              - CSV
              - PARQUET
              - BAK
              - MDF
      responses:
        '201':
          description: Bucket URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3UploadHelper'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/uploads/{uploadId}/edm':
    post:
      operationId: CreateUploadTask
      summary: Upload EDM
      description: ''
      parameters:
        - name: uploadId
          in: path
          description: ID for upload requested.
          required: true
          schema:
            type: string
        - name: datasource
          in: query
          description: Name of the EDM to be created. Data Source name can only contain characters from 0-9 A-Z a-z and _ (underscore) - (hyphen) and ' '(space)
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 1
            pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        - name: servername
          in: query
          description: Name of the server instance to host the EDM.
          schema:
            type: string
      requestBody:
        description: Specify the edm import input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdmImportInput'
      responses:
        '202':
          description: |
            Accepted: An `UPLOAD_EDM` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: Location of the file
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  '/v1/uploads/{uploadId}/rdm':
    post:
      operationId: CreateUploadTaskForRdm
      summary: Upload RDM
      description: ''
      parameters:
        - name: uploadId
          in: path
          description: ID for AWS upload task or name of RDM on Data Bridge.
          required: true
          schema:
            type: string
        - name: servername
          in: query
          description: Name of the server instance hosting the RDM. Required if `importFromServer` is `true`.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMImportInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: An `UPLOAD_RDM` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: Location of the file
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Databases/Exposure Sets" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - File StorageV1
  /v1/imports:
    post:
      operationId: createJob
      summary: Import exposures from file
      description: ''
      parameters:
        - in: header
          name: Accept-Language
          description: Language convention assumed for imported dates and numbers. By default, `en-US`.
          schema:
            type: string
            enum: [en-US, en-GB, de-DE, fr-FR]
            default: en-US
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmittedImportJob'
        required: true
      responses:
        '202':
          description: |
            Accepted: An `MRI_IMPORT` or `ALM_IMPORT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  '/v1/imports/createaccount/{bucketId}':
    post:
      operationId: createAccountData
      summary: Create account source file 
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: ID number of the <<glossary:storage bucket>>.
          required: true
          schema:
            type: integer
            format: int32
        - name: delimiter
          in: query
          description: |
            Text delimiter for account data. One of `TAB`, `COMMA`, `SEMICOLON`.
          schema:
            type: string
            enum:
              - TAB
              - COMMA
              - SEMICOLON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFileInput'
        required: true
      responses:
        '201':
          description: Created. Account file needed by MRI for running the import of account data is successfully created.
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  '/v1/imports/createmapping/{bucketId}':
    post:
      operationId: sendMapping
      summary: Create import mapping file
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: ID number of the <<glossary:storage bucket>>.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMappingInput'
        required: true
      responses:
        '201':
          description: Created. Mapping file is successfully created.
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  '/v1/imports/extractaccountsfromlocationfile/{bucketId}/{fileId}':
    get:
      operationId: extractAccountsFromLocationFile
      summary: Extract account data from MRI location file
      parameters:
        - name: bucketId
          in: path
          description: Bucket ID.
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
        - name: delimiter
          in: query
          schema:
            type: string
            enum:
              - TAB
              - COMMA
              - SEMICOLON
      responses:
        '200':
          description: Import job initiated.
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  '/v1/imports/extractmapping/{bucketId}/{fileId}':
    get:
      operationId: extractMapping
      summary: Extract data from MRI mapping file
      description: ''
      parameters:
        - name: bucketId
          in: path
          description: ID number of the <<glossary:storage bucket>>.
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Data from a specified mapping file is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMappingOutput'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  '/v1/imports/extractsample/{bucketId}/{fileId}':
    get:
      operationId: extractData
      summary: Extract data from MRI file
      parameters:
        - name: bucketId
          in: path
          description: ID number of the <<glossary:storage bucket>>.
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: delimiter
          in: query
          schema:
            type: string
            enum:
              - TAB
              - COMMA
              - SEMICOLON
      responses:
        '200':
          description: MRI extraction result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSourceFileResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Import Flat Files" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ImportsV1
  /v1/lobs:
    get:
      operationId: getLineOfBusinesss
      summary: Get lines of business
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get List of lineOfBusinesses in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineOfBusinessSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Line of BusinessV1
    post:
      operationId: createLineOfBusiness
      summary: Create line of business
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineOfBusiness'
        required: true
      responses:
        '201':
          description: New LineOfBusiness is created in the data source is successfully.
          headers:
            Location:
              description: Account resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Line of BusinessV1
  '/v1/lobs/{id}':
    get:
      operationId: getLineOfBusinessById
      summary: Get line of business by ID
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the LineOfBusiness.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: LineOfBusiness by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineOfBusiness'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Line of BusinessV1
    put:
      operationId: updateLineOfBusiness
      summary: Update line of business
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineOfBusiness'
        required: true
      responses:
        '204':
          description: LineOfBusiness is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Line of BusinessV1
    delete:
      operationId: deleteLineOfBusiness
      summary: Delete line of business
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: LineOfBusiness is deleted from the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Line of BusinessV1
  /v1/locations:
    get:
      operationId: searchLocations
      summary: Get locations
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: withflzone
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of locations is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    post:
      operationId: createLocation
      summary: Create location
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '201':
          description: Created. New location is successfully created.
          headers:
            Location:
              description: URL for the new location
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}':
    get:
      operationId: getLocation
      summary: Get location
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ' Information for a specified location is successfully retrieved.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocation
      summary: Update location
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '204':
          description: Location updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocation
      summary: Delete location
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationbidetail':
    post:
      operationId: createLocationBiDetail
      summary: Create BI peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationBiDetail'
        required: true
      responses:
        '201':
          description: Bi detail successfully created.
          headers:
            Location:
              description: Location of the new bi detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationbidetail/{locationbidetailid}':
    get:
      operationId: getLocationBiDetail
      summary: Get BI peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationbidetailid
          in: path
          description: ID number of the location bi detail record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns location BI detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBiDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationBiDetail
      summary: Update BI peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationbidetailid
          in: path
          description: ID number of the location bi detail record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationBiDetail'
        required: true
      responses:
        '204':
          description: Bi detail successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationBiDetail
      summary: Delete BI peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationbidetailid
          in: path
          description: ID number of the location bi detail record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Bi detail successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationcondition':
    post:
      operationId: createLocationCondition
      summary: Add location condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCondition'
        required: true
      responses:
        '201':
          description: Location condition successfully created
          headers:
            Location:
              description: Location of the new location condition
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  /v1/locations/locationcondition/batch:
    post:
      operationId: batchProcessLocationConditions
      summary: Manage location conditions in batch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        '201':
          description: Batch successfully initiated
          headers:
            Location:
              description: Location of the locationcondition/batch
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationcondition/{conditionid}':
    get:
      operationId: getLocationConditionById
      summary: Get location condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the location condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Building attribute successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildingAttribute'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationCondition
      summary: Update location condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the location condition record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCondition'
        required: true
      responses:
        '204':
          description: Location condition successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationCondition
      summary: Delete location condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the location condition record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location condition successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/coverage':
    post:
      operationId: createLocationCoverage
      summary: Create location coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCoverage'
        required: true
      responses:
        '201':
          description: Coverage successfully created.
          headers:
            Location:
              description: Location of the new coverage
              style: simple
              schema:
                type: string
                format: URI
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/coverage/{coverageid}':
    get:
      operationId: getLocationCoverage
      summary: Get location coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the location coverage record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCoverage'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationCoverage
      summary: Update coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the location coverage record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCoverage'
        required: true
      responses:
        '204':
          description: Coverage successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationCoverage
      summary: Delete location coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the location coverage record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location coverage successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationeqdetail':
    post:
      operationId: createLocationEqDetail
      summary: Create EQ peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationEqDetail'
        required: true
      responses:
        '201':
          description: EQ detail successfully created.
          headers:
            Location:
              description: Location of the new EQ detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationeqdetail/{locationeqdetailid}':
    get:
      operationId: getLocationEqDetail
      summary: Get EQ peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationeqdetailid
          in: path
          description: ID number of the location earthquake record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: EQ detail successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationEqDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationEqDetail
      summary: Update EQ peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationeqdetailid
          in: path
          description: ID number of the location earthquake record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationEqDetail'
        required: true
      responses:
        '204':
          description: EQ Detail Successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationEqDetail
      summary: Delete EQ peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationeqdetailid
          in: path
          description: ID number of the location earthquake record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: EQ detail successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationfldetail':
    post:
      operationId: createLocationFlDetail
      summary: Create FL peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationFlDetail'
        required: true
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of the new FL detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationfldetail/{locationfldetailid}':
    get:
      operationId: getLocationFlDetail
      summary: Get FL peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfldetailid
          in: path
          description: ID number of the location flood record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: FL detail successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationFlDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationFlDetail
      summary: Update FL peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfldetailid
          in: path
          description: ID number of the location flood record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationFlDetail'
        required: true
      responses:
        '204':
          description: FL detail successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationFlDetail
      summary: Delete FL peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfldetailid
          in: path
          description: ID number of the location flood record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: FL detail successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationfrdetail':
    post:
      operationId: createLocationFrDetail
      summary: Create FR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationFrDetail'
        required: true
      responses:
        '201':
          description: FR Detail successfully created
          headers:
            Location:
              description: Location of new FR detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationfrdetail/{locationfrdetailid}':
    get:
      operationId: getLocationFrDetail
      summary: Get FR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfrdetailid
          in: path
          description: ID number of the location fire record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: FR detail successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationFrDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationFrDetail
      summary: Update FR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfrdetailid
          in: path
          description: ID number of the location fire record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationFrDetail'
        required: true
      responses:
        '204':
          description: FR detail successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationFrDetail
      summary: Delete FR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationfrdetailid
          in: path
          description: ID number of the location fire record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: FR detail successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/cession':
    post:
      operationId: createLocationReinsuranceCession
      summary: Create reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinsuranceCession'
        required: true
      responses:
        '201':
          description: Created. New location is successfully created.
          headers:
            Location:
              description: url of the new location
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/cession/{cessionid}':
    get:
      operationId: getLocationReinsuranceCessionDetail
      summary: Get reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ReinsuranceCession details successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReinsuranceCession'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationReinsuranceCession
      summary: Update reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinsuranceCession'
        required: true
      responses:
        '204':
          description: Location reinsurance cession successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationReinsuranceCession
      summary: Delete reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location reinsurance cession successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationtodetail':
    post:
      operationId: createLocationToDetail
      summary: Create TO peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationToDetail'
        required: true
      responses:
        '201':
          description: TO detail successfully created
          headers:
            Location:
              description: Location of the new TO detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationtodetail/{locationtodetailid}':
    get:
      operationId: getLocationToDetail
      summary: Get TO peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtodetailid
          in: path
          description: ID number of the location tornado record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TO detail successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationToDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationToDetail
      summary: Update TO peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtodetailid
          in: path
          description: ID number of the location tornado record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationToDetail'
        required: true
      responses:
        '204':
          description: TO detail successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationToDetail
      summary: Delete TO peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtodetailid
          in: path
          description: ID number of the location tornado record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: TO detail successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationtrdetail':
    post:
      operationId: createLocationTrDetail
      summary: Create TR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTrDetail'
        required: true
      responses:
        '201':
          description: Location TR details successfully created.
          headers:
            Location:
              description: Location of Location TR Details
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationtrdetail/{locationtrdetailid}':
    get:
      operationId: getLocationTrDetail
      summary: Get TR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtrdetailid
          in: path
          description: ID number of the location terrorism record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location TR detail successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTrDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationTrDetail
      summary: Update TR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtrdetailid
          in: path
          description: ID number of the location terrorism record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTrDetail'
        required: true
      responses:
        '204':
          description: Location TR detail successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationTrDetail
      summary: Delete TR peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationtrdetailid
          in: path
          description: ID number of the location terrorism record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location TR detail successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationwcdetail':
    post:
      operationId: createLocationWcDetail
      summary: Create WC
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWcDetail'
        required: true
      responses:
        '201':
          description: Location WC details successfully created
          headers:
            Location:
              description: Location of Location WC Detail
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationwcdetail/{locationwcdetailid}':
    get:
      operationId: getLocationWcDetail
      summary: Get WC
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwcdetailid
          in: path
          description: ID number of the location worker compensation record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location WC detail successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWcDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationWcDetail
      summary: Update WC
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwcdetailid
          in: path
          description: ID number of the location worker compensation record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWcDetail'
        required: true
      responses:
        '204':
          description: Location WC details successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationWcDetail
      summary: Delete WC
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwcdetailid
          in: path
          description: ID number of the location worker compensation record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location WC detail successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationwsdetail':
    post:
      operationId: createLocationWsDetail
      summary: Create WS peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWsDetail'
        required: true
      responses:
        '201':
          description: Location WS Details successfully created
          headers:
            Location:
              description: Location of Location WS Details
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/locationwsdetail/{locationwsdetailid}':
    get:
      operationId: getLocationWsDetail
      summary: Get WS peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwsdetailid
          in: path
          description: ID number of the location windstorm record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location WS Detail successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWsDetail'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateLocationWsDetail
      summary: Update WS peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwsdetailid
          in: path
          description: ID number of the location windstorm record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWsDetail'
        required: true
      responses:
        '204':
          description: Location WS Detail successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteLocationWsDetail
      summary: Delete WS peril
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: locationwsdetailid
          in: path
          description: ID number of the location windstorm record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Location WS Detail successfully deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/buildingattribute':
    post:
      operationId: createBuildingAttribute
      summary: Create building attribute
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAttribute'
        required: true
      responses:
        '201':
          description: Building attribute successfully created
          headers:
            Location:
              description: Location of the new building attribute
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/buildingattribute/{buildingattributeid}':
    get:
      operationId: getBuildingAttribute
      summary: Get building attribute
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: buildingattributeid
          in: path
          description: ID number of the building attribute.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Building attribute successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingAttribute'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    put:
      operationId: updateBuildingAttribute
      summary: Update building attribute
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: buildingattributeid
          in: path
          description: ID number of the location building attribute record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAttribute'
        required: true
      responses:
        '204':
          description: Building attribute updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLinks'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
    delete:
      operationId: deleteBuildingAttribute
      summary: Delete building attribute
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: buildingattributeid
          in: path
          description: ID number of the location building attribute record.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Building attribute successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  /v1/locations/geocode:
    post:
      operationId: geoCodeByAddress
      summary: Geocode address
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        '200':
          description: The geocoding of the address is successfully performed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/geocode':
    post:
      operationId: geoCodeByLocationId
      summary: Geocode or hazard location
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerInfo'
        required: true
      responses:
        '201':
          description: Created. The location geocod request is created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  '/v1/locations/{id}/policyconditions':
    get:
      operationId: getPolicyConditions
      summary: Get policy conditions by location
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ' Policy conditions successfully retrieved.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - LocationV1
  /v1/analyses:
    get:
      operationId: getAnalysesResults
      summary: Get results 
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: All Analyses successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: |-
            Forbidden: Access to this resource is denied or not authorized to
              perform the View Results action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
    delete:
      operationId: deleteAnalyses
      summary: Delete result
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        '204':
          description: A list of Analyses deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the Edit Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}':
    put:
      operationId: runRenameAnalysis
      summary: Rename result
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of analysis result. Must be valid analysis ID.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameAnalysisInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `RENAME_ANALYSIS` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Rename Analysis" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
    delete:
      operationId: deleteAnalysis
      summary: Delete result
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Analysis deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the Edit Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/analysis-region':
    get:
      operationId: getAnalysisRegions
      summary: Get region details
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: List of region details for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRegionSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/cedants':
    get:
      operationId: getCedantsByAnalysisv1
      summary: Get cedants by result 
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          schema:
            type: string
      responses:
        '200':
          description: List of Cedants in the analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CedantSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/climate-change':
    post:
      operationId: runClimateChange
      summary: Calculate climate change
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of <<glossary:base analysis>> result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimateChangeInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CLIMATE_CHANGE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/convertcurrency':
    post:
      operationId: convertResultCurrency
      summary: Convert result currency
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConvertResultCurrencyInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CONVERT_RESTULT_CURRENCY` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: |-
            Forbidden: Access to this resource is denied or not authorized to
              perform the Convert Result Currency action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/convert-event-rate-loss':
    post:
      operationId: convertAnalysisEvent
      summary: Convert event rates and losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertEventInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CONVERT_EVENT_LOSS_RATE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: |-
            Forbidden: Access to this resource is denied or not authorized to
              perform the Convert Event Rates action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/ep':
    get:
      operationId: getEPMetricsByAnalysis
      summary: Get EP metrics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: ID of treaty applied to result.
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed.
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: metricType
          in: query
          description: Type of metric. One of `ELT`, `EP`, or `STATS`. 
          schema:
            type: string
      responses:
        '200':
          description: List of EP metrics for a specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricsOutput'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/ep/interpolate':
    get:
      operationId: getEPInterpolateMetricResults
      summary: Get EP interpolation results
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: ID of treaty applied to result.
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed.
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: key
          in: query
          description: Metric Key name
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: Metric Key value
          schema:
            type: number
            format: double
        - name: metricType
          in: query
          description: Type of metric. One of `ELT`, `EP`, or `STATS`. 
          schema:
            type: string
      responses:
        '200':
          description: List of Interpolation EP results successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricsOutput'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/elt':
    get:
      operationId: getEventLossTableResults
      summary: Get ELT
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 'Number of records displayed per page, maximum is _100000_. Default is _100_.'
          schema:
            maximum: 100000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: "Number of pages offset before the first page of returned records. By default, _0_."
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: eventIds
          in: query
          description: IDs of events analyzed.
          schema:
            type: array
            items:
              type: integer
              format: int32
            maxItems: 25
            minItems: 0
            uniqueItems: true
      responses:
        '200':
          description: Report for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/metrics':
    get:
      operationId: getMetrics
      summary: Get metrics
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: metricType
          in: query
          description: Type of metrics. One of `ELT`, `EP`, `STATS`.
          required: true
          schema:
            type: string
            enum:
              - STATS
              - ELT
              - EP
        - name: position
          in: query
          description: Array of <<glossary:financial perspective>>s.
          required: true
          schema:
            type: array
            items:
              type: string
        - name: granularity
          in: query
          description: granularity.
          schema:
            type: array
            items:
              type: string
              default: policy
              enum:
                - POLICY
        - name: epType
          in: query
          description: ep Type.
          schema:
            type: array
            items:
              type: string
              enum:
                - OEP
                - AEP
                - TCE_AEP
                - TCE_OEP
        - name: returnPeriod
          in: query
          description: returnPeriod.
          schema:
            type: array
            items:
              type: integer
              format: int32
            maxItems: 12
            minItems: 0
        - name: filterCondition
          in: query
          description: Filter condition.
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 1000
        - name: offset
          in: query
          description: Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: metrics for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/keylosses':
    get:
      operationId: getNonEpKeyLoss
      summary: Get key losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: Key Losses for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/location-aal':
    get:
      operationId: getAALMetrics
      summary: Get location AAL
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
            default: AAL DESC
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 1000
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Location AAL for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAALResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the View Results action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/map-perspective':
    post:
      operationId: mapPerspective
      summary: Convert financial perspectives
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapPerspectiveInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `MAP_PERSPECTIVE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Financial Re-Mapping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/marginal-impact':
    post:
      operationId: marginalImpactv1
      summary: Calculate marginal impact report
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of a portfolio-level <<glossary:reference analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarginalImpactInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `MARGINAL_IMPACT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      displayName:
                        type: string
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  status:
                    type: integer
                    format: int32
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        uriBuilder:
                          type: object
                        rels:
                          type: array
                          items:
                            type: string
                        rel:
                          type: string
                        type:
                          type: string
                        uri:
                          type: string
                          format: uri
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        title:
                          type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Marginal Impact" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/pate':
    post:
      operationId: processPate
      summary: Recalculate result with PATE
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of a <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: groupInfoOnly
          in: query
          description: Group info only
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PateInput'
      responses:
        '202':
          description: |
            Accepted: A `PATE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/perspectives':
    get:
      operationId: getPerspectivesForAnalysis
      summary: Get financial perspectives
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Values of all available perspectives for a given analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/plt':
    get:
      operationId: getPeriodLossTableResults
      summary: Get PLT
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 'Number of records displayed per page, maximum is _100000_. Default is _100_.'
          schema:
            maximum: 100000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: "Number of pages offset before the first page of returned records. By default, _0_."
          schema:
            type: integer
            format: int32
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: PLT report for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/rerun-ep':
    post:
      operationId: reRunEp
      summary: Recalculate result EP and statistics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '202':
          description: |
            Accepted: A `RERUN_EP` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Rerun Ep" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/sampledlosses':
    get:
      operationId: getSampledLoss
      summary: Get sampled losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: events
          in: query
          description: EventIds list
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sampled Losses for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampledLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/simulate-losses':
    post:
      operationId: runELTToPLTConversion
      summary: Simulate PLT analysis
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateELTToPLTInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `SIMULATE_LOSSES` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "ELT to PLT Simulation" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{id}/stats':
    get:
      operationId: getStatisticsResults
      summary: Get statistics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: List of Statistics for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatisticsItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/treaties':
    get:
      operationId: getTreatiesList
      summary: Get treaties by result
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of treaties in the Analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  '/v1/analyses/{analysisID}/treaty/{treatyID}':
    get:
      operationId: getTreatyById
      summary: Get treaty by result
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
        - name: treatyID
          in: path
          description: Treaty ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Treaty for a specified analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV1
  /v2/analyses:
    get:
      operationId: getAnalysesResultsv2
      summary: Get results 
      description: ''
      parameters:
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: userName
          in: query
          description: Name of <<glossary:principal>> that submitted the workflow.
          schema:
            type: string
        - name: runDate
          in: query
          description: Date that the analysis was run.
          schema:
            type: string
      responses:
        '200':
          description: All Analyses successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
    delete:
      operationId: deleteAnalysesv2
      summary: Delete results
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        '204':
          description: A list of Analyses deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}':
    put:
      operationId: runRenameAnalysisv2
      summary: Rename result 
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result to be renamed. 
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameAnalysisInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `RENAME_ANALYSIS` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Rename Analysis" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
    delete:
      operationId: deleteAnalysisv2
      summary: Delete result
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Analysis deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/analysis-region':
    get:
      operationId: getAnalysisRegionsv2
      summary: Get region details
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: List of region details for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRegionSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/cedants':
    get:
      operationId: getCedantsByAnalysisv2
      summary: Get cedants by result 
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          schema:
            type: string
      responses:
        '200':
          description: List of Cedants in the analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CedantSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/climate-change':
    post:
      operationId: runClimateChangev2
      summary: Calculate climate change
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of <<glossary:base analysis>> result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimateChangeInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CLIMATE_CHANGE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/convert-event-rate-loss':
    post:
      operationId: convertAnalysisEventv2
      summary: Convert event rates and losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertEventInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CONVERT_EVENT_LOSS_RATE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Convert Event Rates" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/convertcurrency':
    post:
      operationId: convertResultCurrencyv2
      summary: Convert result currency
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConvertResultCurrencyInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `CONVERT_RESULT_CURRENCY` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Convert Result Currency" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/elt':
    get:
      operationId: getEventLossTableResultsv2
      summary: Get ELT
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 'Number of records displayed per page, maximum is _100000_. Default is _100_.'
          schema:
            maximum: 100000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: "Number of pages offset before the first page of returned records. By default, _0_."
          schema:
            type: integer
            format: int32
        - name: treatyId
          in: query
          description: ID of treaty applied to result.
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed.
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: eventIds
          in: query
          description: IDs of events analyzed.
          schema:
            type: array
            items:
              type: integer
              format: int32
            maxItems: 25
            minItems: 0
            uniqueItems: true
      responses:
        '200':
          description: Report for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/ep':
    get:
      operationId: getEPMetricsByAnalysisv2
      summary: Get EP metrics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: ID of treaty applied to result.
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed.
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: metricType
          in: query
          description: Type of metric. One of `ELT`, `EP`, or `STATS`.
          schema:
            type: string
      responses:
        '200':
          description: List of EP metrics for a specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricsOutput'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/ep/interpolate':
    get:
      operationId: getEPInterpolateMetricResultsv2
      summary: Get EP interpolation results
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: Exposure ID
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: key
          in: query
          description: Metric Key name
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: Metric Key value
          schema:
            type: number
            format: double
        - name: metricType
          in: query
          description: Type of metric. One of `ELT`, `EP`, or `STATS`. 
          schema:
            type: string
      responses:
        '200':
          description: List of Interpolation EP results successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricsOutput'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/keylosses':
    get:
      operationId: getNonEpKeyLossv2
      summary: Get key losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed. 
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: Key Losses for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/location-aal':
    get:
      operationId: getAALMetricsv2
      summary: Get location AAL
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
            default: AAL DESC
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 1000
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Location AAL for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAALResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/map-perspective':
    post:
      operationId: mapPerspectivev2
      summary: Convert financial perspectives
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapPerspectiveInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `MAP_PERSPECTIVE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Financial Re-Mapping" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/marginal-impact':
    post:
      operationId: marginalImpactv2
      summary: Calculate marginal impact report
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of a portfolio-level <<glossary:reference analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarginalImpactInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `MARGINAL_IMPACT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      displayName:
                        type: string
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  status:
                    type: integer
                    format: int32
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        uriBuilder:
                          type: object
                        rels:
                          type: array
                          items:
                            type: string
                        rel:
                          type: string
                        type:
                          type: string
                        uri:
                          type: string
                          format: uri
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        title:
                          type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Marginal Impact" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/metrics':
    get:
      operationId: getMetricsv2
      summary: Get metrics
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: metricType
          in: query
          description: Type of metrics. One of `ELT`, `EP`, `STATS`.
          required: true
          schema:
            type: string
            enum:
              - STATS
              - ELT
              - EP
        - name: position
          in: query
          description: Array of <<glossary:financial perspective>>s.
          required: true
          schema:
            type: array
            items:
              type: string
        - name: granularity
          in: query
          description: granularity.
          schema:
            type: array
            items:
              type: string
              default: policy
              enum:
                - POLICY
        - name: epType
          in: query
          description: ep Type.
          schema:
            type: array
            items:
              type: string
              enum:
                - OEP
                - AEP
                - TCE_AEP
                - TCE_OEP
        - name: returnPeriod
          in: query
          description: returnPeriod.
          schema:
            type: array
            items:
              type: integer
              format: int32
            maxItems: 12
            minItems: 0
        - name: filterCondition
          in: query
          description: Filter condition.
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 1000
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: metrics for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/pate':
    post:
      operationId: processPatev2
      summary: Recalculate result with PATE
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the <<glossary:base result>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: groupInfoOnly
          in: query
          description: Group info only
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PateInput'
      responses:
        '202':
          description: |
            Accepted: A `PATE` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/pate-batch':
    delete:
      operationId: deletePateBatchv2
      summary: Delete PATE treaties
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PateBatchInput'
        required: true
      responses:
        '204':
          description: Deleted. PATE treaties for given analysis deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/pate-treaties':
    get:
      operationId: getPateListv2
      summary: Get PATE treaties
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of treaties in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PateSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
    delete:
      operationId: deletePateListv2
      summary: Delete PATE treaties by result 
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Deleted. PATE treaties for analysis deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/perspectives':
    get:
      operationId: getPerspectivesForAnalysisv2
      summary: Get financial perspectives
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Values of all available perspectives for a given analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/plt':
    get:
      operationId: getPeriodLossTableResultsv2
      summary: Get PLT
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 'Number of records displayed per page, maximum is _100000_. Default is _100_.'
          schema:
            maximum: 100000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: "Number of pages offset before the first page of returned records. By default, _0_."
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed. 
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: PLT report for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/rerun-ep':
    post:
      operationId: reRunEpv2
      summary: Recalculate result EP and statistics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number the <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '202':
          description: |
            Accepted: A `RERUN_EP` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Rerun Ep" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/sampledlosses':
    get:
      operationId: getSampledLossv2
      summary: Get sampled losses
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: 'Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed. 
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: events
          in: query
          description: EventIds list
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sampled Losses for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampledLossItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/simulate-losses':
    post:
      operationId: runELTToPLTConversionv2
      summary: Simulate PLT analysis
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of <<glossary:base analysis>>.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateELTToPLTInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A `SIMULATE_LOSSES` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  status:
                    type: integer
                    format: int32
                  length:
                    type: integer
                    format: int32
                  location:
                    type: string
                    format: uri
                  language:
                    type: object
                    properties:
                      language:
                        type: string
                      script:
                        type: string
                      country:
                        type: string
                      variant:
                        type: string
                      extensionKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleAttributes:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      unicodeLocaleKeys:
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                      iso3Language:
                        type: string
                      iso3Country:
                        type: string
                      displayLanguage:
                        type: string
                      displayScript:
                        type: string
                      displayCountry:
                        type: string
                      displayVariant:
                        type: string
                      displayName:
                        type: string
                  statusInfo:
                    type: object
                    properties:
                      family:
                        type: string
                        enum:
                          - INFORMATIONAL
                          - SUCCESSFUL
                          - REDIRECTION
                          - CLIENT_ERROR
                          - SERVER_ERROR
                          - OTHER
                      statusCode:
                        type: integer
                        format: int32
                      reasonPhrase:
                        type: string
                  mediaType:
                    type: object
                    properties:
                      type:
                        type: string
                      subtype:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      wildcardType:
                        type: boolean
                      wildcardSubtype:
                        type: boolean
                  allowedMethods:
                    type: array
                    items:
                      type: string
                    uniqueItems: true
                  cookies:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        version:
                          type: integer
                          format: int32
                        path:
                          type: string
                        domain:
                          type: string
                        comment:
                          type: string
                        maxAge:
                          type: integer
                          format: int32
                        expiry:
                          type: string
                          format: date-time
                        secure:
                          type: boolean
                        httpOnly:
                          type: boolean
                  entityTag:
                    type: object
                    properties:
                      value:
                        type: string
                      weak:
                        type: boolean
                  stringHeaders:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  lastModified:
                    type: string
                    format: date-time
                  date:
                    type: string
                    format: date-time
                  headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                  entity:
                    type: object
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        params:
                          type: object
                          additionalProperties:
                            type: string
                        uri:
                          type: string
                          format: uri
                        title:
                          type: string
                        uriBuilder:
                          type: object
                        rel:
                          type: string
                        rels:
                          type: array
                          items:
                            type: string
                    uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "ELT to PLT Simulation" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/stats':
    get:
      operationId: getStatisticsResultsv2
      summary: Get statistics
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: perspective
          in: query
          description: Financial perspective.
          required: true
          schema:
            type: string
        - name: treatyId
          in: query
          description: Treaty ID
          schema:
            type: integer
            format: int32
        - name: exposureId
          in: query
          description: ID of exposure analyzed. 
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: exposureType
          in: query
          description: |
            Exposure identified by four-digit code, e.g. `8017` (portfolio), `8019` (account), `8020` (location).
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: List of Statistics for specified analysis successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatisticsItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{id}/summary_report':
    post:
      operationId: summaryReportMetricsv2
      summary: Generate summary report
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisSummaryReportInput'
        required: true
      responses:
        '202':
          description: |
            Accepted: A workflow job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download Report" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/treaties':
    get:
      operationId: getTreatiesListv2
      summary: Get treaties by result 
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of treaties in the Analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  '/v2/analyses/{analysisID}/treaty/{treatyID}':
    get:
      operationId: getTreatyByIdv2
      summary: Get treaty by result
      description: ''
      parameters:
        - name: analysisID
          in: path
          description: ID number of result.
          required: true
          schema:
            type: integer
            format: int32
        - name: treatyID
          in: path
          description: Treaty ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Treaty for a specified analysis is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - MetricsV2
  /v1/pate-treaties:
    post:
      operationId: createPateTreaty
      summary: Create PATE treaty
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pate'
        required: true
      responses:
        '201':
          description: The PATE Treaty resource was successfully created.
          headers:
            Location:
              description: Location of the PATE Treaty resource.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PateV1
  '/v1/pate-treaties/{pateId}':
    get:
      operationId: getPateById
      summary: Get PATE treaty
      description: ''
      parameters:
        - name: pateId
          in: path
          description: Pate ID of pate.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Treaty for a specified account are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pate'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PateV1
    put:
      operationId: updatePateTreaty
      summary: Update PATE treaty
      description: ''
      parameters:
        - name: pateId
          in: path
          description: ID of the PATE treaty to be updated.
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pate'
        required: true
      responses:
        '204':
          description: The PATE Treaty resource was successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PateV1
    delete:
      operationId: deletePateTreaty
      summary: Delete PATE treaty
      description: ''
      parameters:
        - name: pateId
          in: path
          description: ID number of the pate treaty.
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: The PATE Treaty resource is successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Post Analysis Treaty Execution" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PateV1
  /v1/policies:
    get:
      operationId: searchPolicies
      summary: Get policies
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of policies is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    post:
      operationId: createPolicy
      summary: Create policy
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '201':
          description: Policy is successfully created.
          headers:
            Location:
              description: Location of the new policy
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  /v1/policies/copy:
    post:
      operationId: copyPolicy
      summary: Copy policy
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyPolicyInfo'
        required: true
      responses:
        '200':
          description: Existing policy is successfully copied.
          headers:
            Location:
              description: Policy id of the copy policy
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}':
    get:
      operationId: getPolicy
      summary: Get policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information on a specified policy is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    put:
      operationId: updatePolicy
      summary: Update policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '204':
          description: Policy successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    delete:
      operationId: deletePolicy
      summary: Delete policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/cession':
    post:
      operationId: createPolicyReinsuranceCession
      summary: Create reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinsuranceCession'
        required: true
      responses:
        '201':
          description: Reinsurance cession for a specified policy is successfully created.
          headers:
            Location:
              description: Location of the new policy reinsurance cession
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/cession/{cessionid}':
    get:
      operationId: getPolicyReinsuranceCession
      summary: Get reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the Cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reinsurance cession retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReinsuranceCession'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    put:
      operationId: updatePolicyReinsuranceCession
      summary: Update reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the Cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinsuranceCession'
        required: true
      responses:
        '204':
          description: Reinsurance cession successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    delete:
      operationId: deletePolicyReinsuranceCession
      summary: Delete reinsurance cession
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: cessionid
          in: path
          description: ID number of the Cession.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Reinsurance cession successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/coverage':
    post:
      operationId: createPolicyCoverage
      summary: Create policy coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCoverage'
        required: true
      responses:
        '201':
          description: Policy coverage successfully created.
          headers:
            Location:
              description: Location of the new policy coverage
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/coverage/{coverageid}':
    get:
      operationId: getPolicyCoverage
      summary: Get policy coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the Policy Coverage.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information on a specified poliy coverage is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverage'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    put:
      operationId: updatePolicyCoverage
      summary: Update policy coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the Policy Coverage.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCoverage'
        required: true
      responses:
        '204':
          description: Policy coverage successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    delete:
      operationId: deletePolicyCoverage
      summary: Delete policy coverage
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: coverageid
          in: path
          description: ID number of the Policy Coverage.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy coverage successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition':
    post:
      operationId: createPolicyCondition
      summary: Create policy condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCondition'
        required: true
      responses:
        '201':
          description: Condition for a specified policy is successfully created.
          headers:
            Location:
              description: location of the new policy condition
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition/{conditionid}':
    get:
      operationId: getPolicyCondition
      summary: Get policy condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information for a condition specified by its ID for a policy specified by its ID is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    put:
      operationId: updatePolicyCondition
      summary: Update policy condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCondition'
        required: true
      responses:
        '204':
          description: Policy condition successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    delete:
      operationId: deletePolicyCondition
      summary: Delete policy condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy condition successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition/{conditionid}/backfill':
    post:
      operationId: backFillPolicyCondition
      summary: Back fill policy condition
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition/{conditionid}/criteria':
    post:
      operationId: createPolicyConditionCriteria
      summary: Create policy condition criteria
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyConditionCriteria'
        required: true
      responses:
        '201':
          description: Policy condition successfully created
          headers:
            Location:
              description: Location of the new policy condition criteria
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition/{conditionid}/criteria/{criteriaid}':
    get:
      operationId: getPolicyConditionCriteria
      summary: Get policy condition criteria
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: criteriaid
          in: path
          description: ID number of the Policy Condition Criteria.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information for the specified policy condition criteria is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyConditionCriteria'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    put:
      operationId: updatePolicyConditionCriteria
      summary: Update policy condition criteria
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: criteriaid
          in: path
          description: ID number of the Policy Condition Criteria.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyConditionCriteria'
        required: true
      responses:
        '204':
          description: Policy condition criteria successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
    delete:
      operationId: deletePolicyConditionCriteria
      summary: Delete policy condition criteria
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: criteriaid
          in: path
          description: ID number of the Policy Condition Criteria.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy condition criteria successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/policycondition/{conditionid}/locationconditions':
    get:
      operationId: getLocationConditions
      summary: Get location conditions
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: conditionid
          in: path
          description: ID number of the Policy Condition.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location conditions for a specified policy condition are successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCondition'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/conditions/{id}':
    get:
      operationId: getPolicyConditionTemplates
      summary: Get policy condition
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information for a specified policy condition is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  '/v1/policies/{id}/surplustreaties':
    get:
      operationId: getSurplusTreaties
      summary: Get surplus treaties
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of surplus treaties for a specified policy is successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PolicyV1
  /v1/policyconditions:
    get:
      operationId: getAllPolicyConditions
      summary: Get policy conditions
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves all policy conditions in the EDM
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Policy ConditionV1
  /v1/portfolios:
    get:
      operationId: searchPortfolios
      summary: Get portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of portfolios retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
    post:
      operationId: createPortfolio
      summary: Create portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
        required: true
      responses:
        '201':
          description: Portfolio created.
          headers:
            Location:
              description: Portfolio resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}':
    get:
      operationId: getPortfolio
      summary: Get portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio information retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
    put:
      operationId: updatePortfolio
      summary: Update portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
        required: true
      responses:
        '204':
          description: Portfolio successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
    delete:
      operationId: deletePortfolio
      summary: Delete portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: deleteType
          in: query
          description: 'The scope of the data deleted: `PORTFOLIO_INFO`, `PORTFOLIO_ALL_ACCOUNTS`, or `PORTFOLIO_EXCEPT_ACCOUNTS`'
          required: true
          schema:
            type: string
            enum:
              - PORTFOLIO_INFO
              - PORTFOLIO_ALL_ACCOUNTS
              - PORTFOLIO_EXCEPT_ACCOUNTS
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/accounts':
    get:
      operationId: searchPortfolioAccounts
      summary: Get accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of accounts retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
    put:
      operationId: managePortfolioAccounts
      summary: Manage accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioAccountsInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/analyses':
    get:
      operationId: getPortfolioAnalysesResults
      summary: Get analyses by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/convertcurrency':
    post:
      operationId: convertPortfolioCurrency
      summary: Convert currency by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/coordinate':
    get:
      operationId: getCoordinateByLatitudeAndLongitudePortfolio
      summary: Get portfolio locations
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: Latitude coordinates.
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude coordinates.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Location coordinate retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/coordinates':
    get:
      operationId: getCoordinatesByPortfolio
      summary: Get location coordinates by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location coordinates retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/copy':
    post:
      operationId: copyPortfolio
      summary: Copy portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyPortfolioInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  /v1/portfolios/count:
    get:
      operationId: getExposureCountPortfolio
      summary: Count portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/filteredaccounts':
    put:
      operationId: manageFilteredAccounts
      summary: Manage filtered accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PortfolioFilteredAccountsInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/geohaz':
    post:
      operationId: geohazPortfolio
      summary: Geohazard portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/metrics':
    get:
      operationId: getPortfolioMetrics
      summary: Get metrics by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  '/v1/portfolios/{id}/process':
    post:
      operationId: processPortfolio
      summary: Analyze portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: true
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  /v1/portfolios/{id}/reports:
    get:
      tags:
        - PortfolioV1
      summary: Get portfolio reports
      description: ''
      operationId: portfolioReportsv1
      parameters:
        - name: id
          in: path
          description: ID number of portfolio.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of reports successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden: Access to this resource is denied or not authorized to
            perform the "View Portfolios" action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  '/v1/portfolios/{id}/summary_report':
    post:
      operationId: summaryReportPortfolio
      summary: Generate summary report by portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureSummaryReportInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download Report" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  /v1/exposurebatches:
    post:
      operationId: executeBatchOperation
      summary: Manage portfolio exposures in batch
      description: ''
      parameters:
        - name: operation
          in: query
          description: Operation of batch resource
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchRequest'
      responses:
        '200':
          description: Operation executed.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV1
  /v2/portfolios:
    get:
      operationId: searchPortfoliosv2
      summary: Get portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of portfolios retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
    post:
      operationId: createPortfoliov2
      summary: Create portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
        required: true
      responses:
        '201':
          description: Portfolio created.
          headers:
            Location:
              description: Portfolio resource
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  /v2/portfolios/count:
    get:
      operationId: getExposureCountPortfoliov2
      summary: Count portfolios
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}':
    get:
      operationId: getPortfoliov2
      summary: Get portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio information retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
    put:
      operationId: updatePortfoliov2
      summary: Update portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
        required: true
      responses:
        '204':
          description: Portfolio successfully updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
    delete:
      operationId: deletePortfoliov2
      summary: Delete portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: deleteType
          in: query
          description: 'The scope of the data deleted: `PORTFOLIO_INFO`, `PORTFOLIO_ALL_ACCOUNTS`, or `PORTFOLIO_EXCEPT_ACCOUNTS`'
          required: true
          schema:
            type: string
            enum:
              - PORTFOLIO_INFO
              - PORTFOLIO_ALL_ACCOUNTS
              - PORTFOLIO_EXCEPT_ACCOUNTS
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/accounts':
    get:
      operationId: searchPortfolioAccountsv2
      summary: Get accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of accounts retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
    put:
      operationId: managePortfolioAccountsv2
      summary: Manage accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioAccountsInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/analyses':
    get:
      operationId: getPortfolioAnalysesResultsV2
      summary: Get results by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page returned records. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: userName
          in: query
          description: Name of <<glossary:principal>> that submitted the workflow.
          schema:
            type: string
        - name: runDate
          in: query
          description: Date that the analysis was run.
          schema:
            type: string
      responses:
        '200':
          description: Analyses for exposure successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSearchResultV2'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Results" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/convertcurrency':
    post:
      operationId: convertPortfolioCurrencyv2
      summary: Convert currency by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/coordinate':
    get:
      operationId: getCoordinateByLatitudeAndLongitudePortfoliov2
      summary: Get portfolio locations
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: Latitude coordinates.
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude coordinates.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Location coordinate retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/coordinates':
    get:
      operationId: getCoordinatesByPortfoliov2
      summary: Get location coordinates by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location coordinates retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/filteredaccounts':
    put:
      operationId: manageFilteredAccountsv2
      summary: Manage filtered accounts by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PortfolioFilteredAccountsInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/copy':
    post:
      operationId: copyPortfoliov2
      summary: Copy portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyPortfolioInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/geohaz':
    post:
      operationId: geohazPortfoliov2
      summary: Geohazard portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerInfo'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/metrics':
    get:
      operationId: getPortfolioMetricsv2
      summary: Get metrics by portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics for a specified portfolio are successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMetrics'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Portfolios" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  '/v2/portfolios/{id}/process':
    post:
      operationId: processPortfolioV2
      summary: Analyze portfolio
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessInputV2'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Add to Analysis Builder" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  /v2/portfolios/{id}/reports:
    get:
      tags:
        - PortfolioV2
      summary: Get portfolio reports
      description: ''
      operationId: portfolioReportsv2
      parameters:
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: >
            Specify `ASC` to display the results in alphabetical or numerical ascending order or `DESC` to display the results in descending order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page of returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of reports successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden: Access to this resource is denied or not authorized to
            perform the "View Portfolios" action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  '/v2/portfolios/{id}/summary_report':
    post:
      operationId: summaryReportPortfoliov2
      summary: Generate summary report by portfolio
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the portfolio.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureSummaryReportInput'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: url containing identifier of the submitted workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Download Report" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  /v1/producers:
    get:
      operationId: getProducers
      summary: Get producers
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of producers in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ProducerV1
    post:
      operationId: createProducer
      summary: Create producer
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
        required: true
      responses:
        '201':
          description: New producer is created in the data source is successfully.
          headers:
            Location:
              description: 'location of the new Producer '
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: '409'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ProducerV1
  /v1/producers/{id}:
    get:
      operationId: getProducerById
      summary: Get producer by ID
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the Producer.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producer by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ProducerV1
    put:
      operationId: updateProducer
      summary: Update producer
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
        required: true
      responses:
        '204':
          description: Producer is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ProducerV1
    delete:
      operationId: deleteProducer
      summary: Delete producer
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      responses:
        '204':
          description: Producer is deleted from the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - ProducerV1
  /v1/reports/{id}:
    get:
      tags:
        - ReportsV1
      summary: Get report
      description: ''
      operationId: getReportById
      parameters:
        - name: id
          in: path
          description: ID of the report.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
        - name: datasource
          in: query
          description: Name of EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Report Details successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSearchItem'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
    put:
      tags:
        - ReportsV1
      summary: Update report
      description: ''
      operationId: updateReport
      parameters:
        - name: id
          in: path
          description: ID number of report.
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInfoRequest'
        required: true
      responses:
        '204':
          description: Report updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  /v1/reports:
    get:
      tags:
        - ReportsV1
      summary: Get reports
      description: ''
      operationId: searchReports
      parameters:
        - name: exposureId
          in: query
          description: ID number of exposure.
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: exposureType
          in: query
          description: Type of exposure, e.g. `ACCOUNT`, `PORTFOLIO`.
          required: true
          schema:
            type: string
            enum:
              - PORTFOLIO
              - ACCOUNT
              - LOCATION
              - POLICY
              - STEP_POLICY
              - TREATY
              - AGGPORTFOLIO
        - name: datasource
          in: query
          description: Name of EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: >
            Specify `ASC` to display the results in alphabetical or numerical
            ascending order or `DESC` to display the results in descending
            order.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >-
            Number of pages that are offset before the initial page of records returned. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of reports successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
  /v1/steppolicies:
    get:
      operationId: searchStepPolicies
      summary: Get step policies
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records returned per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of step policies is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepPolicySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
    post:
      operationId: createStepPolicy
      summary: Create step policy
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepPolicy'
        required: true
      responses:
        '201':
          description: Step Policy is successfully created.
          headers:
            Location:
              description: Location of the new step policy
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
  /v1/steppolicies/copy:
    post:
      operationId: copyStepPolicy
      summary: Copy step policy
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyStepPolicyInfo'
        required: true
      responses:
        '201':
          description: Existing step policy is successfully copied.
          headers:
            Location:
              description: Step policy id of the copy step policy
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
  '/v1/steppolicies/{id}':
    get:
      operationId: getStepPolicy
      summary: Get step policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the step policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information on a specified step policy is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepPolicy'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
    put:
      operationId: updateStepPolicy
      summary: Update step policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the step policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepPolicy'
        required: true
      responses:
        '204':
          description: Step policy successfully updated
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
    delete:
      operationId: deleteStepPolicy
      summary: Delete step policy
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the step policy.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Step policy successfully deleted
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - Step PolicyV1
  /v1/treaties:
    get:
      operationId: getTreatiesByFilters
      summary: Get treaties
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records returned per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of pages offset before the first page returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of treaties retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatySearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    post:
      operationId: createTreaty
      summary: Create treaty
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Treaty'
        required: true
      responses:
        '201':
          description: Treaty created.
          headers:
            Location:
              description: Treaty
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  /v1/treaties/count:
    get:
      operationId: getExposureCountTreaty
      summary: Count treaties
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaty count successfully retrieved.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  /v1/treaties/getbytype:
    get:
      operationId: getTreaties
      summary: Get treaties by type
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Type of treaty.
          required: true
          schema:
            type: string
        - name: exposuretype
          in: query
          description: Type of exposure. Specify 'POL' for policy abd 'LOC' for location.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of treaties retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{id}':
    get:
      operationId: getTreaty
      summary: Get treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaty retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treaty'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    put:
      operationId: updateTreaty
      summary: Update treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the treaty.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Treaty'
        required: true
      responses:
        '204':
          description: Treaty updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    delete:
      operationId: deleteTreaty
      summary: Delete treaty
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Treaty deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{id}/convertcurrency':
    post:
      operationId: convertCurrencyTreaty
      summary: Convert currency by treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the treaty.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{id}/copy':
    post:
      operationId: copyTreaty
      summary: Copy treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the treaty.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyTreatyInfo'
        required: true
      responses:
        '201':
          description: Treaty copied.
          headers:
            Location:
              description: Treaty
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{id}/lob':
    post:
      operationId: createTreatyLob
      summary: Create LOB by treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the location.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineOfBusiness'
        required: true
      responses:
        '201':
          description: Treaty line of business created.
          headers:
            Location:
              description: location of the new policy condition criteria
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{id}/lob/{lobid}':
    get:
      operationId: getTreatyLob
      summary: Get LOB by treaty
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the treaty.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: lobid
          in: path
          description: ID number of the lob.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaty line of business retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineOfBusiness'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    delete:
      operationId: deleteTreatyLob
      summary: Delete treaty LOB
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of the treaty.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: lobid
          in: path
          description: ID number of the lob.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Treaty line of business deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  /v1/treaties/lob/batch:
    post:
      operationId: batchProcessTreatyLobs
      summary: Manage treaty LOBs in batch
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        '200':
          description: Treaty batch executed.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    metadata:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: object
                    status:
                      type: integer
                      format: int32
                    length:
                      type: integer
                      format: int32
                    location:
                      type: string
                      format: uri
                    language:
                      type: object
                      properties:
                        language:
                          type: string
                        script:
                          type: string
                        country:
                          type: string
                        variant:
                          type: string
                        extensionKeys:
                          type: array
                          items:
                            type: string
                          uniqueItems: true
                        unicodeLocaleAttributes:
                          type: array
                          items:
                            type: string
                          uniqueItems: true
                        unicodeLocaleKeys:
                          type: array
                          items:
                            type: string
                          uniqueItems: true
                        iso3Language:
                          type: string
                        iso3Country:
                          type: string
                        displayLanguage:
                          type: string
                        displayScript:
                          type: string
                        displayCountry:
                          type: string
                        displayVariant:
                          type: string
                        displayName:
                          type: string
                    statusInfo:
                      type: object
                      properties:
                        family:
                          type: string
                          enum:
                            - INFORMATIONAL
                            - SUCCESSFUL
                            - REDIRECTION
                            - CLIENT_ERROR
                            - SERVER_ERROR
                            - OTHER
                        statusCode:
                          type: integer
                          format: int32
                        reasonPhrase:
                          type: string
                    mediaType:
                      type: object
                      properties:
                        type:
                          type: string
                        subtype:
                          type: string
                        parameters:
                          additionalProperties:
                            type: string
                          type: object
                        wildcardType:
                          type: boolean
                        wildcardSubtype:
                          type: boolean
                    allowedMethods:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    cookies:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                          version:
                            type: integer
                            format: int32
                          path:
                            type: string
                          domain:
                            type: string
                          comment:
                            type: string
                          maxAge:
                            type: integer
                            format: int32
                          expiry:
                            type: string
                            format: date-time
                          secure:
                            type: boolean
                          httpOnly:
                            type: boolean
                    entityTag:
                      type: object
                      properties:
                        value:
                          type: string
                        weak:
                          type: boolean
                    stringHeaders:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                    lastModified:
                      type: string
                      format: date-time
                    date:
                      type: string
                      format: date-time
                    headers:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: object
                    entity:
                      type: object
                    links:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          params:
                            type: object
                            additionalProperties:
                              type: string
                          uri:
                            type: string
                            format: uri
                          title:
                            type: string
                          uriBuilder:
                            type: object
                          rel:
                            type: string
                          rels:
                            type: array
                            items:
                              type: string
                      uniqueItems: true
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{treatyId}/lossoccurrences':
    get:
      operationId: getLossOccurrences
      summary: Get loss occurrences by treaty
      description: ''
      parameters:
        - name: treatyId
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of treaty loss occurrences retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LossOccurrence'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    post:
      operationId: createLossOccurrence
      summary: Create loss occurrence
      description: ''
      parameters:
        - name: treatyId
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LossOccurrence'
        required: true
      responses:
        '201':
          description: treaty loss occurrence created.
          headers:
            Location:
              description: treaty loss occurrence
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  '/v1/treaties/{treatyId}/lossoccurrences/{lossOccurrenceId}':
    get:
      operationId: getLossOccurrence
      summary: Get loss occurrence by treaty
      description: ''
      parameters:
        - name: treatyId
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: lossOccurrenceId
          in: path
          description: Treaty loss occurrence Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Treaty loss occurrences retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossOccurrence'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    put:
      operationId: updateLossOccurrence
      summary: Update loss occurrence
      description: ''
      parameters:
        - name: treatyId
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: lossOccurrenceId
          in: path
          description: Treaty loss occurrence Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LossOccurrence'
        required: true
      responses:
        '204':
          description: Treaty loss occurrence updated.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
    delete:
      operationId: deleteLossOccurrence
      summary: Delete loss occurrence
      description: ''
      parameters:
        - name: treatyId
          in: path
          description: Treaty Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: lossOccurrenceId
          in: path
          description: Treaty loss occurrence Id.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Treaty loss occurrence deleted.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Treaties" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - TreatyV1
  /v1/underwriters:
    get:
      operationId: getUnderwriters
      summary: Get underwriters
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records returned per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages offset before the first page returned records. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of underwriters in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnderwriterSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UnderwriterV1
    post:
      operationId: createUnderwriter
      summary: Create underwriter
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnderWriter'
        required: true
      responses:
        '201':
          description: Created. New underwriter is created in the data source is successfully.
          headers:
            Location:
              description: Location of the new Underwriter
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict. Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UnderwriterV1
  '/v1/underwriters/{id}':
    get:
      operationId: getUnderwriterById
      summary: Get underwriter
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the underwriter.
          required: true
          schema:
            type: integer
            format: int32
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Underwriter by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnderWriter'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Underwriter not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UnderwriterV1
    put:
      operationId: updateUnderwriter
      summary: Update underwriter
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the underwriter.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnderWriter'
        required: true
      responses:
        '204':
          description: Underwriter is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UnderwriterV1
    delete:
      operationId: deleteUnderwriter
      summary: Delete underwriter
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the underwriter.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Underwriter is deleted from the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Contract Tags" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UnderwriterV1
  /v1/utils/convert/criteriatoquery:
    post:
      operationId: convertPolicyCriteriaToQueryString
      summary: Convert policy condition to query
      description: ''
      requestBody:
        description: List of policy condition criteria.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionCriteria'
        required: true
      responses:
        '200':
          description: Policy condition criteria is successfully converted into a query string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryEntity'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
  /v1/utils/convert/portfoliocriteriatoquery:
    post:
      operationId: convertPortfolioCriteriaToQueryString
      summary: Convert portfolio condition to query
      description: ''
      requestBody:
        description: List of policy condition criteria.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PortfolioConditionCriteria'
        required: true
      responses:
        '200':
          description: Policy condition criteria is successfully converted into a query string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryEntity'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
  /v2/exposurebatches:
    post:
      operationId: executeBatchOperationv2
      summary: Manage portfolio exposures in batch
      description: ''
      parameters:
        - name: operation
          in: query
          description: Operation of batch resource
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchRequest'
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - PortfolioV2
  /v1/faclayers:
    get:
      operationId: getFacultatives
      summary: Get facultataives
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |-
            Filters query results by evaluating the value of expressions. Supports four types of operators:
            * Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`
            * Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name="xyz"` , `id=100 OR type="abc"`
            * List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN ("abc","xyz")`
            * Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE "abc "` , `type NOT LIKE " xyz* "`
            To learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).
          schema:
            type: string
        - name: sort
          in: query
          description: Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to display per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages that are offset before the initial page of records returned. By default, _0_.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of facultataives in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultativeSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Facultative Cessions" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
    post:
      operationId: createFacultative
      summary: Create facultative
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facultative'
        required: true
      responses:
        '201':
          description: New facultative is created in the data source is successfully.
          headers:
            Location:
              description: Location of the new Facultative
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Facultative Cessions" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict. Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
  '/v1/faclayers/{id}':
    get:
      operationId: getFacultativeById
      summary: Get facultative by ID
      description: ''
      parameters:
        - name: id
          in: path
          description: ID of the faclutative.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facultative by Id in the data source is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facultative'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "View Facultative Cessions" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Facultative not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
    put:
      operationId: updateFacultative
      summary: Update facultative
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the facultative.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facultative'
        required: true
      responses:
        '204':
          description: Facultative is updated in the data source is successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Facultative Cessions" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
    delete:
      operationId: deleteFacultative
      summary: Delete facultative
      description: ''
      parameters:
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the facultative.
          required: true
          schema:
            type: string
            maxLength: 2147483647
            minLength: 1
      responses:
        '204':
          description: Deleted. Facultative is deleted from the data source successfully.
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource is denied or not authorized to perform the "Edit Facultative Cessions" action.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - UtilityV1
  /v1/globaledit/dryrun:
    post:
      operationId: dryRun
      summary: Update exposures dry run
      description: ''
      parameters:
        - name: exposureId
          in: query
          description: ID of exposure.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: exposureType
          in: query
          description: 'Exposure type: ACCOUNT or PORTFOLIO.'
          required: true
          schema:
            type: string
            enum:
              - PORTFOLIO
              - ACCOUNT
              - LOCATION
              - POLICY
              - STEP_POLICY
              - TREATY
              - AGGPORTFOLIO
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: The bulk edit dry run was successfully performed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      tags:
        - UtilityV1
  /v1/globaledit:
    post:
      operationId: globalEdit
      summary: Update exposures
      description: ''
      parameters:
        - name: exposureId
          in: query
          description: ID of exposure.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: exposureType
          in: query
          description: 'Exposure type: `ACCOUNT` or `PORTFOLIO`.'
          required: true
          schema:
            type: string
            enum:
              - PORTFOLIO
              - ACCOUNT
              - LOCATION
              - POLICY
              - STEP_POLICY
              - TREATY
              - AGGPORTFOLIO
        - name: datasource
          in: query
          description: Name of the EDM.
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '202':
          description: |
            Accepted: A `BULK_EDIT` job was added to the workflow engine queue for processing. Returns a URL in the `Location` header that enables you to track the status of the job e.g. `/{host}/v1/workflows/100000`. Send periodic HTTP GET requests to the URL for the job status. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: workflowId
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      tags:
        - UtilityV1
  '/v1/workflows':
    get:
      operationId: getWorkflowsv1
      summary: Get workflows
      description: ''
      parameters:
        - name: ids
          in: query
          description: Comma-separated list of workflow IDs.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records displayed per page.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >
            Number of pages that are offset before the initial page of records returned. By default, _0_.
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: >
            Status of the workflow, e.g. `QUEUED`,`RUNNING`, `FINISHED`, `FAILED`, `CANCELLED`, `PENDING`, `CANCELLING`, `CANCEL_REQUESTED`.
          schema:
            type: string
        - name: workflowtype
          in: query
          description: Type of the workflow, e.g. `ANALYTICS_JOB`.
          schema:
            type: string
        - name: from
          in: query
          description: Timestamp of earliest submission date.
          schema:
            type: string
        - name: to
          in: query
          description: Timestamp of latest submission date.
          schema:
            type: string
        - name: username
          in: query
          description: Name of <<glossary:principal>> that submitted the workflow.
          schema:
            type: string
        - name: workflowname
          in: query
          description: Name of workflow.
          schema:
            type: string
        - name: sortby
          in: query
          description: Attribute on which to sort returned records.
          schema:
            type: string
        - name: sortorder
          in: query
          description: >
            Sort order (alphabetical or numerical) of returned records. One of `ASC` or `DESC`.
          schema:
            type: string
        - name: scheduled
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of workflows retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSearchResult'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - WorkflowsV1
    post:
      operationId: createUserDefinedWorkflow
      summary: Process user-defined workflow
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedWorkflow'
      responses:
        '202':
          description: |
            Accepted: User-defined workflow job with the specified `workflowId` was added to the workflow engine queue for processing. Returns URL in `Location` header that enables you to track the status of the job, e.g. `/{host}/v1/workflows/10000`. See [Workflow Engine](https://developer.rms.com/rms-developers/docs/workflow-engine).
          headers:
            Location:
              description: URL of the batch workflow.
              style: simple
              schema:
                type: string
                format: URI
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - WorkflowsV1
  '/v1/workflows/{id}':
    get:
      operationId: getWorkflowv1
      summary: Get workflow or operation
      description: ''
      parameters:
        - name: id
          description: ID number of a workflow job or workflow operation.
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: query
          description: >
            ID number of the <<glossary:user-defined workflow>> that is the parent of the workflow operation.
          schema:
            type: string
      responses:
        '200':
          description: Workflow or operation retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '204':
          description: Content not ready for the requested operation. It may be retried after a delay
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - WorkflowsV1
    delete:
      operationId: cancelWorkflowv1
      summary: Cancel workflow
      description: ''
      parameters:
        - name: id
          in: path
          description: ID number of a workflow job.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).'
        '400':
          description: 'Bad Request: Please check that you are provided all required values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: 'Forbidden: Access to this resource has been denied.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - RMS_Auth: []
      tags:
        - WorkflowsV1
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        logId:
          type: string
    AnalysisGroup:
      type: object
      properties:
        groupId:
          type: integer
          format: int64
        propagateDetailedLosses:
          type: boolean
        analysisIds:
          type: array
          items:
            type: integer
            format: int64
        rateSchemes:
          type: array
          items:
            $ref: '#/components/schemas/EventRateScheme'
        name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        description:
          type: string
        currency:
          type: string
      required:
        - name
    EventRateScheme:
      type: object
      properties:
        modelRegionCode:
          type: string
          maxLength: 4
          minLength: 4
        perilCode:
          type: string
          maxLength: 2
          minLength: 2
        modelVersion:
          type: string
        eventRateSchemeName:
          type: string
        eventRateSchemeId:
          type: integer
          format: int32
        isDefault:
          type: boolean
        isActive:
          type: boolean
    AnalysisGroupSearchResult:
      type: object
      properties:
        totalMatchCount:
          type: integer
          format: int64
        searchMatchingAnalysisGroupList:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisGroup'
    Cedant:
      description: A risk-holding party (insurer/reinsurer) that is transferring a portion of risk to another risk-holding party (reinsurer/retrocessionaire).
      type: object
      properties:
        id:
          type: string
          maxLength: 20
          minLength: 0
          pattern: '^\w([\w-]*\w|)$'
        name:
          type: string
          maxLength: 40
          minLength: 0
      required:
        - name
    ExposureValue:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
    LineOfBusiness:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 20
          minLength: 0
      required:
        - name
    LossOccurrence:
      type: object
      properties:
        id:
          type: integer
          format: int32
        treatyId:
          type: integer
          format: int32
        regionPeril:
          $ref: '#/components/schemas/ExposureValue'
        lossOccurrenceTime:
          type: integer
          format: int32
        lossOccurrenceRadius:
          type: integer
          format: int32
        radiusUnit:
          $ref: '#/components/schemas/ExposureValue'
        multiLossOccurrence:
          $ref: '#/components/schemas/ExposureValue'
      required:
        - treatyId
    Producer:
      description: Agent or brokerage firm that produced a policy. 
      type: object
      properties:
        id:
          type: string
          maxLength: 20
          minLength: 0
          pattern: '^\w([\w-]*\w|)$'
        name:
          type: string
          maxLength: 40
          minLength: 0
      required:
        - name
    TreatyWithAnalysisInfo:
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        treatyNumber:
          type: string
          maxLength: 20
          minLength: 0
        treatyName:
          type: string
          maxLength: 40
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        treatyType:
          $ref: '#/components/schemas/ExposureValue'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        attachBasis:
          $ref: '#/components/schemas/ExposureValue'
        attachLevel:
          $ref: '#/components/schemas/ExposureValue'
        premium:
          type: number
          format: double
        occurLimit:
          type: number
          format: double
        attachPt:
          type: number
          format: double
        riskLimit:
          type: number
          format: double
        retentAmt:
          type: number
          format: double
        pcntPlaced:
          type: number
          format: double
        effectDate:
          type: string
        expireDate:
          type: string
        pcntRetent:
          type: number
          format: double
        pcntRiShare:
          type: number
          format: double
        pcntCovered:
          type: number
          format: double
        priority:
          type: integer
          format: int32
        numOfReinst:
          type: integer
          format: int32
        reinstCharge:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        isValid:
          type: boolean
        userId1:
          type: string
        userId2:
          type: string
        lobs:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
        aggregateDeductible:
          type: number
          format: double
        aggregateLimit:
          type: number
          format: double
        lossOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/LossOccurrence'
        analysisId:
          type: integer
          format: int64
        analysisName:
          type: string
      required:
        - attachLevel
        - cedant
        - treatyNumber
        - treatyType
    ConvertEventInput:
      type: object
      properties:
        analysisName:
          description: |
            The name for the analysis with converted rates and/or losses. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (blank space).  String cannot start or end with a hyphen (`-`), colon (`:`), or blank space and cannot include multiple consecutive hyphens (`--`).
          type: string
          example: NewAnalysisName
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        eventRateSchemeIds:
          description: |
            Array of <<glossary:event rate scheme>>s identified by ID number.
          type: array
          items:
            type: integer
            format: int32
        eventLossAdjustmentSchemeIds:
          description: |
            Array of <<glossary:event loss adjustment scheme>>s identified by ID number.
          type: array
          items:
            type: integer
            format: int32
    ConvertResultCurrencyInput:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
    Currency:
      type: object
      properties:
        code:
          type: string
        scheme:
          type: string
        asOfDate:
          type: string
        vintage:
          type: string
      required:
        - asOfDate
        - code
        - scheme
        - vintage
    PateBatchInput:
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        pateId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int32
        analysisId:
          type: integer
          format: int32
        treatyType:
          type: string
    AnalysisSummaryReportInput:
      type: object
      properties:
        perilList:
          type: array
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
        reportName:
          type: string
      required:
        - perilList
    LocationAAL:
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        locationName:
          type: string
        locationNumber:
          type: string
        aal:
          type: number
          format: double
        standardDeviation:
          type: number
          format: double
        coefficientOfVariation:
          type: number
          format: double
    LocationAALResult:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        locationAALs:
          type: array
          items:
            $ref: '#/components/schemas/LocationAAL'
    AnalysesItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        runDate:
          type: string
        description:
          type: string
        currency:
          type: string
        type:
          type: integer
          format: int32
        exposureType:
          type: integer
          format: int32
        peril:
          type: string
        status:
          type: integer
          format: int32
        region:
          type: string
        engineVersion:
          type: string
        groupType:
          type: string
        cedant:
          type: string
        lob:
          type: string
        engineType:
          type: integer
          format: int32
        subperil:
          type: integer
          format: int32
        exposureId:
          type: integer
          format: int32
        dataSource:
          type: string
        jobId:
          type: integer
          format: int64
        jobUUID:
          type: string
        isGroup:
          type: boolean
        engineName:
          type: string
        statusName:
          type: string
        typeName:
          type: string
        subperilName:
          type: string
        rdmName:
          type: string
        regroup:
          type: integer
          format: int32
        currencyName:
          type: string
        perilName:
          type: string
        regionName:
          type: string
        lossAmplification:
          type: integer
          format: int32
        lossAmplificationName:
          type: string
        mode:
          type: integer
          format: int32
        modeName:
          type: string
        insuranceType:
          type: integer
          format: int32
        insuranceTypeName:
          type: string
        vulnerabilityCurve:
          type: integer
          format: int32
        vulnerabilityCurveName:
          type: string
        riGuid:
          type: string
    AnalysisSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/AnalysesItem'
    AnalysisRegionSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/RegionItem'
    RegionItem:
      type: object
      properties:
        region:
          type: string
        subRegion:
          type: string
        peril:
          type: string
        rateschemeid:
          type: integer
          format: int32
    CedantSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/Cedant'
    Bucket:
      type: object
    MetricMetadata:
      type: object
      properties:
        eventWeightId:
          type: integer
          format: int32
        parameters:
          items:
            type: string
          type: array
    MetricValue:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        value:
          $ref: '#/components/schemas/Value'
        bucket:
          $ref: '#/components/schemas/Bucket'
    MetricsOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        workflowId:
          type: integer
          format: int64
          example: 9064540 
        structure:
          type: string
        position:
          type: string
          example: GU
        portfolioId:
          type: integer
          format: int32
          example: 8
        variationId:
          type: integer
          format: int32
          example: 0
        dimensions:
          type: array
          items:
            type: string
        metricName:
          type: string
          example: AEP
        metricMetadata:
          $ref: '#/components/schemas/MetricMetadata'
        modelSettings:
          $ref: '#/components/schemas/ModelSettings'
        metricValue:
          type: array
          items:
            $ref: '#/components/schemas/MetricValue'
        exposureNumber:
          type: string
    ModelSettings:
      type: object
      properties:
        modelProfileId:
          type: integer
          format: int32
        currency:
          $ref: '#/components/schemas/Currency'
        minLossThreshold:
          type: number
          format: float
        numPeriods:
          type: integer
          format: int32
    Value:
      type: object
      properties:
        returnPeriods:
          type: array
          items:
            type: number
            format: double
          example: [1.0, 2.0, 3.0]
        positionValues:
          type: array
          items:
            type: number
            format: double
          example: [1.4336826286215238, 1.4336826286215238, 1.4336826286215238]
    EPInterpolateResult:
      type: object
      properties:
        returnPeriod:
          type: number
          format: double
        criticalProbability:
          type: number
          format: double
        result:
          type: array
          items:
            $ref: '#/components/schemas/Result'
    Result:
      type: object
      properties:
        perspective:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/Values'
    Values:
      type: object
      properties:
        metricName:
          type: string
        metricValue:
          type: number
          format: double
    EventLossItem:
      type: object
      properties:
        anlsid:
          type: integer
          format: int32
          example: 83343
        id:
          type: integer
          format: int32
          example: 8
        sourceid:
          type: integer
          format: int32
          example: 22267
        eventid:
          type: integer
          format: int32
          example: 2865697
        perspvalue:
          type: number
          format: double
          example: 3473657.880534969
        perspcode:
          type: string
          example: GU 
        stddevi:
          type: number
          format: double
          example: 1066771.2741421806
        stddevc:
          type: number
          format: double
          example: 400576.7724183246
        expvalue:
          type: number
          format: double
          example: 4343900.0
        rate:
          type: number
          format: double
          example: 1.2056769946866552E-6
        status:
          type: integer
          format: int32
          example: 0
        peril:
          type: string
          example: Windstorm
        region:
          type: string
          example: North America
        oepWUC:
          type: number
          format: double
          example: 1.205676267823641E-6
        exposureNumber:
          type: string
    MetricsResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int32
        metricType:
          type: string
          enum:
            - STATS
            - ELT
            - EP
        granularities:
          type: array
          items:
            type: string
            enum:
              - POLICY
        metrics:
          type: array
          items:
            type: object
    KeyLossItem:
      type: object
      properties:
        eventid:
          type: integer
          format: int32
        stddev:
          type: number
          format: double
        meanloss:
          type: number
          format: double
        cv:
          type: number
          format: double
    Pate:
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        treatyNumber:
          type: string
          maxLength: 20
          minLength: 0
        treatyName:
          type: string
          maxLength: 40
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        treatyType:
          $ref: '#/components/schemas/ExposureValue'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        attachBasis:
          $ref: '#/components/schemas/ExposureValue'
        attachLevel:
          $ref: '#/components/schemas/ExposureValue'
        premium:
          type: number
          format: double
        occurLimit:
          type: number
          format: double
        attachPt:
          type: number
          format: double
        riskLimit:
          type: number
          format: double
        retentAmt:
          type: number
          format: double
        pcntPlaced:
          type: number
          format: double
        effectDate:
          type: string
        expireDate:
          type: string
        pcntRetent:
          type: number
          format: double
        pcntRiShare:
          type: number
          format: double
        pcntCovered:
          type: number
          format: double
        priority:
          type: integer
          format: int32
        numOfReinst:
          type: integer
          format: int32
        reinstCharge:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        isValid:
          type: boolean
        userId1:
          type: string
        userId2:
          type: string
        lobs:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
        aggregateDeductible:
          type: number
          format: double
        aggregateLimit:
          type: number
          format: double
        lossOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/LossOccurrence'
        analysisId:
          type: integer
          format: int32
        pateId:
          type: integer
          format: int64
        operationType:
          type: string
          enum:
            - INSERT
            - DELETE
            - UPDATE
            - COPY
            - IMPORT
        groupId:
          type: integer
          format: int32
      required:
        - attachLevel
        - cedant
        - treatyNumber
        - treatyType
    PateSearchResult:
      type: object
      properties:
        totalMatchCount:
          type: integer
          format: int32
        searchMatchingPateList:
          type: array
          items:
            $ref: '#/components/schemas/Pate'
    PeriodLossItem:
      type: object
      properties:
        periodid:
          type: integer
          format: int32
        weight:
          type: number
          format: double
        eventid:
          type: integer
          format: int32
        eventdate:
          type: string
        lossdate:
          type: string
        perspvalue:
          type: number
          format: double
        peril:
          $ref: '#/components/schemas/ExposureValue'
        region:
          $ref: '#/components/schemas/ExposureValue'
        exposureNumber:
          type: string
    EntityItem:
      type: object
      properties:
        domainName:
          type: string
        tableSpace:
          type: string
        tableName:
          type: string
        dataOwnedBy:
          type: string
        values:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isActive:
          type: boolean
    EntityResult:
      type: object
      properties:
        entitiesTotalMatch:
          type: integer
          format: int64
        entityItems:
          $ref: '#/components/schemas/EntityItem'
    SampledLossItem:
      type: object
      properties:
        cedant:
          type: string
        lob:
          type: string
        losstype:
          type: string
        sampleid:
          type: integer
          format: int32
        eventid:
          type: integer
          format: int32
        loss:
          type: number
          format: double
    StatisticsItem:
      type: object
      properties:
        anlsid:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        perspcode:
          type: string
        eptype:
          type: string
        purepremium:
          type: number
          format: double
        totalstddev:
          type: number
          format: double
        netpurepremium:
          type: number
          format: double
        activation:
          type: number
          format: double
        exhaustion:
          type: number
          format: double
        totlossratio:
          type: number
          format: double
        limit:
          type: number
          format: double
        premium:
          type: number
          format: double
        netstddev:
          type: number
          format: double
        exhaustallreinstatements:
          type: number
          format: double
        exposurenumber:
          type: string
    Treaty:
      description: >
        A reinsurance contract between an underwriter and a primary insurer that applies to a collection of related exposures. Under the terms of the treaty, the primary insurer (for example, a cedant) transfers risk to the underwriter in exchange for a premium and the reinsurer assumes financial responsibility for that risk.
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        treatyNumber:
          type: string
          maxLength: 20
          minLength: 0
        treatyName:
          type: string
          maxLength: 40
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        treatyType:
          description: The treaty type.
          $ref: '#/components/schemas/ExposureValue'
        currency:
          description: 'Indicates treaty currency. All monetary fields for a single treaty are considered to be in the same currency. However, treaties can be in a different currency than the exposures to which they are being attached. During analysis, Risk Modeler converts all currencies to the analysis currency..'
          $ref: '#/components/schemas/ExposureValue'
        attachBasis:
          $ref: '#/components/schemas/ExposureValue'
        attachLevel:
          $ref: '#/components/schemas/ExposureValue'
        premium:
          type: number
          format: double
        occurLimit:
          description: Maximum amount that a treaty pays out for all locations for any event.
          type: number
          format: double
        attachPt:
          description: Value at which the treaty takes effect.
          type: number
          format: double
        riskLimit:
          type: number
          format: double
        retentAmt:
          type: number
          format: double
        pcntPlaced:
          type: number
          format: double
        effectDate:
          type: string
        expireDate:
          type: string
        pcntRetent:
          description: Percentage of the reinsurer's share of the treaty losses that are not covered by retrocessions. Determines the losses for the reinsurance net loss financial perspective and the net premium that a reinsurer receives for a treaty. Calculated as reinsurance gross loss multiplied by the percentage retention by treaty.
          type: number
          format: double
        pcntRiShare:
          type: number
          format: double
        pcntCovered:
          description: Percentage of loss greater than the attachment point covered by a treaty. Not applicable to Surplus Share treaties.
          type: number
          format: double
        priority:
          type: integer
          format: int32
        numOfReinst:
          type: integer
          format: int32
        reinstCharge:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        isValid:
          type: boolean
        userId1:
          type: string
        userId2:
          type: string
        lobs:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
        aggregateDeductible:
          type: number
          format: double
        aggregateLimit:
          type: number
          format: double
        lossOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/LossOccurrence'
      required:
        - attachLevel
        - cedant
        - treatyNumber
        - treatyType
    TreatySearchResult:
      type: object
      properties:
        totalMatchCount:
          type: integer
          format: int64
        searchMatchingTreatyList:
          type: array
          items:
            $ref: '#/components/schemas/Treaty'
    MapPerspectiveInput:
      type: object
      properties:
        analysisName:
          description: |
            The name for the analysis with converted rates and/or losses. Valid characters: `0`-`9`, `A`-`Z`, `a`-`z`, `_` (underscore), `-` (hyphen), and '' '' (blank space).  String cannot start or end with a hyphen (`-`), colon (`:`), or blank space and cannot include multiple consecutive hyphens (`--`).
          type: string
          example: NewAnalysisName
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        sourcePerspective:
          description: Two character string for <<glossary:financial perspective>> in base analysis.
          type: string
        newPerspective:
          description: Two character string for financial perspective in new analysis.
          type: string
        mapPerspectiveOption:
          description: |
            Option for mapping financial perspectives.
            * If `INCLUDE_DOWNSTREAM`, maps `sourcePerspective` to `newPerspective` and copies mapping to all downstream perspectives except `RG` and `RN`. Downstream perspectives (except `RG` and `RN`) return same results as the specified `newPerspective`.
            * If `DELETE_OTHER`, maps `sourcePerspective` to `newPerspective` and deletes records for all perspectives other than `newPerspective` including `sourcePerspective`. All perspectives other than the `newPerspective` return a value of 0.
            * If `SELECT_OTHER`, maps the `sourcePerspective` to `newPerspective`. All other downstream and upstream perspectives are unchanged.
          type: string
          enum:
            - INCLUDE_DOWNSTREAM
            - DELETE_OTHER
            - SELECTED_ONLY
      required:
        - mapPerspectiveOption
        - newPerspective
        - sourcePerspective
    MarginalImpactInput:
      type: object
      properties:
        marginalImpactAnalysisIds:
          description: ID of an account-level analysis result. Only one ID is supported in current release.
          type: array
          items:
            type: integer
            format: int32
          maxItems: 1
          minItems: 1
        currency:
          $ref: '#/components/schemas/Currency'
        outputType:
          description: 'Granularity of the report. If `Account`, the report returns projected losses for all policies and locations grouped by peril. If `Policy` the report returns projected losses for all analyses grouped by policy.'
          type: string
          enum:
            - POLICY
            - ACCOUNT
        jobName:
          description: Unique name for the job.
          type: string
          maxLength: 64
          minLength: 1
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        rateSchemes:
          description: 'Array of event rate scheme IDs to be used in metric calculations. If specified, overrides the event rate schemes used in the original analysis results.'
          type: array
          items:
            $ref: '#/components/schemas/EventRateScheme'
      required:
        - currency
        - jobName
        - outputType
    PateInput:
      type: object
      properties:
        insert:
          type: array
          description: An array of PATE treaty adjustments to add.
          items:
            $ref: '#/components/schemas/Pate'
        update:
          type: array
          description: An array of PATE treaty adjustments to update.
          items:
            $ref: '#/components/schemas/Pate'
        delete:
          description: An array of PATE treaty adjustments to delete.
          items:
            $ref: '#/components/schemas/Pate'
          type: array
    ClimateChangeInput:
      type: object
      properties:
        analysisName:
          description: Name of climate change analysis. Can be alphanumeric string.
          type: string
          example: ABC Climate
        climateConditionView:
          description: >
            One of `Combined All Parameters`, `Frequency and Intensity Only`, `Default`
          type: string
          example: Combined All Parameters
        referenceRateSchemeId:
          description: |
            ID of <<glossary:event rate>> scheme conditioned for climate change. One of `190`, `202`, `84`, `9`.
            * `190`: RMS 2019 Historical Event Rates
            * `202`: RMS 2021 Historical Event Rates
            * `84`: RMS 2015 Historical Event Rates
            * `9`: RMS v2.0 Default Rates
          type: integer
          format: int32
          example: 190
        rcpScenario:
          description: |
            RCP scenario. One of `2.6`, `4.5`, `6.0`, or `8.5`.
            * `2.6`: A pathway where radiative forcing peaks at approximately 3 W m-2 before 2100 and then declines to 2.6 W m-2.
            * `4.5`: An intermediate stabilization pathway in which radiative forcing is stabilized at approximately 4.5 W m-2 and 6.0 W m-2 after 2100.
            * `6.0`: An intermediate stabilization pathways in which radiative forcing is stabilized at approximately 4.5 W m-2 and 6.0 W m-2 after 2100.
            * `8.5`: A high pathway for which radiative forcing reaches greater than 8.5 W m-2 by 2100 and continues to rise for some amount of time.
          type: number
          format: double
          example: 2.6
        timeHorizon:
          description: |
            One or more the snapshots included in an RCP scenario-based analysis. Values must be between `2020` and `2100` in five year increments. For example, `2020, 2025, 2030, 2035`
          type: integer
          format: int32
          example: 2025
        is2CWarmingScenario:
          description: >
            Indicates whether the climate change analysis includes RCP scenarios. If no `rcpScenario` or `timeHorizon` values are specified, set to `false`.
          type: boolean
    SimulateELTToPLTInput:
      type: object
      properties:
        regionCode:
          type: string
        perilCode:
          type: string
        engineVersion:
          type: string
        eventRateSchemeId:
          description: |
            ID of the <<glossary:event rate scheme>> used to calculate a PLT analysis. The PLT Engine substitutes the specified event rate scheme for the event rate scheme used in the ELT-based reference analysis.
          type: integer
          format: int32
        simulationSetId:
          description: |
            ID of a period event quantile table (PEQT).
          type: integer
          format: int32
        simulationSetName:
          description: |
            Name of a period event quantile table (PEQT).
          type: string
        simulationPeriods:
          description: |
            Number of <<glossary:simulation period>>s used to generate the PLT.
          type: integer
          format: int64
      required:
        - simulationPeriods
        - simulationSetId
    RenameAnalysisInput:
      type: object
      properties:
        newAnalysisName:
          type: string
          description: Name may consist of `0`-`9`, `A`-`Z`, `a`-`z`, and `_` (underscores), `-` (hyphens), `:` (colons), and blank spaces. Maximum length is 64 characters.
    AnalysisGroupWithSimulation:
      type: object
      properties:
        groupId:
          type: integer
          format: int64
        analysisIds:
          type: array
          items:
            type: integer
            format: int32
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
        reportingWindowStart:
          type: string
          maxLength: 2147483647
          minLength: 1
        numOfSimulations:
          type: integer
          format: int64
        simulationWindowStart:
          type: string
          maxLength: 2147483647
          minLength: 1
        simulationWindowEnd:
          type: string
          maxLength: 2147483647
          minLength: 1
        simulateToPLT:
          type: boolean
        propagateDetailedLosses:
          type: boolean
        regionPerilSimulationSet:
          type: array
          items:
            $ref: '#/components/schemas/RegionPerilSimulation'
        minimizedRegionPerilSimulationSet:
          type: array
          items:
            $ref: '#/components/schemas/RegionPerilSimulation'
        name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        description:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - analysisIds
        - currency
        - name
        - numOfSimulations
        - propagateDetailedLosses
        - simulateToPLT
    RegionPerilSimulation:
      type: object
      properties:
        perilCode:
          type: string
        modelVersion:
          type: string
        eventRateSchemeId:
          type: integer
          format: int32
        regionCode:
          type: string
        simulationSetId:
          type: integer
          format: int64
        simulationPeriods:
          type: integer
          format: int64
        modelRegionCode:
          type: string
        eltAnalysisId:
          type: integer
          format: int64
        engineVersion:
          type: string
      required:
        - simulationPeriods
        - simulationSetId
    InconsistentField:
      type: object
      properties:
        name:
          type: string
        treatyIds:
          type: array
          items:
            type: integer
            format: int32
          uniqueItems: true
    InconsistentTreaties:
      type: object
      properties:
        treaties:
          type: array
          items:
            $ref: '#/components/schemas/TreatyWithAnalysisInfoV2'
        inconsistentFields:
          type: array
          items:
            $ref: '#/components/schemas/InconsistentField'
    TreatyWithAnalysisInfoV2:
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        treatyNumber:
          type: string
          maxLength: 20
          minLength: 0
        treatyName:
          type: string
          maxLength: 40
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        treatyType:
          $ref: '#/components/schemas/ExposureValue'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        attachBasis:
          $ref: '#/components/schemas/ExposureValue'
        attachLevel:
          $ref: '#/components/schemas/ExposureValue'
        premium:
          type: number
          format: double
        occurLimit:
          type: number
          format: double
        attachPt:
          type: number
          format: double
        riskLimit:
          type: number
          format: double
        retentAmt:
          type: number
          format: double
        pcntPlaced:
          type: number
          format: double
        effectDate:
          type: string
        expireDate:
          type: string
        pcntRetent:
          type: number
          format: double
        pcntRiShare:
          type: number
          format: double
        pcntCovered:
          type: number
          format: double
        priority:
          type: integer
          format: int32
        numOfReinst:
          type: integer
          format: int32
        reinstCharge:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        isValid:
          type: boolean
        userId1:
          type: string
        userId2:
          type: string
        lobs:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
        aggregateDeductible:
          type: number
          format: double
        aggregateLimit:
          type: number
          format: double
        lossOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/LossOccurrence'
        analysisId:
          type: integer
          format: int64
        analysisName:
          type: string
        regionPerilId:
          type: integer
          format: int32
        regionPeril:
          type: string
        lossOccurrenceTime:
          type: integer
          format: int32
        lossOccurrenceRadius:
          type: integer
          format: int32
        radiusUnitId:
          type: integer
          format: int32
        radiusUnit:
          type: string
        multiLossOccurrence:
          type: string
      required:
        - attachLevel
        - cedant
        - treatyNumber
        - treatyType
    AnalysesItemV2:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        runDate:
          type: string
        description:
          type: string
        rdmName:
          type: string
        regroup:
          type: integer
          format: int32
        exposureType:
          type: integer
          format: int32
        engineVersion:
          type: string
        groupType:
          type: string
        cedant:
          type: string
        lob:
          type: string
        exposureId:
          type: integer
          format: int32
        dataSource:
          type: string
        riGuid:
          type: string
        jobId:
          type: integer
          format: int64
        jobUUID:
          type: string
        isGroup:
          type: boolean
        modelProfile:
          $ref: '#/components/schemas/ExposureValue'
        outputProfile:
          $ref: '#/components/schemas/ExposureValue'
        engine:
          $ref: '#/components/schemas/ExposureValue'
        status:
          $ref: '#/components/schemas/ExposureValue'
        type:
          $ref: '#/components/schemas/ExposureValue'
        peril:
          $ref: '#/components/schemas/ExposureValue'
        subPeril:
          $ref: '#/components/schemas/ExposureValue'
        region:
          $ref: '#/components/schemas/ExposureValue'
        lossAmplification:
          $ref: '#/components/schemas/ExposureValue'
        mode:
          $ref: '#/components/schemas/ExposureValue'
        insuranceType:
          $ref: '#/components/schemas/ExposureValue'
        vulnerabilityCurve:
          $ref: '#/components/schemas/ExposureValue'
        user:
          $ref: '#/components/schemas/ExposureValue'
        eventRateSchemes:
          type: array
          items:
            type: string
        currency:
          $ref: '#/components/schemas/AnalysisCurrency'
        engineSubType:
          $ref: '#/components/schemas/ExposureValue'
        framework:
          type: string
        simulationSetId:
          type: integer
          format: int64
        simulationPeriods:
          type: integer
          format: int32
        exposureSetId:
          type: string
    AnalysisCurrency:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        scheme:
          type: string
        asOfDate:
          type: string
        vintage:
          type: string
      required:
        - asOfDate
        - code
        - scheme
        - vintage
    AnalysisSearchResultV2:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/AnalysesItemV2'
    AnalysisRegionSearchResultV2:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/RegionItemV2'
    RegionItemV2:
      type: object
      properties:
        region:
          type: string
        subRegion:
          type: string
        peril:
          type: string
        rateSchemeId:
          type: integer
          format: int32
        framework:
          type: string
        analysisId:
          type: integer
          format: int32
        modelProfileId:
          type: integer
          format: int32
        petId:
          type: integer
          format: int32
        numSamples:
          type: integer
          format: int32
        periods:
          type: integer
          format: int32
        applyContractFlag:
          type: boolean
        engineVersion:
          type: string
    ExposureMetricRequest:
      type: object
      properties:
        dataSourceName:
          type: string
        currency:
          type: string
        portfolios:
          type: array
          items:
            type: integer
            format: int32
        accounts:
          type: array
          items:
            type: integer
            format: int32
      required:
        - dataSourceName
    ReportDetails:
      type: object
      properties:
        reportInternalUrl:
          type: string
        metricsType:
          type: string
          enum:
            - STATS
            - ELT
            - EP
            - LLR
            - PLT
            - EXPOSURE_SUMMARY
            - LOCATION_RESULTS
            - POLICY_EP
            - POLICY_STATS
            - LOCATION_AAL
        analysisId:
          type: integer
          format: int64
        reportURL:
          type: string
        additionalInfo:
          type: object
          additionalProperties:
            type: object
    ReportSearchItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        edmName:
          type: string
        createDate:
          type: string
        exposureId:
          type: integer
          format: int32
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        userName:
          type: string
        notes:
          type: string
        reportDetails:
          type: array
          items:
            $ref: '#/components/schemas/ReportDetails'
    ReportListSearchItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        edmName:
          type: string
        createDate:
          type: string
        exposureId:
          type: integer
          format: int32
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        userName:
          type: string
        notes:
          type: string
    ReportListSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/ReportListSearchItem'
    ReportInfoRequest:
      required:
        - name
      type: object
      properties:
        name:
          description: Name of report.
          type: string
        notes:
          description: Descriptive comments on note. 
          maxLength: 500
          minLength: 0
          type: string
    CopyAccountInfo:
      type: object
      properties:
        newNumber:
          type: string
        newName:
          type: string
        linked:
          type: boolean
      required:
        - newNumber
    Account:
      type: object
      properties:
        id:
          description: ID number of the account.
          type: integer
          format: int32
        name:
          description: Name of the account.
          type: string
        number:
          description: Number of the account.
          type: string
        status:
          type: string
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        underwriter:
          $ref: '#/components/schemas/UnderWriter'
        branch:
          $ref: '#/components/schemas/Branch'
        userId1:
          description: User-defined attribute 1
          type: string
        userId2:
          description: User-defined attribute 2
          type: string
        userId3:
          description: User-defined attribute 3
          type: string
        userId4:
          description: User-defined attribute 4
          type: string
        userText1:
          description: User text 1
          type: string
        userText2:
          description: User text 2
          type: string
        createDate:
          description: Date and time that account was created.
          type: string
        stampDate:
          type: string
        state:
          type: string
          enum:
            - InActive
            - Active
        linkId:
          description: '' 
          type: string
        guid:
          description: '' 
          type: string
        isValid:
          description: Account valid flag.
          type: boolean
        CustomData:
          type: object
          additionalProperties:
            type: string
      required:
        - number
    Branch:
      description: Branch that underwrites the account.
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 30
          minLength: 0
      required:
        - name
    UnderWriter:
      description: > 
        Risk-holding party that transfers risk to a cedant in exchange for some premium. 
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 30
          minLength: 0
      required:
        - name
    LayerInfo:
      type: object
      properties:
        name:
          description: Name of a peril model that estimates losses for natural or man-made hazards, such as earthquakes, floods, hurricanes, or acts of terrorism.
          type: string
        type:
          description: Name of the job type. One of `geocode` or `hazard`.
          type: string
        engineType:
          description: Name of engine.
          type: string
        version:
          description: Version of the peril model.
          type: string
        layerOptions:
          description: >
            Options that apply to the layer. For example, 
            `aggregateTriggerEnabled`, `geoLicenseType`, `overrideUserDef`, `skipPrevGeocoded`, `skipPrevHazard`.
          type: object
          additionalProperties:
            type: string
      required:
        - engineType
        - name
        - type
        - version
    AccountMetrics:
      type: object
      properties:
        totalLocations:
          type: integer
          format: int32
        totalPolicies:
          type: integer
          format: int32
        totalEmployees:
          type: number
          format: double
        totalInsuredValue:
          $ref: '#/components/schemas/Amount'
        perilsExposed:
          type: string
        linkedAccount:
          $ref: '#/components/schemas/Account'
        linkedDatasource:
          type: string
        name:
          type: string
        number:
          type: string
        owner:
          type: string
        underwriter:
          type: string
        producer:
          type: string
        branch:
          type: string
        cedant:
          type: string
        geocodeVersion:
          type: string
        hazardVersion:
          type: string
        createDate:
          type: string
    Amount:
      type: object
      properties:
        value:
          type: number
          format: double
        currencyCode:
          type: string
    Coordinate:
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        locationNumber:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        streetAddress:
          type: string
        geoResolutionCode:
          $ref: '#/components/schemas/ExposureValue'
    CountryMetrics:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/ExposureValue'
        locationCount:
          type: integer
          format: int32
    MetricRequest:
      type: object
      properties:
        granularity:
          type: array
          items:
            type: string
        metricType:
          type: string
        perspective:
          type: string
        includeIntermediateSums:
          type: boolean
    OutputProfile:
      type: object
      properties:
        name:
          type: string
        metricRequests:
          type: array
          items:
            $ref: '#/components/schemas/MetricRequest'
    ProcessInput:
      type: object
      properties:
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        edm:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        modelProfileId:
          type: integer
          format: int32
        eventRateSchemeId:
          type: integer
          format: int32
        treaties:
          type: array
          items:
            type: integer
            format: int32
        jobName:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        id:
          type: integer
          format: int32
          minimum: 1
        outputSetting:
          $ref: '#/components/schemas/OutputProfile'
        outputProfile:
          type: string
      required:
        - currency
        - edm
        - outputSetting
    AccountSearchItem:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountNumber:
          type: string
        accountName:
          type: string
        cedantName:
          type: string
        producerName:
          type: string
        underwriterName:
          type: string
        branchName:
          type: string
        numLocations:
          type: integer
          format: int32
        userId1:
          type: string
        userId2:
          type: string
        userId3:
          type: string
        userId4:
          type: string
        userText1:
          type: string
        userText2:
          type: string
        geocodeVersion:
          type: string
        hazardVersion:
          type: string
        ownerName:
          type: string
        updatedBy:
          type: string
        stampDate:
          type: string
        jobStatus:
          type: string
        jobStartDate:
          type: string
        jobEndDate:
          type: string
        resultsCount:
          type: integer
          format: int32
        policyExpirationDate:
          type: string
        policyExpirationStatus:
          type: string
        totalTIV:
          type: number
          format: float
        reportsCount:
          type: integer
          format: int32
          example: 0
    AccountSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/AccountSearchItem'
    Band:
      type: object
      properties:
        greaterThanOrEqualTo:
          type: number
          format: double
          minimum: 0
        lessThan:
          type: number
          format: double
          maximum: 10000
      required:
        - greaterThanOrEqualTo
    CustomBand:
      type: object
      properties:
        hazard:
          type: string
        bands:
          type: array
          items:
            $ref: '#/components/schemas/Band'
          maxItems: 10
          minItems: 1
      required:
        - hazard
    ExposureSummaryReportInput:
      type: object
      properties:
        perilList:
          type: array
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
        reportName:
          type: string
        customBands:
          type: array
          items:
            $ref: '#/components/schemas/CustomBand'
      required:
        - perilList
    LocationConditionValidationInfo:
      type: object
      properties:
        message:
          type: string
        policyNumber:
          type: string
        locationNumber:
          type: string
        locationName:
          type: string
        condition1:
          type: string
        condition2:
          type: string
    CopyAggregatePortfolioInfo:
      type: object
      properties:
        newNumber:
          type: string
          maxLength: 20
          minLength: 0
        newName:
          type: string
          maxLength: 40
          minLength: 0
      required:
        - newName
        - newNumber
    AggregatePortfolio:
      type: object
      properties:
        id:
          type: integer
          format: int32
        number:
          type: string
          maxLength: 20
          minLength: 0
        name:
          type: string
          maxLength: 40
          minLength: 0
        source:
          type: string
          maxLength: 10
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        createDate:
          type: string
        peril:
          $ref: '#/components/schemas/ExposureValue'
      required:
        - cedant
        - name
        - number
        - peril
    AggregatePortfolioSearchItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        number:
          type: string
          maxLength: 20
          minLength: 0
        name:
          type: string
          maxLength: 40
          minLength: 0
        source:
          type: string
          maxLength: 10
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        createDate:
          type: string
        peril:
          $ref: '#/components/schemas/ExposureValue'
        ownerName:
          type: string
      required:
        - cedant
        - name
        - number
        - peril
    AggregatePortfolioMetrics:
      type: object
      properties:
        totalAggregateExposures:
          type: integer
          format: int32
        perilsExposed:
          type: string
        total:
          type: number
          format: double
        name:
          type: string
        number:
          type: string
        source:
          type: string
        currency:
          type: string
        createDate:
          type: string
        owner:
          type: string
        cedant:
          type: string
    AggregatePortfolioCountryMetrics:
      type: object
      properties:
        countryMetrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    AlmProfileInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        internalId:
          type: integer
          format: int32
        profileName:
          type: string
        profileType:
          type: string
        country:
          type: string
        peril:
          type: string
        rmsLob:
          type: string
        geoRes:
          type: string
        trackingId:
          type: string
        descFin:
          type: string
        descReg:
          type: string
        descInv:
          type: string
        dataTab:
          type: string
        softwareVersionCode:
          type: string
    DefaultAlmProfilesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AlmProfileInfo'
    AlmProcessInput:
      type: object
      properties:
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        edm:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        modelProfileId:
          type: integer
          format: int32
        eventRateSchemeId:
          type: integer
          format: int32
        treaties:
          type: array
          items:
            type: integer
            format: int32
        jobName:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        id:
          type: integer
          format: int32
          minimum: 1
        almProfileIds:
          type: array
          items:
            type: integer
            format: int32
        analysisMode:
          type: string
        portEltByGeoidByLobByCedant:
          type: boolean
        portStatsByGeoidByLobByCedant:
          type: boolean
        portStatsByGeoidByCedant:
          type: boolean
      required:
        - almProfileIds
        - currency
        - edm
    AggregateExposuresList:
      type: object
      properties:
        values:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        lobs:
          type: array
          items:
            type: string
        resolutionValues:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/AlmErrorMessage'
        countryCode:
          type: string
        resolution:
          type: string
        dependencyResolution:
          type: string
    AlmErrorMessage:
      type: object
      properties:
        row:
          type: string
        column:
          type: string
        text:
          type: string
    AggregatePortfolioSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/AggregatePortfolioSearchItem'
    BranchSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PolicyCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        isPredefined:
          type: boolean
        limit:
          type: number
          format: double
        deductible:
          type: number
          format: double
        deductibleType:
          $ref: '#/components/schemas/ExposureValue'
        conditionType:
          $ref: '#/components/schemas/ExposureValue'
        parentCondition:
          $ref: '#/components/schemas/ExposureValue'
        policyNumber:
          type: string
        policyConditionCriterias:
          type: array
          items:
            $ref: '#/components/schemas/PolicyConditionCriteria'
        percentOfLossDeductibleAmount:
          type: number
          format: double
        isFranchiseDeductible:
          $ref: '#/components/schemas/ExposureValue'
    PolicyConditionCriteria:
      type: object
      properties:
        id:
          type: integer
          format: int32
        logic:
          type: string
        openPar:
          type: string
        field:
          type: string
        operator:
          type: string
        value:
          type: string
        closePar:
          type: string
    BatchRequest:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        body:
          type: string
    Facultative:
      type: object
      properties:
        id:
          type: string
          maxLength: 20
          minLength: 0
          pattern: '^\w([\w-]*\w|)$'
        name:
          type: string
          maxLength: 40
          minLength: 0
      required:
        - name
    FacultativeSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/Facultative'
    ArithmeticExpression:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            expression:
              $ref: '#/components/schemas/Expression'
            arithmeticPairs:
              type: array
              items:
                $ref: '#/components/schemas/ArithmeticPair'
    ArithmeticPair:
      type: object
      properties:
        operator:
          type: string
          enum:
            - ADD
            - SUBTRACT
            - MULTIPLY
            - DIVIDE
        expression:
          $ref: '#/components/schemas/Expression'
    Assignment:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        operator:
          type: string
          enum:
            - EQUAL
            - ADD
            - SUBTRACT
            - MULTIPLY
            - DIVIDE
        expression:
          $ref: '#/components/schemas/Expression'
    BooleanCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/Condition'
        - type: object
          properties:
            condition:
              $ref: '#/components/schemas/Condition'
            booleanPairs:
              type: array
              items:
                $ref: '#/components/schemas/BooleanPair'
    BooleanPair:
      type: object
      properties:
        operator:
          type: string
          enum:
            - AND
            - OR
        condition:
          $ref: '#/components/schemas/Condition'
    BooleanValue:
      type: string
      allOf:
        - $ref: '#/components/schemas/Expression'
      enum:
        - 'true'
        - 'false'
    BulkEdit:
      type: object
      properties:
        exposureId:
          type: integer
          format: int32
          minimum: 1
        editType:
          type: string
          enum:
            - POLICY
            - LOCATION
            - ACCOUNT
        editQuery:
          type: string
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        editCondition:
          $ref: '#/components/schemas/Condition'
        updates:
          type: array
          items:
            type: string
        updateConditions:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        outputClause:
          type: string
      required:
        - editType
        - exposureId
        - exposureType
        - updates
    ChildIdentifier:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            name:
              type: string
            columnName:
              type: string
            tableName:
              type: string
            castTo:
              type: string
              enum:
                - INTEGER
                - STRING
                - STATUS
                - LIST
                - TIMESTAMP
                - OPERATOR
                - STATUS_ICON
                - LINK
                - FLOAT
                - BOOLEAN
                - DATE_ONLY
                - PERCENT
                - OBJECT
                - LONG
                - 'NULL'
            clearDataResolution:
              type: boolean
            dataResolutionUS:
              type: boolean
            validation:
              type: string
            filterable:
              type: boolean
            foreignKeyColumnName:
              type: string
            subqueryTableName:
              type: string
            subqueryIdentifier:
              $ref: '#/components/schemas/Identifier'
    Condition:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
      required:
        - type
    DateOnlyValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            year:
              type: integer
              format: int32
            month:
              type: integer
              format: int32
            dayOfMonth:
              type: integer
              format: int32
    DecimalValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            value:
              type: number
    Expression:
      type: object
      properties:
        dataType:
          type: string
          enum:
            - INTEGER
            - STRING
            - STATUS
            - LIST
            - TIMESTAMP
            - OPERATOR
            - STATUS_ICON
            - LINK
            - FLOAT
            - BOOLEAN
            - DATE_ONLY
            - PERCENT
            - OBJECT
            - LONG
            - 'NULL'
        type:
          type: string
      discriminator:
        propertyName: type
      required:
        - type
    ForeignKeyIdentifier:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            name:
              type: string
            columnName:
              type: string
            tableName:
              type: string
            castTo:
              type: string
              enum:
                - INTEGER
                - STRING
                - STATUS
                - LIST
                - TIMESTAMP
                - OPERATOR
                - STATUS_ICON
                - LINK
                - FLOAT
                - BOOLEAN
                - DATE_ONLY
                - PERCENT
                - OBJECT
                - LONG
                - 'NULL'
            clearDataResolution:
              type: boolean
            dataResolutionUS:
              type: boolean
            validation:
              type: string
            filterable:
              type: boolean
            primaryKeyColumnName:
              type: string
            subqueryIdentifier:
              $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            name:
              type: string
            columnName:
              type: string
            tableName:
              type: string
            castTo:
              type: string
              enum:
                - INTEGER
                - STRING
                - STATUS
                - LIST
                - TIMESTAMP
                - OPERATOR
                - STATUS_ICON
                - LINK
                - FLOAT
                - BOOLEAN
                - DATE_ONLY
                - PERCENT
                - OBJECT
                - LONG
                - 'NULL'
            clearDataResolution:
              type: boolean
            dataResolutionUS:
              type: boolean
            validation:
              type: string
            filterable:
              type: boolean
    InListCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/Condition'
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'
            not:
              type: boolean
            values:
              type: array
              items:
                $ref: '#/components/schemas/ValueObject'
    IntegerValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            value:
              type: integer
              format: int32
    LongValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            value:
              type: integer
              format: int64
    MatchingCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/Condition'
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'
            not:
              type: boolean
            pattern:
              type: string
    NullValue:
      type: string
      allOf:
        - $ref: '#/components/schemas/Expression'
      enum:
        - 'NULL'
    RelationalCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/Condition'
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'
            operator:
              type: string
              enum:
                - EQUAL
                - NOT_EQUAL
                - LESS_THAN
                - GREATER_THAN
                - LTE
                - GTE
            expression:
              $ref: '#/components/schemas/Expression'
    StringValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            value:
              type: string
    SubqueryCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/Condition'
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'
            columnName:
              type: string
            tableName:
              type: string
            conditionColumnName:
              type: string
            conditionValue:
              type: string
    TimestampValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            epochSeconds:
              type: integer
              format: int64
    ValueObject:
      type: object
      properties:
        value:
          type: object
    YearBuiltIdentifier:
      type: object
      allOf:
        - $ref: '#/components/schemas/Expression'
        - type: object
          properties:
            name:
              type: string
            columnName:
              type: string
            tableName:
              type: string
            validation:
              type: string
            castTo:
              type: string
              enum:
                - INTEGER
                - STRING
                - STATUS
                - LIST
                - TIMESTAMP
                - OPERATOR
                - STATUS_ICON
                - LINK
                - FLOAT
                - BOOLEAN
                - DATE_ONLY
                - PERCENT
                - OBJECT
                - LONG
                - 'NULL'
            clearDataResolution:
              type: boolean
            dataResolutionUS:
              type: boolean
            filterable:
              type: boolean
    LineOfBusinessSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
    BuildingAttribute:
      type: object
      properties:
        id:
          type: integer
          format: int32
        yearBuilt:
          type: string
        isValid:
          type: boolean
        roofDeckType:
          $ref: '#/components/schemas/ExposureValue'
        roofDeckResistanceField:
          type: number
          format: double
        windowGlassdoorProtectionType:
          $ref: '#/components/schemas/ExposureValue'
        windowGlassdoorThickness:
          $ref: '#/components/schemas/ExposureValue'
        windowGlassdoorDoublepane:
          $ref: '#/components/schemas/ExposureValue'
        windowGlassdoorProtectionAdequacy:
          $ref: '#/components/schemas/ExposureValue'
        roofCoverType:
          $ref: '#/components/schemas/ExposureValue'
        rooftopEquipment:
          $ref: '#/components/schemas/ExposureValue'
        skylightAreaPercent:
          type: number
          format: double
        dockDoorAreaPercent:
          type: number
          format: double
        dockDoorPressureResistance:
          type: number
          format: double
        skylightImpactResistance:
          $ref: '#/components/schemas/ExposureValue'
        roofCoverResistanceCorner:
          type: number
          format: double
        roofSlope:
          $ref: '#/components/schemas/ExposureValue'
        flashingPulloutResistance:
          type: number
          format: double
        missileExposure:
          $ref: '#/components/schemas/ExposureValue'
        roofCoverResistancePerimeter:
          type: number
          format: double
        roofDeckResistancePerimeter:
          type: number
          format: double
        claddingPressureResistance:
          type: number
          format: double
        windowGlassdoorGlassType:
          $ref: '#/components/schemas/ExposureValue'
        claddingType:
          $ref: '#/components/schemas/ExposureValue'
        windowGlassdoorAreaPercent:
          type: number
          format: double
        roofDeckResistanceCorner:
          type: number
          format: double
        roofCoverResistanceField:
          type: number
          format: double
        roofArea:
          type: number
          format: double
    Address:
      type: object
      properties:
        addressId:
          description: ID for address.
          type: integer
          format: int32
        area:
          $ref: '#/components/schemas/ExposureValue'
        buildingId:
          description: ID for building.
          type: string
        buildingName:
          description: Name of building.
          type: string
        addressType:
          $ref: '#/components/schemas/ExposureValue'
        country:
          $ref: '#/components/schemas/ExposureValue'
        countryScheme:
          description: Standard for user-supplied country code, e.g. `ISO2A`
          type: string
        countryGeoId:
          type: integer
          format: int32
        countryRmsCode:
          description: Internal RMS code for country.
          type: string
        latitude:
          description: Latitude coordinates.
          type: number
          format: double
        longitude:
          description: Longitude coordinates.
          type: number
          format: double
        addressText:
          description: Supplemental text captured for address.
          type: string
        streetAddress:
          description: Address containing number, street name, street type, etc.
          type: string
        cityCode:
          description: Code for city/town.
          type: string
        cityName:
          description: Name of city/town.
          type: string
        cityGeoId:
          description: Globally unique ID of city/town.
          type: integer
          format: int64
        postalCode:
          description: Postal code.
          type: string
        postalGeoId:
          description: Globally unique ID for postal code.
          type: integer
          format: int64
        block:
          description: ID of block.
          type: string
        blockGroup:
          description: ID of block group.
          type: string
        locationCode:
          description: Census track number / Sonpro / Sector / Short post code.
          type: string
        locationCodeGeoId:
          type: integer
          format: int64
        parcelNumber:
          description: ID of parcel.
          type: string
        subLocality:
          description: Name of sub-locality (neighborhood).
          type: string
        geoResolutionConfidence:
          description: Geocode confidence percentage.
          type: number
          format: double
        geoAccuracyBuffer:
          description: Geocode accuracy buffer.
          type: number
          format: double
        geoProductVersion:
          type: string
        geoLocationCode:
          description: Accuracy of assigned geocode for US high resolution geocoding.
          type: string
        geoMatchCode:
          description: >
            Code for portions of the input address that matched, did not match, or were modified during the geocoding process.
          type: string
        geoDataSourceId:
          description: Geocode data source ID.
          type: integer
          format: int32
        geoResolutionCode:
          $ref: '#/components/schemas/ExposureValue'
        geoDataSourceVersionId:
          type: integer
          format: int32
        geoDateTime:
          type: string
        createDateTime:
          description: Date and time address record was created. 
          type: string
        updateDateTime:
          description: Date and time address record was updated. 
          type: string
        admin1Code:
          description: >
            Code for administrative level 1. Admin1 represents large geographic divisions, such as states or provinces.
          type: string
        admin1GeoId:
          description: >
            Globally unique RMS ID for administrative level 1.
          type: integer
          format: int64
        admin1Name:
          description: >
            Name of administrative level 1.
          type: string
        admin2Code:
          description: >
            Code for administrative level 2. Admin2 represents smaller geographic divisions, such as counties.
          type: string
        admin2GeoId:
          description: >
            Globally unique RMS ID for administrative level 2.
          type: integer
          format: int64
        admin2Name:
          description: >
            Name of administrative level 2.
          type: string
        admin3Code:
          description: >
            Code for administrative level 3. Admin3 represents smaller geographic divisions, such as districts.
          type: string
        admin3GeoId:
          description: >
            Globally unique RMS ID for administrative level 3.
          type: integer
          format: int64
        admin3Name:
          description: >
            Name of administrative level 3.
          type: string
        admin4Code:
          description: >
            Code for administrative level 4.
          type: string
        admin4GeoId:
          description: >
            Globally unique RMS ID for administrative level 4.
          type: integer
          format: int64
        admin4Name:
          type: string
          description: >
            Name of administrative level 4.
        admin5Code:
          description: >
            Code for administrative level 5.
          type: string
        admin5GeoId:
          description: >
            Globally unique RMS ID for administrative level 5.
          type: integer
          format: int64
        admin5Name:
          description: Name of administrative level 5.
          type: string
        zone1GeoId:
          description: Zone level 1 GeoID.
          type: integer
          format: int64
        zone2GeoId:
          description: Zone level 2 GeoID.
          type: integer
          format: int64
        zone3GeoId:
          description: Zone level 3 GeoID.
          type: integer
          format: int64
        zone4GeoId:
          description: Zone level 4 GeoID.
          type: integer
          format: int64
        zone5GeoId:
          description: Zone level 5 GeoID.
          type: integer
          format: int64
        zone1:
          description: >
            CRESTA zone ID
          type: string
        zone2:
          description: >
            For finer zone definitions.
          type: string
        zone3:
          description: >
            For further finer zone definitions.
          type: string
        zone3Name:
          type: string
        zone4Name:
          type: string
        zone5Name:
          type: string
        zone3Code:
          type: string
        zone4Code:
          type: string
        zone5Code:
          type: string
        ugid:
          description: Unique global identifier.
          type: string
    FacReinsurer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Location:
      type: object
      properties:
        esdbBuildingAttribute:
          $ref: '#/components/schemas/LocationBuildingAttribute'
        property:
          $ref: '#/components/schemas/Property'
        address:
          $ref: '#/components/schemas/Address'
        biDetail:
          $ref: '#/components/schemas/LocationBiDetail'
        eqDetail:
          $ref: '#/components/schemas/LocationEqDetail'
        wsDetail:
          $ref: '#/components/schemas/LocationWsDetail'
        toDetail:
          $ref: '#/components/schemas/LocationToDetail'
        flDetail:
          $ref: '#/components/schemas/LocationFlDetail'
        frDetail:
          $ref: '#/components/schemas/LocationFrDetail'
        trDetail:
          $ref: '#/components/schemas/LocationTrDetail'
        buildingAttribute:
          $ref: '#/components/schemas/BuildingAttribute'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/LocationCoverage'
        reinsuranceCessions:
          type: array
          items:
            $ref: '#/components/schemas/ReinsuranceCession'
        wcDetails:
          type: array
          items:
            $ref: '#/components/schemas/LocationWcDetail'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        tiv:
          type: number
          format: double
        riskAssessorCurves:
          type: string
        locationConditions:
          type: array
          items:
            $ref: '#/components/schemas/LocationCondition'
        maxCvgBldgValuation:
          type: number
          format: double
      required:
        - address
        - property
    LocationBiDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        redundancy:
          $ref: '#/components/schemas/ExposureValue'
        siWaitingPeriod:
          type: number
          format: double
        siLimit:
          type: number
          format: double
        preparedness:
          $ref: '#/components/schemas/ExposureValue'
        serviceInterruption:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
    LocationBuildingAttribute:
      type: object
      properties:
        buildingId:
          type: string
        buildingNumber:
          type: string
        streetPrefix:
          type: string
        streetName:
          type: string
        streetType:
          type: string
        streetSuffix:
          type: string
        cityName:
          type: string
        stateCode:
          type: string
        country:
          type: string
        latitude:
          description: Latitude coordinates.
          type: number
          format: double
        longitude:
          description: Longitude coordinates.
          type: number
          format: double
        buildingClassScheme:
          type: string
          enum:
            - RMS
            - ATC
            - ISO
            - FIRE
            - RMS_IND
            - JPBLDG
            - EURO
            - RMS_BR
            - RMS_OP
            - USER
        occupancyTypeScheme:
          type: string
          enum:
            - ATC
            - SIC
            - NAICS
            - NCCI
            - ISO
            - IBC
            - RMS_IND
            - JPOCC
            - EURO
            - RMS_BR
            - RMS_OP
            - WOCC
        derivedStories:
          type: integer
          format: int32
        areaUnit:
          type: string
          enum:
            - SqFeet
            - SqMeter
        yearRange:
          type: integer
          format: int32
        exterior:
          type: string
        fireproof:
          type: string
        esdbBuildingName:
          type: string
        esdbBuildingClass:
          $ref: '#/components/schemas/ExposureValue'
        esdbOccupancyType:
          $ref: '#/components/schemas/ExposureValue'
        esdbBldgHeight:
          type: number
          format: double
        esdbStories:
          type: integer
          format: int32
        esdbSquareFootage:
          type: number
          format: double
        esdbYearBuilt:
          type: string
    LocationCondition:
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        conditionId:
          type: integer
          format: int32
        isIncluded:
          type: string
          enum:
            - NotIncluded
            - Included
            - UserIncluded
    LocationCoverage:
      type: object
      properties:
        limitExtension:
          description: Indicates if limit extensions apply each coverage type.
          type: number
          format: double
        operationType:
          type: string
          readOnly: true
          enum:
          - INSERT
          - UPDATE
          - DELETE
        waitingPeriod:
          description: The waiting period deductible (in days) to apply to business interruption coverage.
          type: number
          format: double
        id:
          type: integer
          format: int32
        label:
          $ref: '#/components/schemas/ExposureValue'
        eqslModifier:
          description: The grade of contents covered in case of earthquake sprinkler leakage (EQSL).
          type: integer
          format: int32
        lossType:
          description: 'The loss type covered. One of `Building`, `Contents`, `BI`, or `CombinedCvg`.'
          type: string
          enum:
            - Building
            - Contents
            - BI
            - CombinedCvg
        percentSprinkler:
          description: The percentage of buidling contents that are beneath a sprinkler and susceptible to water damage.
          type: number
          format: double
        value:
          description: The full replacement value of covered buildings and contents and the value of one year of income for business interruption coverage.
          type: number
          format: double
        biPoi:
          description: The business interruption period of indemnity in months.
          type: number
          format: double
        deductible:
          description: The location coverage deductible.
          type: number
          format: double
        coverageModifier:
          $ref: '#/components/schemas/ExposureValue'
        accumulation:
          description: 'The accumulation coverage. One of `Building`, `Contents`, `BI`, or `Combined`.'
          type: string
          enum:
            - Building
            - Contents
            - Bi
            - Combined
        limit:
          type: number
          format: double
        peril:
          description: The perils covered.
          $ref: '#/components/schemas/ExposureValue'
        percentageLossDeductibleAmount:
          description: 'The percent of loss deductible amount as a percentage. Deductible expressed as a percentage of loss for a given coverage or combination of coverages. As the loss increases, the deductible amount increases.'
          type: number
          format: double
        isFranchiseDeductible:
          description: Indicates if the deductible amount is franchise.
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          description: Indicates if location coverage is valid.
          type: boolean
    LocationEqDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        yearUpgrade:
          type: string
        startDate:
          type: string
        completionDate:
          type: string
        yearSprinkler:
          type: string
        percentComplete:
          type: number
          format: double
        atcClass:
          type: string
        isoClass:
          type: string
        fireClass:
          type: string
        rmsClass:
          type: string
        userClass:
          type: string
        atcOccupancy:
          type: string
        isoOccupancy:
          type: string
        sicOccupancy:
          type: string
        ibcOccupancy:
          type: string
        userOccupancy:
          type: string
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        secondarySupply:
          $ref: '#/components/schemas/ExposureValue'
        eqslSusceptibility:
          $ref: '#/components/schemas/ExposureValue'
        sprinklerType:
          $ref: '#/components/schemas/ExposureValue'
        baseIsolation:
          $ref: '#/components/schemas/ExposureValue'
        bldgExterior:
          $ref: '#/components/schemas/ExposureValue'
        cladding:
          $ref: '#/components/schemas/ExposureValue'
        constructQuality:
          $ref: '#/components/schemas/ExposureValue'
        ductility:
          $ref: '#/components/schemas/ExposureValue'
        duress:
          $ref: '#/components/schemas/ExposureValue'
        enggFoundation:
          $ref: '#/components/schemas/ExposureValue'
        frameBolt:
          $ref: '#/components/schemas/ExposureValue'
        hazardExposed:
          $ref: '#/components/schemas/ExposureValue'
        internalMasonaryPart:
          $ref: '#/components/schemas/ExposureValue'
        longSpan:
          $ref: '#/components/schemas/ExposureValue'
        mechElecEquip:
          $ref: '#/components/schemas/ExposureValue'
        ornamentation:
          $ref: '#/components/schemas/ExposureValue'
        overhangProfile:
          $ref: '#/components/schemas/ExposureValue'
        preFabrication:
          $ref: '#/components/schemas/ExposureValue'
        pounding:
          $ref: '#/components/schemas/ExposureValue'
        redundancy:
          $ref: '#/components/schemas/ExposureValue'
        shapeConfigure:
          $ref: '#/components/schemas/ExposureValue'
        shortColumn:
          $ref: '#/components/schemas/ExposureValue'
        sidingType:
          $ref: '#/components/schemas/ExposureValue'
        storyProfile:
          $ref: '#/components/schemas/ExposureValue'
        structureUpgrade:
          $ref: '#/components/schemas/ExposureValue'
        tank:
          $ref: '#/components/schemas/ExposureValue'
        tiltupRetrofit:
          $ref: '#/components/schemas/ExposureValue'
        torsion:
          $ref: '#/components/schemas/ExposureValue'
        urmRetrofit:
          $ref: '#/components/schemas/ExposureValue'
        wallsBrace:
          $ref: '#/components/schemas/ExposureValue'
        tsDebris:
          $ref: '#/components/schemas/ExposureValue'
        tsScour:
          $ref: '#/components/schemas/ExposureValue'
        tsSafeDist:
          $ref: '#/components/schemas/ExposureValue'
        tsProtect:
          $ref: '#/components/schemas/ExposureValue'
        eqPackage:
          $ref: '#/components/schemas/ExposureValue'
        eqProtect:
          $ref: '#/components/schemas/ExposureValue'
        eqSalvage:
          $ref: '#/components/schemas/ExposureValue'
        eqSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        urmChimney:
          $ref: '#/components/schemas/ExposureValue'
        builtOnSlope:
          $ref: '#/components/schemas/ExposureValue'
        alquistPreoloZone:
          type: integer
          format: int32
        soil:
          type: number
          format: double
        landslide:
          type: number
          format: double
        liquefaction:
          type: number
          format: double
        biZone:
          type: integer
          format: int32
        landslideMatch:
          $ref: '#/components/schemas/ExposureValue'
        liquefactionMatch:
          $ref: '#/components/schemas/ExposureValue'
        soilMatch:
          $ref: '#/components/schemas/ExposureValue'
        fireLossMatch:
          $ref: '#/components/schemas/ExposureValue'
        landslideCov:
          type: number
          format: double
        liquefactionCov:
          type: number
          format: double
        soilCov:
          type: number
          format: double
        fireLossCov:
          type: number
          format: float
        soilPeriod:
          type: number
          format: double
        soilThickness:
          type: number
          format: double
        fire1:
          type: number
          format: double
        fire2:
          type: number
          format: double
        fire3:
          type: number
          format: double
        fire4:
          type: number
          format: double
        fire5:
          type: number
          format: double
        fire6:
          type: number
          format: double
        fire7:
          type: number
          format: double
        fire8:
          type: number
          format: double
        mmi100:
          type: number
          format: double
        mmi200:
          type: number
          format: double
        mmi250:
          type: number
          format: double
        mmi475:
          type: number
          format: double
        avgSlope:
          type: number
          format: double
        distFault1:
          type: number
          format: double
        apMatch:
          $ref: '#/components/schemas/ExposureValue'
        mmiMatch:
          $ref: '#/components/schemas/ExposureValue'
        distSinkhole:
          type: number
          format: double
        distMine:
          type: number
          format: double
        sinkholeZone:
          type: integer
          format: int32
        soilVs:
          type: number
          format: double
        soilVsMatch:
          $ref: '#/components/schemas/ExposureValue'
        basinLocId:
          type: integer
          format: int32
        di:
          type: number
          format: double
        critd:
          type: number
          format: double
        n160CS:
          type: number
          format: double
        t15:
          type: number
          format: double
        wff:
          type: number
          format: double
        distriv:
          type: number
          format: double
        gwd:
          type: number
          format: double
        dc:
          type: number
          format: double
        liqcv:
          type: number
          format: double
        hdLiqMatch:
          $ref: '#/components/schemas/ExposureValue'
        phi:
          type: number
          format: double
        rough:
          type: number
          format: double
        ndvi:
          type: number
          format: double
        cohes:
          type: number
          format: double
        landcv:
          type: number
          format: double
        hdLandMatch:
          $ref: '#/components/schemas/ExposureValue'
        eqSlope:
          type: number
          format: double
        elev:
          type: number
          format: double
        cti:
          type: number
          format: double
        precip:
          type: number
          format: double
        topo:
          type: number
          format: double
        hdSecMatch:
          $ref: '#/components/schemas/ExposureValue'
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        soilPeriodMatch:
          $ref: '#/components/schemas/ExposureValue'
        groundwaterDepthMatch:
          $ref: '#/components/schemas/ExposureValue'
        groundSlopeMatch:
          $ref: '#/components/schemas/ExposureValue'
        percentInGeography:
          type: number
          format: double
        score1:
          type: integer
          format: int32
        score2:
          type: integer
          format: int32
        score3:
          type: integer
          format: int32
        scoreOverall:
          type: integer
          format: int32
        mmi500:
          type: number
          format: double
        mmi1000:
          type: number
          format: double
        mmi1500:
          type: number
          format: double
        faultsName1:
          type: string
        faultsDistance1:
          type: number
          format: double
        faultsReturnPeriodM601:
          type: integer
          format: int32
        faultsReturnPeriodM651:
          type: integer
          format: int32
        faultsReturnPeriodM701:
          type: integer
          format: int32
        faultsName2:
          type: string
        faultsDistance2:
          type: number
          format: double
        faultsReturnPeriodM602:
          type: integer
          format: int32
        faultsReturnPeriodM652:
          type: integer
          format: int32
        faultsReturnPeriodM702:
          type: integer
          format: int32
        faultsName3:
          type: string
        faultsDistance3:
          type: number
          format: double
        faultsReturnPeriodM603:
          type: integer
          format: int32
        faultsReturnPeriodM653:
          type: integer
          format: int32
        faultsReturnPeriodM703:
          type: integer
          format: int32
        faultsName4:
          type: string
        faultsDistance4:
          type: number
          format: double
        faultsReturnPeriodM604:
          type: integer
          format: int32
        faultsReturnPeriodM654:
          type: integer
          format: int32
        faultsReturnPeriodM704:
          type: integer
          format: int32
        faultsName5:
          type: string
        faultsDistance5:
          type: number
          format: double
        faultsReturnPeriodM605:
          type: integer
          format: int32
        faultsReturnPeriodM655:
          type: integer
          format: int32
        faultsReturnPeriodM705:
          type: integer
          format: int32
        faultsBackgroundRates:
          type: string
        mineName1:
          type: string
        mineType1:
          type: string
        mineStatus1:
          type: string
        mineArea1:
          type: number
          format: double
        mineDistance1:
          type: number
          format: double
        mineName2:
          type: string
        mineType2:
          type: string
        mineStatus2:
          type: string
        mineArea2:
          type: number
          format: double
        mineDistance2:
          type: number
          format: double
        mineName3:
          type: string
        mineType3:
          type: string
        mineStatus3:
          type: string
        mineArea3:
          type: number
          format: double
        mineDistance3:
          type: number
          format: double
        mineName4:
          type: string
        mineType4:
          type: string
        mineStatus4:
          type: string
        mineArea4:
          type: number
          format: double
        mineDistance4:
          type: number
          format: double
        mineName5:
          type: string
        mineType5:
          type: string
        mineStatus5:
          type: string
        mineArea5:
          type: number
          format: double
        mineDistance5:
          type: number
          format: double
        sinkHoleArea1:
          type: number
          format: double
        sinkHoleDistance1:
          type: number
          format: double
        sinkHoleArea2:
          type: number
          format: double
        sinkHoleDistance2:
          type: number
          format: double
        sinkHoleArea3:
          type: number
          format: double
        sinkHoleDistance3:
          type: number
          format: double
        sinkHoleArea4:
          type: number
          format: double
        sinkHoleDistance4:
          type: number
          format: double
        sinkHoleArea5:
          type: number
          format: double
        sinkHoleDistance5:
          type: number
          format: double
        isValid:
          type: boolean
        eqslInsurance:
          $ref: '#/components/schemas/ExposureValue'
    LocationFlDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        yearUpgrade:
          type: string
        startDate:
          type: string
        completionDate:
          type: string
        percentComplete:
          type: number
          format: double
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
        floodProtect:
          $ref: '#/components/schemas/ExposureValue'
        floorType:
          $ref: '#/components/schemas/ExposureValue'
        floodMissile:
          $ref: '#/components/schemas/ExposureValue'
        basement:
          $ref: '#/components/schemas/ExposureValue'
        floodVulnerability:
          $ref: '#/components/schemas/ExposureValue'
        mechElecGround:
          $ref: '#/components/schemas/ExposureValue'
        cladType:
          $ref: '#/components/schemas/ExposureValue'
        foundation:
          $ref: '#/components/schemas/ExposureValue'
        duration:
          $ref: '#/components/schemas/ExposureValue'
        contamination:
          $ref: '#/components/schemas/ExposureValue'
        velocity:
          $ref: '#/components/schemas/ExposureValue'
        flPackage:
          $ref: '#/components/schemas/ExposureValue'
        flProtect:
          $ref: '#/components/schemas/ExposureValue'
        flSalvage:
          $ref: '#/components/schemas/ExposureValue'
        flSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        ifmVerticalExpDist:
          $ref: '#/components/schemas/ExposureValue'
        flFoundationType:
          $ref: '#/components/schemas/ExposureValue'
        ifmStructureCondition:
          $ref: '#/components/schemas/ExposureValue'
        bespokeFloodDefenseLevel:
          type: number
          format: double
        bespokeFloodDefenseLevelType:
          $ref: '#/components/schemas/ExposureValue'
        floodIndex:
          type: number
          format: double
        elevation:
          type: number
          format: double
        elevationCov:
          type: number
          format: double
        annProb:
          type: string
        flZone:
          type: string
        bfe:
          type: string
        additionalInfo:
          type: string
        panel:
          type: string
        cobra:
          type: string
        floodWay:
          type: string
        sfha:
          type: string
        community:
          type: string
        confidence:
          type: number
          format: double
        underRev:
          type: string
        panelDate:
          type: string
        buffer:
          type: number
          format: double
        otherZones:
          type: string
        huZones:
          type: string
        mapSource:
          type: integer
          format: int32
        flMatch:
          $ref: '#/components/schemas/ExposureValue'
        finishedFloor:
          type: number
          format: double
        userId1:
          type: string
        userId2:
          type: string
        basinName:
          type: string
        catchmentId:
          type: integer
          format: int32
        floodDriver:
          type: string
        rms100Flzone:
          type: integer
          format: int32
        rms500Flzone:
          type: integer
          format: int32
        fl30YrRpDef:
          type: integer
          format: int32
        fl50YrRpDef:
          type: integer
          format: int32
        fl75YrRpDef:
          type: integer
          format: int32
        fl100YrRpDef:
          type: integer
          format: int32
        fl200YrRpDef:
          type: integer
          format: int32
        fl250YrRpDef:
          type: integer
          format: int32
        fl500YrRpDef:
          type: integer
          format: int32
        fl1000YrRpDef:
          type: integer
          format: int32
        fl10000YrRpDef:
          type: integer
          format: int32
        fl30YrRpUndef:
          type: integer
          format: int32
        fl50YrRpUndef:
          type: integer
          format: int32
        fl75YrRpUndef:
          type: integer
          format: int32
        fl100YrRpUndef:
          type: integer
          format: int32
        fl200YrRpUndef:
          type: integer
          format: int32
        fl250YrRpUndef:
          type: integer
          format: int32
        fl500YrRpUndef:
          type: integer
          format: int32
        fl1000YrRpUndef:
          type: integer
          format: int32
        fl10000YrRpUndef:
          type: integer
          format: int32
        hdFlMatch:
          $ref: '#/components/schemas/ExposureValue'
        flFfHag:
          type: number
          format: double
        flFfHagFlag:
          $ref: '#/components/schemas/ExposureValue'
        flZoneGroup:
          type: integer
          format: int32
        flPerBasement:
          type: number
          format: double
        protectedByLevee:
          type: string
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        score1:
          type: integer
          format: int32
        score2:
          type: integer
          format: int32
        score3:
          type: integer
          format: int32
        scoreOverall:
          type: integer
          format: int32
        fl10YRInlandDepthUndef:
          type: integer
          format: int32
        fl30YRInlandDepthUndef:
          type: integer
          format: int32
        fl50YRInlandDepthUndef:
          type: integer
          format: int32
        fl100YRInlandDepthUndef:
          type: integer
          format: int32
        fl200YRInlandDepthUndef:
          type: integer
          format: int32
        fl250YRInlandDepthUndef:
          type: integer
          format: int32
        fl500YRInlandDepthUndef:
          type: integer
          format: int32
        fl1000YRInlandDepthUndef:
          type: integer
          format: int32
    LocationFrDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        yearUpgrade:
          type: string
        startDate:
          type: string
        completionDate:
          type: string
        percentComplete:
          type: number
          format: double
        fireDepartmentRatingModifier:
          $ref: '#/components/schemas/ExposureValue'
        fireDepartmentRating:
          $ref: '#/components/schemas/ExposureValue'
        sprinklerSystem:
          $ref: '#/components/schemas/ExposureValue'
        remoteAlarm:
          $ref: '#/components/schemas/ExposureValue'
        frPackage:
          $ref: '#/components/schemas/ExposureValue'
        frProtect:
          $ref: '#/components/schemas/ExposureValue'
        frSalvage:
          $ref: '#/components/schemas/ExposureValue'
        frSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        frRoofCovering:
          $ref: '#/components/schemas/ExposureValue'
        frRoofGeometry:
          $ref: '#/components/schemas/ExposureValue'
        frRoofAge:
          $ref: '#/components/schemas/ExposureValue'
        frRoofVent:
          $ref: '#/components/schemas/ExposureValue'
        frEmberAccumulator:
          $ref: '#/components/schemas/ExposureValue'
        frSuppression:
          $ref: '#/components/schemas/ExposureValue'
        frPerformance:
          $ref: '#/components/schemas/ExposureValue'
        frSetback:
          $ref: '#/components/schemas/ExposureValue'
        frExterior:
          $ref: '#/components/schemas/ExposureValue'
        frResAppurtenant:
          $ref: '#/components/schemas/ExposureValue'
        frComAppurtenant:
          $ref: '#/components/schemas/ExposureValue'
        frDeckType:
          $ref: '#/components/schemas/ExposureValue'
        frHeatResistance:
          $ref: '#/components/schemas/ExposureValue'
        frAccessibilityCondition:
          $ref: '#/components/schemas/ExposureValue'
        wildFireHazard:
          $ref: '#/components/schemas/ExposureValue'
        wildFireSusceptibility:
          $ref: '#/components/schemas/ExposureValue'
        wildFireThreat:
          $ref: '#/components/schemas/ExposureValue'
        wildFireAreaDescription:
          $ref: '#/components/schemas/ExposureValue'
        wildFireSurfaceFuelType:
          $ref: '#/components/schemas/ExposureValue'
        wildFireSpecialConditions:
          type: string
        wildFireLocalHistory:
          type: number
          format: double
        wildFireNearbyHistory:
          type: number
          format: double
        wildFireAccessibility:
          $ref: '#/components/schemas/ExposureValue'
        wildFireMatch:
          $ref: '#/components/schemas/ExposureValue'
        wildFireSlope:
          type: integer
          format: int32
        wildFireSlopeFlag:
          $ref: '#/components/schemas/ExposureValue'
        wildFireFuel:
          $ref: '#/components/schemas/ExposureValue'
        wildFireFuelFlag:
          $ref: '#/components/schemas/ExposureValue'
        wildFireDistanceToVeg:
          type: integer
          format: int32
        wildFireDistanceToVegFlag:
          $ref: '#/components/schemas/ExposureValue'
        wildFireDistanceToVegUnit:
          $ref: '#/components/schemas/ExposureValue'
        wildFireSiteHazVer:
          type: string
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        percentInGeography:
          type: number
          format: double
        score1:
          type: integer
          format: int32
        scoreOverall:
          type: integer
          format: int32
        distanceToWuiIntermix:
          type: integer
          format: int32
        distanceToWuiInterface:
          type: integer
          format: int32
        stochasticBurnProb:
          type: number
          format: double
        urbanConFlagRationScore:
          type: integer
          format: int32
        distanceToCalFireVeryHigh:
          type: number
          format: double
        distanceToCalFireHigh:
          type: number
          format: double
        distanceToCalFireMedium:
          type: number
          format: double
        yearLastHistFire250m:
          type: integer
          format: int32
        histFireYearCount250m:
          type: integer
          format: int32
        histFireYearCount2km:
          type: integer
          format: int32
        histFireYearCount5km:
          type: integer
          format: int32
        histFireYearCount10km:
          type: integer
          format: int32
        histFireYearCount20km:
          type: integer
          format: int32
        firestationsName1:
          type: string
        firestationsLatitude1:
          type: number
          format: double
        firestationsLongitude1:
          type: number
          format: double
        firestationsDistance1:
          type: number
          format: double
        firestationsStreetAddress1:
          type: string
        firestationsCityName1:
          type: string
        firestationsPostalCode1:
          type: string
        firestationsAdmin2name1:
          type: string
        firestationsAdmin1code1:
          type: string
        firestationsLevel1:
          type: string
        firestationsEms1:
          type: string
        firestationsFirestationType1:
          type: string
        firestationsName2:
          type: string
        firestationsLatitude2:
          type: number
          format: double
        firestationsLongitude2:
          type: number
          format: double
        firestationsDistance2:
          type: number
          format: double
        firestationsStreetAddress2:
          type: string
        firestationsCityName2:
          type: string
        firestationsPostalCode2:
          type: string
        firestationsAdmin2name2:
          type: string
        firestationsAdmin1code2:
          type: string
        firestationsLevel2:
          type: string
        firestationsEms2:
          type: string
        firestationsFireStationType2:
          type: string
        firestationsName3:
          type: string
        firestationsLatitude3:
          type: number
          format: double
        firestationsLongitude3:
          type: number
          format: double
        fireStationsDistance3:
          type: number
          format: double
        fireStationsStreetaddress3:
          type: string
        fireStationsCityname3:
          type: string
        fireStationsPostalcode3:
          type: string
        fireStationsAdmin2name3:
          type: string
        fireStationsAdmin1code3:
          type: string
        fireStationsLevel3:
          type: string
        fireStationsEms3:
          type: string
        fireStationsFireStationType3:
          type: string
        fireStationsName4:
          type: string
        fireStationsLatitude4:
          type: number
          format: double
        fireStationsLongitude4:
          type: number
          format: double
        fireStationsDistance4:
          type: number
          format: double
        fireStationsStreetAddress4:
          type: string
        fireStationsCityName4:
          type: string
        fireStationsPostalCode4:
          type: string
        fireStationsAdmin2name4:
          type: string
        fireStationsAdmin1code4:
          type: string
        fireStationsLevel4:
          type: string
        fireStationsEms4:
          type: string
        fireStationsFireStationType4:
          type: string
        fireStationsName5:
          type: string
        fireStationsLatitude5:
          type: number
          format: double
        fireStationsLongitude5:
          type: number
          format: double
        fireStationsDistance5:
          type: number
          format: double
        fireStationsStreetAddress5:
          type: string
        fireStationsCityName5:
          type: string
        fireStationsPostalcode5:
          type: string
        fireStationsAdmin2name5:
          type: string
        fireStationsAdmin1code5:
          type: string
        fireStationsLevel5:
          type: string
        fireStationsEms5:
          type: string
        fireStationsFireStationType5:
          type: string
        isValid:
          type: boolean
    LocationToDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        yearUpgrade:
          type: string
        percentComplete:
          type: number
          format: double
        fireClass:
          type: string
        rmsClass:
          type: string
        userClass:
          type: string
        atcOccupancy:
          type: string
        isoOccupancy:
          type: string
        userOccupancy:
          type: string
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
        architecture:
          $ref: '#/components/schemas/ExposureValue'
        cladRate:
          $ref: '#/components/schemas/ExposureValue'
        cladType:
          $ref: '#/components/schemas/ExposureValue'
        constructQuality:
          $ref: '#/components/schemas/ExposureValue'
        designCode:
          $ref: '#/components/schemas/ExposureValue'
        doorOpenings:
          $ref: '#/components/schemas/ExposureValue'
        externalOrnament:
          $ref: '#/components/schemas/ExposureValue'
        floodVulnerability:
          $ref: '#/components/schemas/ExposureValue'
        foundation:
          $ref: '#/components/schemas/ExposureValue'
        maintenance:
          $ref: '#/components/schemas/ExposureValue'
        mechElecSide:
          $ref: '#/components/schemas/ExposureValue'
        otherOpenings:
          $ref: '#/components/schemas/ExposureValue'
        roofAge:
          $ref: '#/components/schemas/ExposureValue'
        roofAnchor:
          $ref: '#/components/schemas/ExposureValue'
        roofEquipment:
          $ref: '#/components/schemas/ExposureValue'
        roofFrame:
          $ref: '#/components/schemas/ExposureValue'
        roofGeometry:
          $ref: '#/components/schemas/ExposureValue'
        roofParpet:
          $ref: '#/components/schemas/ExposureValue'
        roofSystem:
          $ref: '#/components/schemas/ExposureValue'
        windMissile:
          $ref: '#/components/schemas/ExposureValue'
        windVulnerability:
          $ref: '#/components/schemas/ExposureValue'
        basement:
          $ref: '#/components/schemas/ExposureValue'
        mechElecGround:
          $ref: '#/components/schemas/ExposureValue'
        floodMissiles:
          $ref: '#/components/schemas/ExposureValue'
        floodProtection:
          $ref: '#/components/schemas/ExposureValue'
        iceDamProtection:
          $ref: '#/components/schemas/ExposureValue'
        plumbingInsulation:
          $ref: '#/components/schemas/ExposureValue'
        atticInsulation:
          $ref: '#/components/schemas/ExposureValue'
        roofVentilation:
          $ref: '#/components/schemas/ExposureValue'
        snowGuards:
          $ref: '#/components/schemas/ExposureValue'
        treeDensity:
          $ref: '#/components/schemas/ExposureValue'
        garaging:
          $ref: '#/components/schemas/ExposureValue'
        toPackage:
          $ref: '#/components/schemas/ExposureValue'
        toProtect:
          $ref: '#/components/schemas/ExposureValue'
        toSalvage:
          $ref: '#/components/schemas/ExposureValue'
        toSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        dominantSubperilCS:
          type: integer
          format: int64
        percentInGeographyCS:
          type: number
          format: double
        score1CS:
          type: integer
          format: int32
        score2CS:
          type: integer
          format: int32
        score3CS:
          type: integer
          format: int32
        scoreOverallCS:
          type: integer
          format: int32
        dominantSubperilWT:
          type: integer
          format: int64
        percentInGeographyWT:
          type: number
          format: double
        score1WT:
          type: integer
          format: int32
        score2WT:
          type: integer
          format: int32
        score3WT:
          type: integer
          format: int32
        scoreOverallWT:
          type: integer
          format: int32
    LocationTrDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        yearUpgrade:
          type: string
        startDate:
          type: string
        completionDate:
          type: string
        percentComplete:
          type: number
          format: double
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
        trPackage:
          $ref: '#/components/schemas/ExposureValue'
        trProtect:
          $ref: '#/components/schemas/ExposureValue'
        trSalvage:
          $ref: '#/components/schemas/ExposureValue'
        trSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        score1:
          type: integer
          format: int32
        scoreOverall:
          type: integer
          format: int32
        targetsName1:
          type: string
        targetsId1:
          type: integer
          format: int32
        targetsScore1:
          type: number
          format: double
        targetsDistance1:
          type: number
          format: double
        targetsCategory1:
          type: number
          format: double
        targetsCityName1:
          type: string
        targetsAdmin1code1:
          type: string
        targetsName2:
          type: string
        targetsId2:
          type: integer
          format: int32
        targetsScore2:
          type: number
          format: double
        targetsDistance2:
          type: number
          format: double
        targetsCategory2:
          type: number
          format: double
        targetsCityName2:
          type: string
        targetsAdmin1code2:
          type: string
        targetsName3:
          type: string
        targetsId3:
          type: integer
          format: int32
        targetsScore3:
          type: number
          format: double
        targetsDistance3:
          type: number
          format: double
        targetsCategory3:
          type: number
          format: double
        targetsCityName3:
          type: string
        targetsAdmin1code3:
          type: string
        targetsName4:
          type: string
        targetsId4:
          type: integer
          format: int32
        targetsScore4:
          type: number
          format: double
        targetsDistance4:
          type: number
          format: double
        targetsCategory4:
          type: number
          format: double
        targetsCityName4:
          type: string
        targetsAdmin1code4:
          type: string
        targetsName5:
          type: string
        targetsId5:
          type: integer
          format: int32
        targetsScore5:
          type: number
          format: double
        targetsDistance5:
          type: number
          format: double
        targetsCategory5:
          type: number
          format: double
        targetsCityName5:
          type: string
        targetsAdmin1code5:
          type: string
        dominantSubperilCS:
          type: integer
          format: int64
        percentInGeographyCS:
          type: number
          format: double
        score1CS:
          type: integer
          format: int32
        score2CS:
          type: integer
          format: int32
        score3CS:
          type: integer
          format: int32
        scoreOverallCS:
          type: integer
          format: int32
        dominantSubperilWT:
          type: integer
          format: int64
        percentInGeographyWT:
          type: number
          format: double
        score1WT:
          type: integer
          format: int32
        score2WT:
          type: integer
          format: int32
        score3WT:
          type: integer
          format: int32
        scoreOverallWT:
          type: integer
          format: int32
    LocationWcDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        totalPayroll:
          type: number
          format: double
        totalNumEmployees:
          type: number
          format: double
        numEmployeesShift1:
          type: number
          format: double
        numEmployeesShift2:
          type: number
          format: double
        numEmployeesShift3:
          type: number
          format: double
        numEmployeesShift4:
          type: number
          format: double
        calcNumEmployees:
          type: number
          format: double
        emergencyProtection:
          $ref: '#/components/schemas/ExposureValue'
        hazardousMaterials:
          $ref: '#/components/schemas/ExposureValue'
        wageRelativity:
          $ref: '#/components/schemas/ExposureValue'
        riskManagement:
          $ref: '#/components/schemas/ExposureValue'
        employeeDensity:
          $ref: '#/components/schemas/ExposureValue'
        undMngtAdjustment:
          type: number
          format: double
        groupNum:
          type: string
        groupName:
          type: string
        occupancyTypeScheme:
          $ref: '#/components/schemas/ExposureValue'
        occupancyType:
          $ref: '#/components/schemas/ExposureValue'
        maxEmployees:
          type: number
          format: double
        shiftType:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
        operationType:
          type: string
          readOnly: true
          enum:
            - INSERT
            - UPDATE
            - DELETE
        uslh:
          type: boolean
        excessComp:
          $ref: '#/components/schemas/ExposureValue'
    LocationWsDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        yearUpgrade:
          type: string
        startDate:
          type: string
        completionDate:
          type: string
        percentComplete:
          type: number
          format: double
        coastalSegment:
          type: string
        fireClass:
          type: string
        rmsClass:
          type: string
        userClass:
          type: string
        atcOccupancy:
          type: string
        isoOccupancy:
          type: string
        sicOccupancy:
          type: string
        ibcOccupancy:
          type: string
        userOccupancy:
          type: string
        siteLimit:
          type: number
          format: double
        siteDeduct:
          type: number
          format: double
        combinedLimit:
          type: number
          format: double
        combinedDeduct:
          type: number
          format: double
        percentageSiteLossDeductibleAmount:
          type: number
          format: double
        percentageCombinedLossDeductibleAmount:
          type: number
          format: double
        isFranchiseSiteDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isFranchiseCombinedDeductible:
          $ref: '#/components/schemas/ExposureValue'
        isValid:
          type: boolean
        architecture:
          $ref: '#/components/schemas/ExposureValue'
        cladRate:
          $ref: '#/components/schemas/ExposureValue'
        cladType:
          $ref: '#/components/schemas/ExposureValue'
        constructQuality:
          $ref: '#/components/schemas/ExposureValue'
        designCode:
          $ref: '#/components/schemas/ExposureValue'
        doorOpenings:
          $ref: '#/components/schemas/ExposureValue'
        externalOrnament:
          $ref: '#/components/schemas/ExposureValue'
        floodVulnerability:
          $ref: '#/components/schemas/ExposureValue'
        foundation:
          $ref: '#/components/schemas/ExposureValue'
        maintenance:
          $ref: '#/components/schemas/ExposureValue'
        mechElecSide:
          $ref: '#/components/schemas/ExposureValue'
        otherOpenings:
          $ref: '#/components/schemas/ExposureValue'
        roofAge:
          $ref: '#/components/schemas/ExposureValue'
        roofAnchor:
          $ref: '#/components/schemas/ExposureValue'
        roofEquipment:
          $ref: '#/components/schemas/ExposureValue'
        roofFrame:
          $ref: '#/components/schemas/ExposureValue'
        roofGeometry:
          $ref: '#/components/schemas/ExposureValue'
        roofParpet:
          $ref: '#/components/schemas/ExposureValue'
        roofSystem:
          $ref: '#/components/schemas/ExposureValue'
        windMissile:
          $ref: '#/components/schemas/ExposureValue'
        windVulnerability:
          $ref: '#/components/schemas/ExposureValue'
        floodMissiles:
          $ref: '#/components/schemas/ExposureValue'
        floodProtection:
          $ref: '#/components/schemas/ExposureValue'
        basement:
          $ref: '#/components/schemas/ExposureValue'
        mechElecGround:
          $ref: '#/components/schemas/ExposureValue'
        flashing:
          $ref: '#/components/schemas/ExposureValue'
        ifmVerticalExpDist:
          $ref: '#/components/schemas/ExposureValue'
        ifmStructCondition:
          $ref: '#/components/schemas/ExposureValue'
        ifmEquipBracing:
          $ref: '#/components/schemas/ExposureValue'
        ifmMissileExp:
          $ref: '#/components/schemas/ExposureValue'
        wsPackage:
          $ref: '#/components/schemas/ExposureValue'
        wsProtect:
          $ref: '#/components/schemas/ExposureValue'
        wsSalvage:
          $ref: '#/components/schemas/ExposureValue'
        wsSpecieStorage:
          $ref: '#/components/schemas/ExposureValue'
        resistGarage:
          $ref: '#/components/schemas/ExposureValue'
        wsFloorType:
          $ref: '#/components/schemas/ExposureValue'
        wsFoundationType:
          $ref: '#/components/schemas/ExposureValue'
        contamination:
          $ref: '#/components/schemas/ExposureValue'
        floodDuration:
          $ref: '#/components/schemas/ExposureValue'
        garaging:
          $ref: '#/components/schemas/ExposureValue'
        treeDensity:
          $ref: '#/components/schemas/ExposureValue'
        depreciationAge:
          $ref: '#/components/schemas/ExposureValue'
        velocity:
          description: A secondary modifier that applies if an area is prone to fast-flowing floodwater or in event of extreme flow conditions. Valid values vary by country. 
          $ref: '#/components/schemas/ExposureValue'
        floodIndex:
          type: number
          format: double
        distToCoast:
          type: number
          format: double
        sysDistToCoast:
          type: number
          format: double
        elevation:
          type: number
          format: double
        manMadeCov:
          type: number
          format: double
        naturalCov:
          type: number
          format: double
        elevationCov:
          type: number
          format: double
        distToCoastCov:
          type: number
          format: double
        manMadeRoughness:
          type: integer
          format: int32
        naturalRoughness:
          type: integer
          format: int32
        windPool:
          type: integer
          format: int32
        biZone:
          type: integer
          format: int32
        topologyFeature:
          type: integer
          format: int32
        elevationMatch:
          $ref: '#/components/schemas/ExposureValue'
        naturalRoughnessMatch:
          $ref: '#/components/schemas/ExposureValue'
        manMadeRoughnessMatch:
          $ref: '#/components/schemas/ExposureValue'
        distToCoastMatch:
          $ref: '#/components/schemas/ExposureValue'
        windPoolMatch:
          $ref: '#/components/schemas/ExposureValue'
        windExposure:
          type: integer
          format: int32
        nfipRate:
          type: number
          format: double
        nfipYear:
          type: integer
          format: int32
        nfipYearMatch:
          $ref: '#/components/schemas/ExposureValue'
        buildingElevation:
          type: number
          format: double
        buildingElevationMatch:
          $ref: '#/components/schemas/ExposureValue'
        rmsBuildingElevation:
          type: number
          format: double
        rmsBuildingElevationMatch:
          $ref: '#/components/schemas/ExposureValue'
        zoneGroup:
          type: integer
          format: int32
        perBasement:
          type: number
          format: double
        operationType:
          type: string
          readOnly: true
          enum:
          - INSERT
          - UPDATE
          - DELETE
        percentInGeography:
          type: number
          format: double
        score1:
          type: integer
          format: int32
        score2:
          type: integer
          format: int32
        score3:
          type: integer
          format: int32
        scoreOverall:
          type: integer
          format: int32
        windpoolZone:
          type: string
        distanceToInnerCoast:
          type: number
          format: double
        ws1YrRpWind:
          type: number
          format: double
        ws2YrRpWind:
          type: number
          format: double
        ws5YrRpWind:
          type: number
          format: double
        ws10YrRpWind:
          type: number
          format: double
        ws25YrRpWind:
          type: number
          format: double
        ws50YrRpWind:
          type: number
          format: double
        ws100YrRpWind:
          type: number
          format: double
        ws200YrRpWind:
          type: number
          format: double
        ws250YrRpWind:
          type: number
          format: double
        ws500YrRpWind:
          type: number
          format: double
        ws1000YrRpWind:
          type: number
          format: double
        ws10000YrRpWind:
          type: number
          format: double
        ws1YrRpSurgeDef:
          type: number
          format: double
        ws2YrRpSurgeDef:
          type: number
          format: double
        ws5YrRpSurgeDef:
          type: number
          format: double
        ws10YrRpSurgeDef:
          type: number
          format: double
        ws25YrRpSurgeDef:
          type: number
          format: double
        ws50YrRpSurgeDef:
          type: number
          format: double
        ws100YrRpSurgeDef:
          type: number
          format: double
        ws200YrRpSurgeDef:
          type: number
          format: double
        ws250YrRpSurgeDef:
          type: number
          format: double
        ws500YrRpSurgeDef:
          type: number
          format: double
        ws1000YrRpSurgeDef:
          type: number
          format: double
        ws10000YrRpSurgeDef:
          type: number
          format: double
    Property:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        locationId:
          type: integer
          format: int32
        addressId:
          type: integer
          format: int32
        locationNumber:
          type: string
        locationName:
          type: string
        userId1:
          type: string
        userId2:
          type: string
        userText1:
          type: string
        userText2:
          type: string
        expireDate:
          type: string
        inceptDate:
          type: string
        yearBuilt:
          type: string
        createDate:
          type: string
        updateDate:
          type: string
        buildingClassScheme:
          $ref: '#/components/schemas/ExposureValue'
        buildingClass:
          $ref: '#/components/schemas/ExposureValue'
        occupancyTypeScheme:
          $ref: '#/components/schemas/ExposureValue'
        occupancyType:
          $ref: '#/components/schemas/ExposureValue'
        primaryLocId:
          type: integer
          format: int32
        siteName:
          $ref: '#/components/schemas/ExposureValue'
        buildings:
          type: integer
          format: int32
        stories:
          type: integer
          format: int32
        floorOccupancy:
          type: string
        floorArea:
          type: number
          format: double
        bldgHeight:
          type: number
          format: double
        heightUnit:
          $ref: '#/components/schemas/ExposureValue'
        slope:
          type: number
          format: double
        otherZone:
          type: string
        huZone:
          $ref: '#/components/schemas/ExposureValue'
        areaUnit:
          $ref: '#/components/schemas/ExposureValue'
        bldgValuation:
          type: number
          format: double
        valuationDiffAmt:
          type: number
          format: double
        valuationDiffPercent:
          type: number
          format: double
        floodDefenseElevation:
          type: number
          format: double
        floodDefenseElevationUnit:
          $ref: '#/components/schemas/ExposureValue'
        rentalPropertyIdentifier:
          $ref: '#/components/schemas/ExposureValue'
        mfdSubcategory:
          $ref: '#/components/schemas/ExposureValue'
        dwellTime:
          type: integer
          format: int32
        userGroundElev:
          type: number
          format: double
        userBfe:
          type: number
          format: double
        floodDefHtAboveGrnd:
          type: number
          format: double
        contentLossTrigger:
          $ref: '#/components/schemas/ExposureValue'
        isPrimaryBldg:
          type: boolean
        useContentValue:
          $ref: '#/components/schemas/ExposureValue'
        nship:
          type: integer
          format: int32
        isValid:
          type: boolean
      required:
        - locationNumber
    ReinsuranceCession:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        exposureId:
          type: integer
          format: int32
        exposureType:
          type: string
          enum:
            - POL
            - LOC
        type:
          type: string
          enum:
            - None
            - Facultative
            - Treaty
        facReinsurer:
          $ref: '#/components/schemas/FacReinsurer'
        treaty:
          $ref: '#/components/schemas/Treaty'
        layerNumber:
          type: integer
          format: int32
        layerAmount:
          type: number
          format: double
        excessAmount:
          type: number
          format: double
        percentReinsurance:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        priority:
          type: integer
          format: int32
        isValid:
          type: boolean
    LocationSearchItem:
      type: object
      properties:
        propertyReference:
          type: string
        location:
          $ref: '#/components/schemas/Location'
    LocationSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/LocationSearchItem'
    Link:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
      required:
        - href
        - method
        - rel
    Meta:
      type: object
      properties:
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        count:
          type: integer
          format: int32
    MetaLinks:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
        - links
        - meta
    PolicyConditionSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/PolicyCondition'
    CopyPolicyInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
    Policy:
      required:
        - number
        - status
      type: object
      properties:
        id:
          type: integer
          format: int32
        number:
          type: string
        accountId:
          type: integer
          format: int32
        lob:
          $ref: '#/components/schemas/ExposureValue'
        peril:
          $ref: '#/components/schemas/ExposureValue'
        status:
          $ref: '#/components/schemas/ExposureValue'
        inceptionDate:
          type: string
        expirationDate:
          type: string
        currency:
          $ref: '#/components/schemas/ExposureValue'
        partOf:
          type: number
          format: double
        attachmentPoint:
          type: number
          format: double
        minDeductible:
          type: number
          format: double
        maxDeductible:
          type: number
          format: double
        blanketLimit:
          type: number
          format: double
        blanketDeductible:
          type: number
          format: double
        blanketPremium:
          type: number
          format: double
        biLifeLine:
          type: integer
          format: int32
        deductType:
          type: integer
          format: int32
        structure:
          $ref: '#/components/schemas/ExposureValue'
        coverageBase:
          $ref: '#/components/schemas/ExposureValue'
        limitGU:
          $ref: '#/components/schemas/ExposureValue'
        userText1:
          type: string
        userText2:
          type: string
        userText3:
          type: string
        userText4:
          type: string
        isValid:
          type: boolean
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/PolicyCoverage'
        reinsuranceCessions:
          type: array
          items:
            $ref: '#/components/schemas/ReinsuranceCession'
        policyConditions:
          type: array
          items:
            $ref: '#/components/schemas/PolicyCondition'
        CustomData:
          type: object
          additionalProperties:
            type: string
        newCauseOfLoss:
          $ref: '#/components/schemas/ExposureValue'
        percentOfLossDeductible:
          type: number
          format: double
        isFranchiseDeductible:
          $ref: '#/components/schemas/ExposureValue'
        aggregateMinDeductible:
          description: Value of the minimum aggregate deductible. 
          type: number
          format: double
        aggregateLimit:
          description: Value of the maximum aggregate payout for the policy. 
          type: number
          format: double
    PolicyCoverage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        peril:
          $ref: '#/components/schemas/ExposureValue'
        lossType:
          type: string
          enum:
            - Building
            - Contents
            - BI
            - CombinedCvg
        premium:
          type: number
          format: double
        limit:
          type: number
          format: double
        deductible:
          type: number
          format: double
        label:
          $ref: '#/components/schemas/ExposureValue'
        accumulation:
          type: integer
          format: int32
        isValid:
          type: boolean
        percentOfLossDeductibleAmount:
          type: number
          format: double
        isFranchiseDeductible:
          $ref: '#/components/schemas/ExposureValue'
      required:
        - label
        - lossType
        - peril
    PolicyConditionMetrics:
      type: object
      properties:
        notIncludedCount:
          type: integer
          format: int32
        includedByFilterCount:
          type: integer
          format: int32
        includedByUserCount:
          type: integer
          format: int32
    PolicySearchResult:
      type: object
      properties:
        matchCount:
          type: integer
          format: int64
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
    CopyPortfolioInfo:
      type: object
      properties:
        deep:
          type: boolean
        newName:
          type: string
        newNumber:
          type: string
        newDescription:
          type: string
        isDeep:
          type: boolean
      required:
        - newDescription
        - newName
        - newNumber
    Portfolio:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        description:
          type: string
        createDate:
          type: string
        stampDate:
          type: string
      required:
        - description
        - name
        - number
    PortfolioMetrics:
      type: object
      properties:
        totalAccounts:
          type: integer
          format: int32
        totalLocations:
          type: integer
          format: int32
        totalPolicies:
          type: integer
          format: int32
        perilsExposed:
          type: string
        name:
          type: string
        number:
          type: string
        description:
          type: string
        owner:
          type: string
        createDate:
          type: string
        geocodeVersion:
          type: string
        hazardVersion:
          type: string
    PortfolioFilteredAccountsInput:
      type: object
      properties:
        selectAll:
          type: boolean
        queryFilter:
          type: string
        markedAccounts:
          type: array
          items:
            type: integer
            format: int32
        manageExistingAccounts:
          type: boolean
    PortfolioAccountsInput:
      type: object
      properties:
        accountsToAdd:
          type: array
          items:
            type: integer
            format: int32
        accountsToRemove:
          type: array
          items:
            type: integer
            format: int32
    PortfolioSearchItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        description:
          type: string
        createDate:
          type: string
        stampDate:
          type: string
        geocodeVersion:
          type: string
        hazardVersion:
          type: string
        ownerName:
          type: string
        updatedBy:
          type: string
        jobStatus:
          type: string
        jobStartDate:
          type: string
        jobEndDate:
          type: string
      required:
        - description
        - name
        - number
    PortfolioSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioSearchItem'
    ProducerSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/Producer'
    CopyStepPolicyInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
    StepPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
          minimum: 1
        number:
          type: string
          maxLength: 50
          minLength: 0
        name:
          type: string
          maxLength: 50
          minLength: 0
        stepOrderId:
          type: integer
          format: int32
        lobDetId:
          $ref: '#/components/schemas/ExposureValue'
        causeOfLoss:
          $ref: '#/components/schemas/ExposureValue'
        inceptionDate:
          type: string
        expirationDate:
          type: string
        payoutAmount:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/ExposureValue'
        payoutFunctionId:
          $ref: '#/components/schemas/ExposureValue'
        share:
          type: number
          format: double
        excessAmount:
          type: number
          format: double
        isPerRiskSubject:
          $ref: '#/components/schemas/ExposureValue'
        childOrderId:
          type: string
          pattern: '^$|^([1-9][0-9]*)(,([1-9][0-9]*))*$'
        subjectFunctionId:
          $ref: '#/components/schemas/ExposureValue'
        coverageBase:
          $ref: '#/components/schemas/ExposureValue'
        limitGU:
          $ref: '#/components/schemas/ExposureValue'
      required:
        - expirationDate
        - inceptionDate
        - number
    StepPolicySearchResult:
      type: object
      properties:
        totalSearchCount:
          type: integer
          format: int64
        stepPolicies:
          type: array
          items:
            $ref: '#/components/schemas/StepPolicy'
    CopyTreatyInfo:
      type: object
      properties:
        newNumber:
          type: string
        newName:
          type: string
      required:
        - newNumber
    UnderwriterSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/UnderWriter'
    QueryEntity:
      type: object
      properties:
        q:
          type: string
    PortfolioConditionCriteria:
      type: object
      properties:
        id:
          type: integer
          format: int32
        logic:
          type: string
        openPar:
          type: string
        field:
          type: string
        operator:
          type: string
        value:
          type: string
        closePar:
          type: string
    GlobalAnalysisSettings:
      type: object
      properties:
        franchiseDeductible:
          type: boolean
        minLossThreshold:
          type: number
          format: double
          exclusiveMinimum: false
          minimum: 0
        treatConstructionOccupancyAsUnknown:
          type: boolean
        numMaxLossEvent:
          type: integer
          format: int32
          maximum: 5000
          minimum: 1
      required:
        - franchiseDeductible
        - minLossThreshold
        - numMaxLossEvent
        - treatConstructionOccupancyAsUnknown
    ProcessInputV2:
      type: object
      properties:
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        edm:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        modelProfileId:
          type: integer
          format: int32
        eventRateSchemeId:
          type: integer
          format: int32
        treaties:
          type: array
          items:
            type: integer
            format: int32
        jobName:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        id:
          type: integer
          format: int32
          minimum: 1
        outputProfileId:
          type: integer
          format: int32
        globalAnalysisSettings:
          $ref: '#/components/schemas/GlobalAnalysisSettings'
        climateChangeVariationId:
          type: integer
          format: int32
          maximum: 68
          minimum: 0
      required:
        - currency
        - edm
    AggregateExposuresListSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int64
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/AggregateExposuresList'
    AccountInput:
      type: object
      properties:
        operationType:
          type: string
          enum:
            - INSERT
            - UPDATE
            - DELETE
        label:
          type: string
        policies:
          type: array
          items:
            $ref: '#/components/schemas/PolicyInput'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationInput'
        errors:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        status:
          type: string
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        underwriter:
          $ref: '#/components/schemas/UnderWriter'
        branch:
          $ref: '#/components/schemas/Branch'
        userId1:
          type: string
        userId2:
          type: string
        userId3:
          type: string
        userId4:
          type: string
        userText1:
          type: string
        userText2:
          type: string
        createDate:
          type: string
        stampDate:
          type: string
        state:
          type: string
          enum:
            - InActive
            - Active
        linkId:
          type: string
        guid:
          type: string
        isValid:
          type: boolean
        CustomData:
          type: object
          additionalProperties:
            type: string
      required:
        - label
        - number
    BulkExposureInput:
      type: object
      properties:
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioInput'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountInput'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationInput'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/PolicyInput'
        treaties:
          type: array
          items:
            $ref: '#/components/schemas/TreatyInput'
        uploadId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
    LocationInput:
      type: object
      properties:
        operationType:
          type: string
          enum:
            - INSERT
            - UPDATE
            - DELETE
        label:
          type: string
        id:
          type: integer
          format: int32
        errors:
          type: array
          items:
            type: string
        esdbBuildingAttribute:
          $ref: '#/components/schemas/LocationBuildingAttribute'
        property:
          $ref: '#/components/schemas/Property'
        address:
          $ref: '#/components/schemas/Address'
        biDetail:
          $ref: '#/components/schemas/LocationBiDetail'
        eqDetail:
          $ref: '#/components/schemas/LocationEqDetail'
        wsDetail:
          $ref: '#/components/schemas/LocationWsDetail'
        toDetail:
          $ref: '#/components/schemas/LocationToDetail'
        flDetail:
          $ref: '#/components/schemas/LocationFlDetail'
        frDetail:
          $ref: '#/components/schemas/LocationFrDetail'
        trDetail:
          $ref: '#/components/schemas/LocationTrDetail'
        buildingAttribute:
          $ref: '#/components/schemas/BuildingAttribute'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/LocationCoverage'
        reinsuranceCessions:
          type: array
          items:
            $ref: '#/components/schemas/ReinsuranceCession'
        wcDetails:
          type: array
          items:
            $ref: '#/components/schemas/LocationWcDetail'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        tiv:
          type: number
          format: double
        riskAssessorCurves:
          type: string
        locationConditions:
          type: array
          items:
            $ref: '#/components/schemas/LocationCondition'
        maxCvgBldgValuation:
          type: number
          format: double
      required:
        - address
        - label
        - property
    PolicyInput:
      type: object
      properties:
        operationType:
          type: string
          enum:
            - INSERT
            - UPDATE
            - DELETE
        label:
          type: string
        errors:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
        number:
          type: string
        accountId:
          type: integer
          format: int32
        lob:
          $ref: '#/components/schemas/ExposureValue'
        peril:
          $ref: '#/components/schemas/ExposureValue'
        status:
          $ref: '#/components/schemas/ExposureValue'
        inceptionDate:
          type: string
        expirationDate:
          type: string
        currency:
          $ref: '#/components/schemas/ExposureValue'
        partOf:
          type: number
          format: double
        attachmentPoint:
          type: number
          format: double
        minDeductible:
          type: number
          format: double
        maxDeductible:
          type: number
          format: double
        blanketLimit:
          type: number
          format: double
        blanketDeductible:
          type: number
          format: double
        blanketPremium:
          type: number
          format: double
        biLifeLine:
          type: integer
          format: int32
        deductType:
          type: integer
          format: int32
        structure:
          $ref: '#/components/schemas/ExposureValue'
        coverageBase:
          $ref: '#/components/schemas/ExposureValue'
        limitGU:
          $ref: '#/components/schemas/ExposureValue'
        userText1:
          type: string
        userText2:
          type: string
        userText3:
          type: string
        userText4:
          type: string
        isValid:
          type: boolean
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/PolicyCoverage'
        reinsuranceCessions:
          type: array
          items:
            $ref: '#/components/schemas/ReinsuranceCession'
        policyConditions:
          type: array
          items:
            $ref: '#/components/schemas/PolicyCondition'
        CustomData:
          type: object
          additionalProperties:
            type: string
        newCauseOfLoss:
          $ref: '#/components/schemas/ExposureValue'
        percentOfLossDeductible:
          type: number
          format: double
        isFranchiseDeductible:
          $ref: '#/components/schemas/ExposureValue'
      required:
        - label
        - number
        - status
    PortfolioInput:
      type: object
      properties:
        operationType:
          type: string
          enum:
            - INSERT
            - UPDATE
            - DELETE
        label:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountInput'
        id:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        description:
          type: string
        createDate:
          type: string
        stampDate:
          type: string
      required:
        - description
        - label
        - name
        - number
    TreatyInput:
      type: object
      properties:
        treatyId:
          type: integer
          format: int32
        treatyNumber:
          type: string
          maxLength: 20
          minLength: 0
        treatyName:
          type: string
          maxLength: 40
          minLength: 0
        cedant:
          $ref: '#/components/schemas/Cedant'
        producer:
          $ref: '#/components/schemas/Producer'
        treatyType:
          $ref: '#/components/schemas/ExposureValue'
        currency:
          $ref: '#/components/schemas/ExposureValue'
        attachBasis:
          $ref: '#/components/schemas/ExposureValue'
        attachLevel:
          $ref: '#/components/schemas/ExposureValue'
        premium:
          type: number
          format: double
        occurLimit:
          type: number
          format: double
        attachPt:
          type: number
          format: double
        riskLimit:
          type: number
          format: double
        retentAmt:
          type: number
          format: double
        pcntPlaced:
          type: number
          format: double
        effectDate:
          type: string
        expireDate:
          type: string
        pcntRetent:
          type: number
          format: double
        pcntRiShare:
          type: number
          format: double
        pcntCovered:
          type: number
          format: double
        priority:
          type: integer
          format: int32
        numOfReinst:
          type: integer
          format: int32
        reinstCharge:
          type: number
          format: double
        maolAmount:
          type: number
          format: double
        isValid:
          type: boolean
        userId1:
          type: string
        userId2:
          type: string
        lobs:
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
        aggregateDeductible:
          type: number
          format: double
        aggregateLimit:
          type: number
          format: double
        lossOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/LossOccurrence'
        operationType:
          type: string
          enum:
            - INSERT
            - UPDATE
            - DELETE
        label:
          type: string
        errors:
          type: array
          items:
            type: string
      required:
        - attachLevel
        - cedant
        - label
        - treatyNumber
        - treatyType
    AggregatePortfolioFlatFileMapping:
      type: object
      properties:
        resolutionConversionFrom:
          type: string
        resolutionConversionTo:
          type: string
        columnMapping:
          type: object
          additionalProperties:
            type: integer
            format: int32
        dataRowStart:
          type: integer
          format: int32
          minimum: 1
        countryCode:
          type: string
        resolution:
          type: string
        dependencyResolution:
          type: string
      required:
        - columnMapping
        - countryCode
        - resolution
    S3Bucket:
      type: object
      properties:
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        sessionToken:
          type: string
        s3Path:
          type: string
        s3Region:
          type: string
    FileInput:
      type: object
      properties:
        fileInputType:
          type: string
          enum:
            - MRI
            - ALM
        fileType:
          type: string
        fileSize:
          type: integer
          format: int64
        fileName:
          type: string
      required:
        - fileName
        - fileType
    ErrorBody:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        category:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EdmImportInput:
      type: object
      properties:
        share:
          description: Indicates if the exposure set is shared with other groups.
          type: boolean
        groups:
          description: List of groups that may access the exposure set.
          type: array
          items:
            type: string
          uniqueItems: true
    RDMImportInput:
      type: object
      properties:
        uploadId:
          type: string
          description: ID for AWS upload task or name of RDM on Data Bridge.
        rdmName:
          type: string
          description: User-friendly name to tag all imported results.
        edmDataSourceName:
          type: string
          description: |
            Filter results data by exposure set. If an EDM is specified, the operation only imports results data that is based on exposure data stored in the specified EDM.
        analysisIdFilter:
          type: array
          description: |
            Filter results data by ID numbers. If specified, the operation imports the specified IDs and ignores all others.
          items:
            type: integer
            format: int32
        tableFilter:
          type: array
          description: |
            Filter results data by database table. If specified, the operation only imports results data that stored in that table.
          items:
            type: string
        perspectiveFilter:
          type: array
          description: |
            Filter for selecting results data based on the <<glossary:financial perspective>>s used in calculating those results. Identified by a two-character string (e.g. `GU` `GR`, `RG`).
          items:
            type: string
        exposureSetId:
          type: string
          description: |
            ID number of exposure set. If specified, results data is added to the specified exposure set.
        share:
          description: Indicates if the exposure set is shared with other groups.
          type: boolean
        importFromServer:
          type: boolean
          description: If `true`, imports results data from the specified `serverName` query parameter. By default, `false`.
        groups:
          description: List of groups that may access the exposure set.
          type: array
          items:
            type: string
          uniqueItems: true
      required:
        - rdmName
        - uploadId
    S3UploadHelper:
      type: object
      properties:
        bucketPrefix:
          type: string
        awsRegion:
          type: string
        uploadId:
          type: string
        uploadKey1:
          type: string
        uploadKey2:
          type: string
        uploadKey3:
          type: string
    DataBridgeDatabase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        serverId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        version:
          type: string
        datasource:
          type: string
        dbType:
          type: string
          enum:
            - EDM
            - RDM
        exposureSetId:
          type: string
        groups:
          type: array
          items:
            type: string
    DataBridgeDatabaseSearchResult:
      type: object
      properties:
        totalResults:
          type: integer
          format: int32
        dataBridgeDatabases:
          type: array
          items:
            $ref: '#/components/schemas/DataBridgeDatabase'
    EdmRequest:
      type: object
      properties:
        share:
          description: Indicates if the exposure set is shared with other groups.
          type: boolean
        groups:
          description: List of groups that may access the exposure set.
          type: array
          items:
            type: string
          uniqueItems: true
    ServerInfo:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
          enum:
            - RISK_MODELER
            - DATA_BRIDGE
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        host:
          type: string
          writeOnly: true
        port:
          type: string
          writeOnly: true
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        totalDiskSpaceInMb:
          type: string
          example: 2096128
        availableDiskSpaceInMb:
          type: string
          example: 1995111
        usedDiskSpaceInMb:
          type: string
          example: 101018
        defaultServer:
          type: boolean
          example: false 
    DataSourceSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int32
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/UserDatabaseV1'
    UserDatabaseV1:
      type: object
      properties:
        datasourceName:
          type: string
        edmName:
          type: string
        permissionType:
          type: integer
          format: int32
        isDefault:
          type: boolean
        metrics:
          type: object
          additionalProperties:
            type: object
        serverState:
          type: string
          enum:
            - READY
            - UPGRADING
            - UPGRADE_FAILED
            - LOCK
        serverNamespace:
          type: string
          enum:
            - RISK_MODELER
            - DATA_BRIDGE
        owner:
          type: string
        exposureSetId:
          type: string
        createDate:
          example: 2022-10-07 11:35:13.00
          type: string
        datasourceId:
          type: integer
          format: int32
    ExportInput:
      type: object
      properties:
        type:
          description: 'The `type` attribute identifies the model type: `ExposureExportInput`, `LocationResultsExportInput`, `ResultsExportInputV2`.'
          type: string
          example: ExposureExportInput
        exportType:
          description: 'The required `exportType` identifies the database to export: EDM, LocationResults, or RDM.'
          type: string
          example: EDM
          enum:
            - EDM
            - RDM
            - LOCATION_RESULTS
        exportFormat:
          description: 'The `exportFormat` attribute specified the format of the exported data (BAK, CSV, MDF or PARQUET). EDM and RDM data modules may be exported to the BAK and MDF formats. Analysis results may be exported to the CSV or PARQUET formats. Locations results can be exported to the CSV format.'
          type: string
          example: BAK
          enum:
            - CSV
            - PARQUET
            - BAK
            - MDF
            - JSON
      discriminator:
        propertyName: type
      required:
        - exportType
    ExportOptions:
      description: Indicate the parts of the exposure that will be exported.
      type: object
      properties:
        exportAccounts:
          type: boolean
        exportLocations:
          type: boolean
        exportPolicies:
          type: boolean
        exportTreaties:
          type: boolean
        exportReinsuranceInfo:
          type: boolean
        exportPerilDetailsInfo:
          type: boolean
      example: '"exportAccounts": true, "exportLocations": true, "exportPolicies": true, "exportTreaties": true, "exportReinsuranceInfo": true, "exportPerilDetailsInfo": true'
    ExposureExportInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportInput'
        - type: object
          properties:
            sourceDatasource:
              description: The name of the source from which the exposure will be exported.
              type: string
              example: Source_EDM
            destinationDatasource:
              description: The name of the destination where the exposure will be exported.
              type: string
              example: Destination_EDM
            exposureType:
              description: The type of exposure that will be exported.
              type: string
              example: ACCOUNT
              enum:
                - PORTFOLIO
                - ACCOUNT
                - LOCATION
                - POLICY
                - STEP_POLICY
                - TREATY
                - AGGPORTFOLIO
            exposureIds:
              type: array
              items:
                type: integer
                description: The IDs of the exposures that will be exported.
                format: int32
            sqlServerVersion:
              type: string
              enum:
                - '2019'
                - '2014'
            download:
              description: Indicate if the EDM will be downloaded.
              type: boolean
              example: true
            createnew:
              description: Indicate if the EDM will be newly created.
              type: boolean
              example: true
            exportOptions:
              $ref: '#/components/schemas/ExportOptions'
            sqlVersion:
              description: SQL server version of exported BAK or MDF.
              type: string
              example: '2014'
              default: '2014'
              enum:
                - '2019'
                - '2014'
            groups:
              type: array
              items:
                type: string
              uniqueItems: true
      required:
        - exportType
        - exposureIds
        - exposureType
        - sourceDatasource
    LocationResultsExportInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportInput'
        - type: object
          properties:
            analysisIds:
              type: array
              items:
                type: integer
                description: The Ids of the analyses that will be use for generating Location Result Export. Currently support exporting for only one analyses id.
                format: int32
            exportFields:
              type: array
              items:
                type: string
                description: Exported fields needed for generating of the Export Location Results file.
                example: '[locationId, locationNumber, locationName]'
            perspectives:
              type: array
              items:
                type: string
                description: Financial perspectives needed for generating of the Export Location Result file.
                example: '[GU, GR]'
            fileName:
              description: The name of the file that will be generated.
              type: string
              example: LocationResult
              pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
      required:
        - analysisIds
        - exportType
    LossDetails:
      description: List with loss details.
      type: object
      properties:
        lossType:
          description: Different type of losses.
          type: string
          example: STATS
        outputLevels:
          type: array
          items:
            type: string
            description: Output Levels that should be saved in the result.
            example: '[Admin1, Admin2, Contract, Country]'
        perspectives:
          type: array
          items:
            type: string
            description: Financial perspectives that should be saved in the result.
            example: '[GU, GR]'
      example: '[LossDetails_STATS, LossDetails_EP, LossDetails_LOSS_TABLE]'
    ResultsExportInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportInput'
        - type: object
          properties:
            analysisId:
              description: ID of the analysis.
              type: integer
              format: int32
              example: 24088
              minimum: 1
            rdmName:
              description: The name of the RDM.
              type: string
              example: RMS_RDM
              maxLength: 64
              minLength: 0
              pattern: '^\w((?!--)[\w\s-])*\w$|^\w*$'
            lossDetails:
              type: array
              items:
                $ref: '#/components/schemas/LossDetails'
      required:
        - exportType
    ResultsExportInputV2:
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportInput'
        - type: object
          properties:
            analysisIds:
              type: array
              items:
                type: integer
                description: List with analyses IDs.
                format: int32
              maxItems: 50
              minItems: 0
              uniqueItems: true
            additionalOutputs:
              type: array
              items:
                type: string
                description: List with additional outputs.
                example: '[HAZARD]'
                enum:
                  - HAZARD
                  - DAMAGE
                  - UNCERTAINTY
              uniqueItems: true
            rdmName:
              description: The name of the RDM.
              type: string
              example: RMS_RDM
              maxLength: 64
              minLength: 0
              pattern: '^\w((?!--)[\w\s-])*\w$|^\w*$'
            lossDetails:
              type: array
              items:
                $ref: '#/components/schemas/LossDetails'
            sqlServerVersion:
              type: string
              enum:
                - '2019'
                - '2014'
            createnew:
              description: 'Shows if the RDM will be newly created or not. If it''s not passed, it''s set to true by default.'
              type: boolean
              example: false
            sqlVersion:
              description: SQL server version of exported BAK or MDF.
              type: string
              example: '2014'
              default: '2014'
              enum:
                - '2019'
                - '2014'
            nonWeightedPlt:
              type: boolean
            exportHdLossesAs:
              description: 'Portfolio-level EP analysis results may be exported as <<glossary:ELT>>s or <<glossary:PLT>>s. If unspecified, HD losses are exported as ELT losses.'
              type: string
              enum:
                - ELT
                - PLT
      required:
        - analysisIds
        - exportType
    DownloadResultsInput:
      type: object
      properties:
        workflowId:
          type: string
        lossDetails:
          type: array
          items:
            $ref: '#/components/schemas/LossDetails'
      required:
        - workflowId
    AccountFileInput:
      type: object
      properties:
        number:
          type: string
        name:
          type: string
      required:
        - name
        - number
    SubmittedImportJob:
      type: object
      properties:
        bucketId:
          description: ID of the Amazon S3 storage bucket.
          example: 3456
          type: integer
          format: int32
          minimum: 1
        accountsFileId:
          description: ID of uploaded <<glossary:account source file>>.
          example: 451
          type: integer
          format: int32
        locationsFileId:
          description: ID of uploaded <<glossary:location source file>>.
          example: 571
          type: integer
          format: int32
        reinsuranceFileId:
          description: ID of uploaded <<glossary:reinsurance source file>>.
          example: 138 
          type: integer
          format: int32
        mappingFileId:
          description: ID of uploaded <<glossary:import mapping file>>.
          example: 76 
          type: integer
          format: int32
        locale:
          type: string
          description: |
            Language convention assumed for imported dates and numbers. One of `de-DE` (Standarddeutsch), `en-GB` (British English), `en-US` (American English), `fr-FR` (le français standard). By default, `en-US`.
          example: en-US
        currency:
          description: |
            Default currency for imported data. Specifies the currency used if the currency column for an imported exposure is undefined or blank. Does not overwrite specified currency values.
          example: USD
          type: string
        dataSourceName:
          description: Name of EDM datastore into which the account, location, and reinsurance data is imported.
          type: string
          example: myEDM
        delimiter:
          description: Delimiter used to identify data columns in the flat files. One of `TAB`, `COMMA`, `SEMICOLON`.
          type: string
          enum:
            - TAB
            - COMMA
            - SEMICOLON
        skipLines:
          description: Number of lines to skip in source files if the flat files contain header columns.
          type: integer
          format: int32
          minimum: 0
          example: 0
        appendLocations:
          description: If `true`, imported location data is added to an existing account.
          type: boolean
          example: false
        geoHaz:
          description: This functionality is not supported. By default, `false`.
          type: boolean
          example: false
        portfolioId:
          description: |
            ID of portfolio. If specified, the imported accounts are associated that portfolio. If null, the uploaded accounts are not associated with any portfolio.
          type: integer
          example: 57
          format: int32
        importType:
          description: Import job type. One of `MRI`, `ALM`.
          type: string
          enum:
            - MRI
            - ALM
        portfolioIds:
          description: |
            Array of portfolios identifed by ID.
          type: array
          items:
            type: integer
            format: int32
      required:
        - bucketId
        - dataSourceName
        - delimiter
    ImportSourceFileItem:
      type: object
      properties:
        source:
          type: string
        sourceExample:
          type: string
    ImportSourceFileResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ImportSourceFileItem'
    ImportMappingItem:
      type: object
      properties:
        source:
          type: string
        destination:
          type: string
    ImportMappingOutput:
      type: object
      properties:
        accountItems:
          type: array
          items:
            $ref: '#/components/schemas/ImportMappingItem'
        locationItems:
          type: array
          items:
            $ref: '#/components/schemas/ImportMappingItem'
        reinsuranceItems:
          type: array
          items:
            $ref: '#/components/schemas/ImportMappingItem'
      required:
        - accountItems
        - locationItems
        - reinsuranceItems
    ImportMappingInput:
      type: object
      properties:
        mapFileName:
          type: string
          description: Name of the import mapping file.
        accountItems:
          type: array
          description: Array of mappings between <<glossary:account resource file>> columns and EDM columns.
          items:
            $ref: '#/components/schemas/ImportMappingItem'
        locationItems:
          description: Array of mappings between <<glossary:location resource file>> columns and EDM columns.
          type: array
          items:
            $ref: '#/components/schemas/ImportMappingItem'
        reinsuranceItems:
          type: array
          description: Array of mappings between <<glossary:reinsurance resource file>> columns and EDM columns.
          items:
            $ref: '#/components/schemas/ImportMappingItem'
      required:
        - accountItems
        - locationItems
        - mapFileName
    DataBridgeRegisterInput:
      type: object
      properties:
        serverId:
          type: integer
          format: int64
          minimum: 1
        datasourceName:
          type: string
          maxLength: 80
          minLength: 1
          pattern: '^\w((?!--)[\w\s-])*\w$|^\w$'
        exposureSetId:
          type: string
        share:
          description: Indicates if the exposure set is shared with other groups.
          type: boolean
        groups:
          description: List of groups that may access the exposure set.
          type: array
          items:
            type: string
          uniqueItems: true
      required:
        - datasourceName
    DataSourceSearchResultV2:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int32
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/UserDatabaseV2'
    UserDatabaseV2:
      type: object
      properties:
        datasourceName:
          type: string
        edmName:
          type: string
        permissionType:
          type: integer
          format: int32
        isDefault:
          type: boolean
        metrics:
          type: object
          additionalProperties:
            type: object
        serverState:
          type: string
          enum:
            - READY
            - UPGRADING
            - UPGRADE_FAILED
            - LOCK
        serverNamespace:
          type: string
          enum:
            - RISK_MODELER
            - DATA_BRIDGE
        owner:
          type: string
        exposureSetId:
          type: string
        serverName:
          type: string
    KeyValueStore:
      type: object
      properties:
        rows:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
    DomainReference:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    EntityMeta:
      type: object
      properties:
        meta:
          type: string
          format: uri
        values:
          type: string
          format: uri
    DomainItem:
      type: object
      properties:
        domainName:
          type: string
        tableSpace:
          type: string
        tableName:
          type: string
        dataOwnedBy:
          type: string
        domainSchema:
          $ref: '#/components/schemas/DomainSchema'
        isActive:
          type: boolean
    DomainResult:
      type: object
      properties:
        attributesTotalMatch:
          type: integer
          format: int64
        domainItems:
          $ref: '#/components/schemas/DomainItem'
    DomainSchema:
      type: object
      properties:
        type:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    Field:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        nullable:
          type: boolean
        primaryKey:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: object
    SecondaryModifierItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    SecondaryModifierResult:
      type: object
      properties:
        secondaryModifiersTotalMatch:
          type: integer
          format: int64
        secondaryModifierItem:
          type: array
          items:
            $ref: '#/components/schemas/SecondaryModifierItem'
    GroupDetail:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ExposureSet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetail'
    ExposureSetSearchResult:
      type: object
      properties:
        searchTotalMatch:
          type: integer
          format: int32
        searchItems:
          type: array
          items:
            $ref: '#/components/schemas/ExposureSet'
    PatchExposureSetReq:
      type: object
      properties:
        operation:
          description: Edit to make to the exposure set. `ADD` or `REMOVE` groups. `UPDATE` names.
          type: string
          enum:
            - ADD
            - UPDATE
            - REMOVE
        targetProperty:
          description: Exposure set attribute to edit. `GROUPS` if edit is to `ADD` or `REMOVE` groups applied to exposure set. `NAME` if edit is to `UPDATE` the name of the exposure set.
          type: string
          enum:
            - NAME
            - GROUPS
        value:
          description: 'Value of edited attribute. If `GROUPS`, the ID of a group. If `NAME`, the updated name of the exposure set.'
          type: string
      required:
        - operation
        - targetProperty
        - value
    ExposureBatchOperation:
      type: object
      allOf:
        - $ref: '#/components/schemas/OperationV1'
        - type: object
          properties:
            input:
              type: object
              properties:
                groupId:
                  type: integer
                  format: int64
                analysisIds:
                  type: array
                  items:
                    type: integer
                    format: int32
                  maxItems: 2147483647
                  minItems: 1
                  uniqueItems: true
                reportingWindowStart:
                  type: string
                  maxLength: 2147483647
                  minLength: 1
                numOfSimulations:
                  type: integer
                  format: int64
                simulationWindowStart:
                  type: string
                  maxLength: 2147483647
                  minLength: 1
                simulationWindowEnd:
                  type: string
                  maxLength: 2147483647
                  minLength: 1
                simulateToPLT:
                  type: boolean
                propagateDetailedLosses:
                  type: boolean
                regionPerilSimulationSet:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegionPerilSimulation'
                minimizedRegionPerilSimulationSet:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegionPerilSimulation'
                name:
                  type: string
                  maxLength: 64
                  minLength: 1
                  pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
                description:
                  type: string
                currency:
                  $ref: '#/components/schemas/Currency'
              required:
                - analysisIds
                - currency
                - name
                - numOfSimulations
                - propagateDetailedLosses
                - simulateToPLT
      required:
        - input
        - label
        - operation
    GeoHazInput:
      type: object
      properties:
        datasource:
          type: string
        id:
          type: string
        layers:
          type: array
          items:
            $ref: '#/components/schemas/LayerInfo'
      required:
        - datasource
        - layers
    GeohazOperationV1:
      type: object
      allOf:
        - $ref: '#/components/schemas/OperationV1'
        - type: object
          properties:
            input:
              $ref: '#/components/schemas/GeoHazInput'
      required:
        - input
        - label
        - operation
    GroupOperationV1:
      type: object
      allOf:
        - $ref: '#/components/schemas/OperationV1'
        - type: object
          properties:
            input:
              $ref: '#/components/schemas/GroupingInput'
      required:
        - input
        - label
        - operation
    GroupingInput:
      type: object
      properties:
        groupId:
          type: integer
          format: int64
        analysisIds:
          type: array
          items:
            type: integer
            format: int32
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
        reportingWindowStart:
          type: string
          maxLength: 2147483647
          minLength: 1
        numOfSimulations:
          type: integer
          format: int64
        simulationWindowStart:
          type: string
          maxLength: 2147483647
          minLength: 1
        simulationWindowEnd:
          type: string
          maxLength: 2147483647
          minLength: 1
        simulateToPLT:
          type: boolean
        propagateDetailedLosses:
          type: boolean
        regionPerilSimulationSet:
          type: array
          items:
            $ref: '#/components/schemas/RegionPerilSimulation'
        minimizedRegionPerilSimulationSet:
          type: array
          items:
            $ref: '#/components/schemas/RegionPerilSimulation'
        name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        description:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - analysisIds
        - currency
        - name
        - numOfSimulations
        - propagateDetailedLosses
        - simulateToPLT
    OperationV1:
      description: List containing sub-jobs of the batch workflow
      type: object
      properties:
        label:
          description: The unique name of the operation.
          type: string
          maxLength: 16
          minLength: 2
          pattern: '[a-zA-Z]+[a-zA-Z0-9_]*'
        operation:
          description: 'The `operation` attribute identifies the operation model type and API to be invoked. It can be one of `geohaz`, `process` or `group`'
          type: string
        input:
          type: object
          additionalProperties:
            type: object
        dependsOn:
          type: array
          items:
            type: string
          uniqueItems: true
        continueOnFailure:
          type: boolean
      anyOf:
        - $ref: '#/components/schemas/GeohazOperationV1'
        - $ref: '#/components/schemas/ProcessOperationV1'
        - $ref: '#/components/schemas/GroupOperationV1'
        - $ref: '#/components/schemas/OperationV2'
      discriminator:
        propertyName: operation
      required:
        - input
        - label
        - operation
    OperationV2:
      type: object
      allOf:
        - $ref: '#/components/schemas/OperationV1'
        - type: object
          properties:
            operation:
              description: The `operation` attribute identifies the operation API to be invoked.
              type: string
            input:
              type: object
      required:
        - input
        - label
        - operation
    ProcessOperationV1:
      type: object
      allOf:
        - $ref: '#/components/schemas/OperationV1'
        - type: object
          properties:
            input:
              $ref: '#/components/schemas/WorkflowPlanProcessInput'
      required:
        - input
        - label
        - operation
    UserDefinedWorkflow:
      type: object
      properties:
        type:
          description: >
            `PortfolioWorkflow` or `AccountWorkflow`. Required if workflow operations are identified by keyword (e.g. `geohaz`, `group`, `batch`). May be omitted if operations are identfied by path.
          type: string
          example: PortfolioWorkflow
        name:
          description: Name of user-defined workflow.
          type: string
          example: Batch_Workflow
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        operations:
          description: >
            Array of operation objects. Each object is defined by four attributes: `label`, `operation`, `dependsOn`, `input`.
          type: array
          items:
            $ref: '#/components/schemas/OperationV1'
          maxItems: 2147483647
          minItems: 1
      required:
        - name
    WorkflowPlanProcessInput:
      type: object
      properties:
        id:
          type: string
        exposureType:
          type: string
          enum:
            - PORTFOLIO
            - ACCOUNT
            - LOCATION
            - POLICY
            - STEP_POLICY
            - TREATY
            - AGGPORTFOLIO
        edm:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        modelProfileId:
          type: integer
          format: int32
        eventRateSchemeId:
          type: integer
          format: int32
        treaties:
          type: array
          items:
            type: integer
            format: int32
        jobName:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^\w((?!--)[\w\s:-])*\w$|^\w*$'
        outputProfileId:
          type: integer
          format: int32
      required:
        - currency
        - edm
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        taskId:
          type: integer
          format: int32
        workflowId:
          type: integer
          format: int64
        status:
          type: string
        submitTime:
          type: string
        createdAt:
          type: string
        name:
          type: string
        input:
          type: object
          additionalProperties:
            type: object
        output:
          type: object
          additionalProperties:
            type: object
        priorJobs:
          type: array
          items:
            type: string
            format: uuid
        percentComplete:
          type: integer
          format: int32
        continueOnFailure:
          type: boolean
    JobMessage:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
    Workflow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tenantName:
          type: string
        userName:
          type: string
        status:
          type: string
          enum:
            - QUEUED
            - RUNNING
            - FINISHED
            - FAILED
            - CANCELLED
            - PENDING
            - CANCELLING
            - CANCEL_REQUESTED
        submitTime:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        name:
          type: string
        type:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        summary:
          type: object
          additionalProperties:
            type: string
        output:
          type: object
          additionalProperties:
            type: object
        progress:
          type: integer
          format: int32
        messages:
          type: array
          items:
            $ref: '#/components/schemas/JobMessage'
    WorkflowSearchResult:
      type: object
      properties:
        totalMatchCount:
          type: integer
          format: int32
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
  securitySchemes:
    RMS_Auth:
      type: apiKey
      name: Authorization
      in: header
      description: An API key is a token that enables a client application to make requests to tenant applications running on Intelligent Risk Platform.
      x-default: XXXXXXXXXX
security:
  - RMS_Auth: []
x-readme:
  explorer-enabled: false
  samples-languages:
    - curl
    - java
    - csharp
    - node
    - python
  proxy-enabled: true
  samples-enabled: true
