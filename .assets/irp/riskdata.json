{
  "openapi": "3.0.1",
  "info": {
    "title": "Riskdata",
    "description": "This document provides API specifications of the Riskdata",
    "version": "Cairo, 2022"
  },
  "x-readme": {
    "explorer-enabled": false,
    "samples-languages": ["curl", "java", "csharp", "node", "python"],
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "servers": [
    {
      "url": "https://{host}/riskdata/v1",
      "variables": {
        "host": {
          "enum": ["api-euw1.rms.com", "api-use1.rms.com"],
          "default": "api-euw1.rms.com",
          "description": "Data center that hosts the tenant instance: api-euw1.rms.com or api-use1.rms.com."
        }
      }
    }
  ],
  "security": [
    {
      "rms_api_key": []
    },
    {
      "rms_bearer_token": []
    }
  ],
  "paths": {
    "/jobs": {
      "get": {
        "tags": ["Riskdata Jobs"],
        "summary": "Retrieve and filter a list of jobs",
        "operationId": "riskdata-v1",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters applied to the query results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include-input",
            "in": "query",
            "required": false,
            "description": "returns the input node wih supplied settings and or data if set as true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/JobSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please validate the request against specifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthoirzed: API key or Bearer token is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "tags": ["Riskdata Jobs"],
        "summary": "Retrieve a job using its unique id",
        "operationId": "riskdata-v1-get-jobs-jobid",
        "parameters": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/parameters/JobIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/JobSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please validate the request against specifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthoirzed: API key or Bearer token is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Riskdata Jobs"],
        "summary": "Update riskdata job",
        "operationId": "riskdata-v1-patch-jobs-cancel",
        "parameters": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/parameters/JobIdParam"
          }
        ],
        "requestBody": {
          "description": "Set of operations to perform against the Job Entity",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchJobOperationStatusValue"
                    },
                    {
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchJobOperationJobPriorityValue"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "targetProperty",
                    "mapping": {
                      "status": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchJobOperationStatusValue",
                      "jobpriority": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchJobOperationJobPriorityValue"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import job initiated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/JobsActionObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "'Unauthoirzed: API key or Bearer token is missing or invalid.'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Import Flat Files\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity: The job is in unprocessable state",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programSets": {
      "post": {
        "tags": ["ProgramSets"],
        "summary": "Create Program Set",
        "description": "",
        "operationId": "createProgramSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/NewProgramSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Program Set is created",
            "headers": {
              "Location": {
                "description": "Resource Location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ProgramSets"],
        "summary": "Get ProgramSets",
        "description": "",
        "operationId": "searchProgramSets",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters applied to the query results using condition types as shown. **Relational : (result field name) (relational operator) (value)** eg. id=100 , id!=100 , id>100 | **Boolean : (condition) (boolean operator) (condition)** eg. id=100 AND name=\"xyz\" , id=100 OR type=\"abc\" | **In List : (result field name) (IN / NOT IN) (values list)** eg. id IN (1,2,3) , name NOT IN (\"abc\",\"xyz\") | **Matching : (result field name) (LIKE / NOT LIKE) (pattern)** eg. name LIKE \"abc* \" , type NOT LIKE \"* xyz* \"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program Set list successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSetSearchResult"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programSets/{programSetId}": {
      "patch": {
        "tags": ["ProgramSets"],
        "summary": "Update Program Set",
        "operationId": "updateProgramSet",
        "parameters": [
          {
            "name": "programSetId",
            "in": "path",
            "description": "ID for Program Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Resource updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ProgramSets"],
        "summary": "Get Program Set by Id",
        "description": "",
        "operationId": "GetProgramSets",
        "parameters": [
          {
            "name": "programSetId",
            "in": "path",
            "description": "ID for Program Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program Set successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programSets/{programSetId}/programs": {
      "post": {
        "tags": ["Programs"],
        "summary": "Create Program",
        "operationId": "createProgram",
        "parameters": [
          {
            "name": "programSetId",
            "in": "path",
            "description": "ID for Program Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/NewProgram"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Program is created",
            "headers": {
              "Location": {
                "description": "Resource Location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programs": {
      "get": {
        "tags": ["Programs"],
        "summary": "Get Programs",
        "description": "",
        "operationId": "getprograms",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Programs List is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FilteredPrograms"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programId}": {
      "get": {
        "tags": ["Programs"],
        "summary": "Get Program by Id",
        "description": "",
        "operationId": "getProgramById",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Program"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Programs"],
        "summary": "Update Program",
        "operationId": "updateProgram",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Resource is updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Programs"],
        "summary": "Delete Program",
        "description": "",
        "operationId": "deleteprogram",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programSets/{programSetId}/variations": {
      "get": {
        "tags": ["Program Variations"],
        "summary": "Get Program Variations",
        "description": "",
        "operationId": "getprogramVariations",
        "parameters": [
          {
            "name": "programSetId",
            "in": "path",
            "description": "ID for ExposureSetto update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variation list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FilteredPrograms"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/programSets/{programSetId}/variations/{variationId}": {
      "get": {
        "tags": ["Program Variations"],
        "summary": "Get Program Variation by Id",
        "description": "",
        "operationId": "getProgramVariationById",
        "parameters": [
          {
            "name": "programSetId",
            "in": "path",
            "description": "ID for ExposureSetto update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variationId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variation list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Program"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchysets": {
      "post": {
        "tags": ["BusinessHierarchysets"],
        "summary": "Create BusinessHierarchy Set",
        "description": "",
        "operationId": "createBusinessHierarchySet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "BusinessHierarchy Set is created",
            "headers": {
              "Location": {
                "description": "Resource Location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["BusinessHierarchysets"],
        "summary": "Get BusinessHierarchysets",
        "description": "",
        "operationId": "searchBusinessHierarchysets",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters applied to the query results using condition types as shown. **Relational : (result field name) (relational operator) (value)** eg. id=100 , id!=100 , id>100 | **Boolean : (condition) (boolean operator) (condition)** eg. id=100 AND name=\"xyz\" , id=100 OR type=\"abc\" | **In List : (result field name) (IN / NOT IN) (values list)** eg. id IN (1,2,3) , name NOT IN (\"abc\",\"xyz\") | **Matching : (result field name) (LIKE / NOT LIKE) (pattern)** eg. name LIKE \"abc* \" , type NOT LIKE \"* xyz* \"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BusinessHierarchy Set list successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchysets/{businessHierarchySetId}": {
      "patch": {
        "tags": ["BusinessHierarchysets"],
        "summary": "Update BusinessHierarchy Set",
        "operationId": "updateBusinessHierarchySet",
        "parameters": [
          {
            "name": "businessHierarchySetId",
            "in": "path",
            "description": "ID for BusinessHierarchy Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Resource updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["BusinessHierarchysets"],
        "summary": "Get BusinessHierarchy Set by Id",
        "description": "",
        "operationId": "GetBusinessHierarchysets",
        "parameters": [
          {
            "name": "businessHierarchySetId",
            "in": "path",
            "description": "ID for BusinessHierarchy Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BusinessHierarchy Set successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchysets/{businessHierarchySetId}/businessHierarchies": {
      "post": {
        "tags": ["BusinessHierarchies"],
        "summary": "Create BusinessHierarchy",
        "operationId": "createBusinessHierarchy",
        "parameters": [
          {
            "name": "businessHierarchySetId",
            "in": "path",
            "description": "ID for BusinessHierarchy Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "BusinessHierarchy is created",
            "headers": {
              "Location": {
                "description": "Resource Location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchies": {
      "get": {
        "tags": ["BusinessHierarchies"],
        "summary": "Get BusinessHierarchies",
        "description": "",
        "operationId": "getbusinesshierarchies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BusinessHierarchies List is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchies/{businesshierarchyId}": {
      "get": {
        "tags": ["BusinessHierarchies"],
        "summary": "Get BusinessHierarchy by Id",
        "description": "",
        "operationId": "getBusinessHierarchyById",
        "parameters": [
          {
            "name": "businesshierarchyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BusinessHierarchy is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["BusinessHierarchies"],
        "summary": "Update BusinessHierarchy",
        "operationId": "updateBusinessHierarchy",
        "parameters": [
          {
            "name": "businesshierarchyId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Resource is updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["BusinessHierarchies"],
        "summary": "Delete BusinessHierarchy",
        "description": "",
        "operationId": "deletebusinesshierarchy",
        "parameters": [
          {
            "name": "businesshierarchyId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchysets/{businessHierarchySetId}/variations": {
      "get": {
        "tags": ["BusinessHierarchy Variations"],
        "summary": "Get BusinessHierarchy Variations",
        "description": "",
        "operationId": "getbusinesshierarchyVariations",
        "parameters": [
          {
            "name": "businessHierarchySetId",
            "in": "path",
            "description": "ID for ExposureSetto update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variation list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/businessHierarchysets/{businessHierarchySetId}/variations/{variationId}": {
      "get": {
        "tags": ["BusinessHierarchy Variations"],
        "summary": "Get BusinessHierarchy Variation by Id",
        "description": "",
        "operationId": "getBusinessHierarchyVariationById",
        "parameters": [
          {
            "name": "businessHierarchySetId",
            "in": "path",
            "description": "ID for ExposureSetto update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variationId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variation list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposureSets": {
      "post": {
        "tags": ["ExposureSets"],
        "summary": "Create Exposure Set",
        "description": "",
        "operationId": "createExposureSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/NewExposureSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exposure Set is created",
            "headers": {
              "Location": {
                "description": "Resource Location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ExposureSets"],
        "summary": "Get ExposureSets",
        "description": "",
        "operationId": "searchExposureSets",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters applied to the query results using condition types as shown. **Relational : (result field name) (relational operator) (value)** eg. id=100 , id!=100 , id>100 | **Boolean : (condition) (boolean operator) (condition)** eg. id=100 AND name=\"xyz\" , id=100 OR type=\"abc\" | **In List : (result field name) (IN / NOT IN) (values list)** eg. id IN (1,2,3) , name NOT IN (\"abc\",\"xyz\") | **Matching : (result field name) (LIKE / NOT LIKE) (pattern)** eg. name LIKE \"abc* \" , type NOT LIKE \"* xyz* \"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exposure Set list successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureSetsearchResult"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposureSets/{exposureSetId}": {
      "patch": {
        "tags": ["ExposureSets"],
        "summary": "Update Exposure Set",
        "operationId": "updateExposureSet",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "description": "ID for Exposure Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Resource updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ExposureSets"],
        "summary": "Get Exposure Set by Id",
        "description": "",
        "operationId": "GetExposureSets",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "description": "ID for Exposure Set to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exposure Set successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposureSets/{exposureSetId}/exposures": {
      "post": {
        "tags": ["Exposures"],
        "summary": "Create Exposure / EDM",
        "description": "",
        "operationId": "dbOperationsv2",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "description": "ID for ExposureSetto update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "serverName": {
                    "type": "string"
                  },
                  "sqlVersion": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "url containing identifier of the submitted workflow.",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures": {
      "get": {
        "tags": ["Exposures"],
        "summary": "Get Exposures / EDMs",
        "description": "",
        "operationId": "searchEdmsV2",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EDM list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}": {
      "get": {
        "tags": ["Exposures"],
        "summary": "Get Exposure / EDM by ID",
        "description": "",
        "operationId": "searchEdmsV2ById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EDM list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Exposure"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Exposures"],
        "summary": "Update Exposure",
        "description": "",
        "operationId": "patchEdm_1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Exposures"],
        "summary": "Delete Exposure",
        "description": "",
        "operationId": "deleteEdm_1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposureSets/{exposureSetId}/variations": {
      "get": {
        "tags": ["ExposureVariations"],
        "summary": "Get Exposure Variations",
        "description": "",
        "operationId": "searchExposureVariations",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EDM list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposureSets/{exposureSetId}/variations/{variationId}": {
      "get": {
        "tags": ["ExposureVariations"],
        "summary": "Get Exposure Variation by ID",
        "operationId": "getExposureVariationsById",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EDM list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Exposure"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["ExposureVariations"],
        "summary": "Update Exposure Variation",
        "description": "",
        "operationId": "patchExposureVariation",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variationId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchGenericRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ExposureVariations"],
        "summary": "Delete Exposure Variation",
        "description": "",
        "operationId": "deleteExposureVariation",
        "parameters": [
          {
            "name": "exposureSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variationId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Databases/ExposureSets\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/portfolios": {
      "get": {
        "tags": ["Portfolios"],
        "summary": "Get portfolios",
        "description": "",
        "operationId": "searchPortfoliosv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of portfolios retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Portfolios"],
        "summary": "Create portfolio",
        "description": "",
        "operationId": "createPortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/NewPortfolio"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Portfolio created.",
            "headers": {
              "Location": {
                "description": "Portfolio resource",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/portfolios/{id}": {
      "get": {
        "tags": ["Portfolios"],
        "summary": "Get portfolio",
        "description": "",
        "operationId": "getPortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portfolio information retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Portfolio"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Portfolios"],
        "summary": "Update portfolio",
        "description": "",
        "operationId": "updatePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Portfolio"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Portfolio successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Portfolios"],
        "summary": "Delete portfolio",
        "description": "",
        "operationId": "deletePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deleteType",
            "in": "query",
            "description": "The scope of the data deleted: `PORTFOLIO_INFO`, `PORTFOLIO_ALL_ACCOUNTS`, or `PORTFOLIO_EXCEPT_ACCOUNTS`",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PORTFOLIO_INFO",
                "PORTFOLIO_ALL_ACCOUNTS",
                "PORTFOLIO_EXCEPT_ACCOUNTS"
              ]
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "url containing identifier of the submitted workflow.",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/portfolios/{id}/metrics": {
      "get": {
        "tags": ["Portfolios"],
        "summary": "Get metrics by portfolio",
        "description": "",
        "operationId": "getPortfolioMetricsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for a specified portfolio are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioMetrics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/portfolios/{id}/filteredaccounts": {
      "put": {
        "tags": ["Portfolios"],
        "summary": "Manage filtered accounts by portfolio",
        "description": "",
        "operationId": "manageFilteredAccountsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioFilteredAccountsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/portfolios/{id}/accounts": {
      "get": {
        "tags": ["Portfolios"],
        "summary": "Get accounts by portfolio",
        "description": "",
        "operationId": "searchPortfolioAccountsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Portfolios"],
        "summary": "Manage accounts by portfolio",
        "description": "",
        "operationId": "managePortfolioAccountsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioAccountsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get accounts",
        "description": "",
        "operationId": "searchAccountsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "portfoliofilter",
            "in": "query",
            "description": "If This search was triggered from portfolio starting at _0_.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "policyExpirationDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 120
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Create account",
        "description": "",
        "operationId": "createAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account created.",
            "headers": {
              "Location": {
                "description": "Account resource",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get account",
        "description": "",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account information successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Update account",
        "description": "",
        "operationId": "updateAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Validation updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete account",
        "description": "",
        "operationId": "deleteAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/validatemedia": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get validation file by account",
        "description": "",
        "operationId": "downloadValidationAccountFilev2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation retrieved.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/metrics": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get metrics by account",
        "description": "",
        "operationId": "getAccountMetricsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for a specified account are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountMetrics"
                }
              }
            }
          },
          "400": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/countries": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get countries by account",
        "description": "",
        "operationId": "getCountriesByAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of countries retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CountryMetrics"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/surplustreatieslocation": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get location level surplus treaties for  account",
        "description": "",
        "operationId": "getLocationSurplusTreatiesv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location level surplus treaties retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Treaty"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/sites": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get site names for  account",
        "description": "",
        "operationId": "getSiteNamesv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of site names retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/accounts/{id}/validate": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Validate account",
        "description": "",
        "operationId": "validateAccounts",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationConditionValidationInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Accounts\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/locationcondition/batch": {
      "post": {
        "tags": ["Locations"],
        "summary": "Manage location conditions in batch",
        "description": "",
        "operationId": "batchProcessLocationConditions",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BatchRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Batch successfully initiated",
            "headers": {
              "Location": {
                "description": "Location of the locationcondition/batch",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/buildingattribute": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create building attribute",
        "description": "",
        "operationId": "createBuildingAttribute",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Building attribute successfully created",
            "headers": {
              "Location": {
                "description": "Location of the new building attribute",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get locations",
        "description": "",
        "operationId": "searchLocations",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withflzone",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of locations is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Locations"],
        "summary": "Create location",
        "description": "",
        "operationId": "createLocation",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created. New location is successfully created.",
            "headers": {
              "Location": {
                "description": "URL for the new location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationbidetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create BI peril",
        "description": "",
        "operationId": "createLocationBiDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBiDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Bi detail successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new bi detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationcondition": {
      "post": {
        "tags": ["Locations"],
        "summary": "Creates location condition",
        "description": "",
        "operationId": "createLocationCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Location condition successfully created",
            "headers": {
              "Location": {
                "description": "Location of the new location condition",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/coverages": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create location coverage",
        "description": "",
        "operationId": "createLocationCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCoverage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Coverage successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new coverage",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationeqdetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create EQ peril",
        "description": "",
        "operationId": "createLocationEqDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationEqDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "EQ detail successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new EQ detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationfldetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create FL peril",
        "description": "",
        "operationId": "createLocationFlDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFlDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location of the new FL detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationfrdetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create FR peril",
        "description": "",
        "operationId": "createLocationFrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFrDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "FR Detail successfully created",
            "headers": {
              "Location": {
                "description": "Location of new FR detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/cessions": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create location reinsurance cession",
        "description": "",
        "operationId": "createLocationReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created. New location is successfully created.",
            "headers": {
              "Location": {
                "description": "url of the new location",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationtodetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create TO peril",
        "description": "",
        "operationId": "createLocationToDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationToDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TO detail successfully created",
            "headers": {
              "Location": {
                "description": "Location of the new TO detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationtrdetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create TR peril",
        "description": "",
        "operationId": "createLocationTrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationTrDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Location TR details successfully created.",
            "headers": {
              "Location": {
                "description": "Location of Location TR Details",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationwcdetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create WC peril",
        "description": "",
        "operationId": "createLocationWcDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWcDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Location WC details successfully created",
            "headers": {
              "Location": {
                "description": "Location of Location WC Detail",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationwsdetail": {
      "post": {
        "tags": ["Locations"],
        "summary": "Create WS peril",
        "description": "",
        "operationId": "createLocationWsDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWsDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Location WS Details successfully created",
            "headers": {
              "Location": {
                "description": "Location of Location WS Details",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/buildingattribute/{buildingattributeid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get building attribute",
        "description": "",
        "operationId": "getBuildingAttribute",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "buildingattributeid",
            "in": "path",
            "description": "ID number of the building attribute.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Building attribute successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update building attribute",
        "description": "",
        "operationId": "updateBuildingAttribute",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "buildingattributeid",
            "in": "path",
            "description": "ID number of the location building attribute record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Building attribute updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete building attribute",
        "description": "",
        "operationId": "deleteBuildingAttribute",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "buildingattributeid",
            "in": "path",
            "description": "ID number of the location building attribute record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Building attribute successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get location",
        "description": "",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " Information for a specified location is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update location",
        "description": "",
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete location",
        "description": "",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationbidetail/{locationbidetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get BI peril by location",
        "description": "",
        "operationId": "getLocationBiDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationbidetailid",
            "in": "path",
            "description": "ID number of the location bi detail record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns location BI detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBiDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update BI peril",
        "description": "",
        "operationId": "updateLocationBiDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationbidetailid",
            "in": "path",
            "description": "ID number of the location bi detail record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBiDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Bi detail successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete BI peril",
        "description": "",
        "operationId": "deleteLocationBiDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationbidetailid",
            "in": "path",
            "description": "ID number of the location bi detail record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bi detail successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationcondition/{conditionid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get location condition",
        "description": "",
        "operationId": "getLocationConditionById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the location condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Building attribute successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update location condition",
        "description": "",
        "operationId": "updateLocationCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the location condition record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location condition successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete location condition",
        "description": "",
        "operationId": "deleteLocationCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the location condition record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location condition successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/coverages/{coverageid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Gets location coverage",
        "description": "",
        "operationId": "getLocationCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the location coverage record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCoverage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update coverage",
        "description": "",
        "operationId": "updateLocationCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the location coverage record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCoverage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Coverage successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete location coverage",
        "description": "",
        "operationId": "deleteLocationCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the location coverage record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location coverage successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationeqdetail/{locationeqdetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get EQ peril",
        "description": "",
        "operationId": "getLocationEqDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationeqdetailid",
            "in": "path",
            "description": "ID number of the location earthquake record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EQ detail successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationEqDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update EQ peril",
        "description": "",
        "operationId": "updateLocationEqDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationeqdetailid",
            "in": "path",
            "description": "ID number of the location earthquake record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationEqDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "EQ Detail Successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete EQ peril",
        "description": "",
        "operationId": "deleteLocationEqDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationeqdetailid",
            "in": "path",
            "description": "ID number of the location earthquake record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "EQ detail successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationfldetail/{locationfldetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get FL peril",
        "description": "",
        "operationId": "getLocationFlDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfldetailid",
            "in": "path",
            "description": "ID number of the location flood record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FL detail successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFlDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update FL peril",
        "description": "",
        "operationId": "updateLocationFlDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfldetailid",
            "in": "path",
            "description": "ID number of the location flood record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFlDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "FL detail successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found."
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete FL peril",
        "description": "",
        "operationId": "deleteLocationFlDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfldetailid",
            "in": "path",
            "description": "ID number of the location flood record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "FL detail successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationfrdetail/{locationfrdetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get location FR peril",
        "description": "",
        "operationId": "getLocationFrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfrdetailid",
            "in": "path",
            "description": "ID number of the location fire record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FR detail successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFrDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update FR peril",
        "description": "",
        "operationId": "updateLocationFrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfrdetailid",
            "in": "path",
            "description": "ID number of the location fire record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFrDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "FR detail successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete FR peril",
        "description": "",
        "operationId": "deleteLocationFrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationfrdetailid",
            "in": "path",
            "description": "ID number of the location fire record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "FR detail successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/cessions/{cessionid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get reinsurance cession",
        "description": "",
        "operationId": "getLocationReinsuranceCessionDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ReinsuranceCession details successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update reinsurance cession",
        "description": "",
        "operationId": "updateLocationReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location reinsurance cession successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete reinsurance cession",
        "description": "",
        "operationId": "deleteLocationReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location reinsurance cession successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationtodetail/{locationtodetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get TO peril",
        "description": "",
        "operationId": "getLocationToDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtodetailid",
            "in": "path",
            "description": "ID number of the location tornado record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TO detail successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationToDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update TO peril",
        "description": "",
        "operationId": "updateLocationToDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtodetailid",
            "in": "path",
            "description": "ID number of the location tornado record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationToDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "TO detail successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetaLinks"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete TO peril",
        "description": "",
        "operationId": "deleteLocationToDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtodetailid",
            "in": "path",
            "description": "ID number of the location tornado record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "TO detail successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationtrdetail/{locationtrdetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get TR peril",
        "description": "",
        "operationId": "getLocationTrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtrdetailid",
            "in": "path",
            "description": "ID number of the location terrorism record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location TR detail successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationTrDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update TR peril",
        "description": "",
        "operationId": "updateLocationTrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtrdetailid",
            "in": "path",
            "description": "ID number of the location terrorism record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationTrDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location TR detail successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete TR peril",
        "description": "",
        "operationId": "deleteLocationTrDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationtrdetailid",
            "in": "path",
            "description": "ID number of the location terrorism record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location TR detail successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationwcdetail/{locationwcdetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get WC peril",
        "description": "",
        "operationId": "getLocationWcDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwcdetailid",
            "in": "path",
            "description": "ID number of the location worker compensation record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location WC detail successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWcDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update WC peril",
        "description": "",
        "operationId": "updateLocationWcDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwcdetailid",
            "in": "path",
            "description": "ID number of the location worker compensation record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWcDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location WC details successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete WC peril",
        "description": "",
        "operationId": "deleteLocationWcDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwcdetailid",
            "in": "path",
            "description": "ID number of the location worker compensation record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location WC detail successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/locationwsdetail/{locationwsdetailid}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get WS peril",
        "description": "",
        "operationId": "getLocationWsDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwsdetailid",
            "in": "path",
            "description": "ID number of the location windstorm record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location WS Detail successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWsDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update WS peril",
        "description": "",
        "operationId": "updateLocationWsDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwsdetailid",
            "in": "path",
            "description": "ID number of the location windstorm record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWsDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Location WS Detail successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete WS peril",
        "description": "",
        "operationId": "deleteLocationWsDetail",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationwsdetailid",
            "in": "path",
            "description": "ID number of the location windstorm record.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location WS Detail successfully deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/geocode": {
      "post": {
        "tags": ["Locations"],
        "summary": "Geocode address",
        "description": "",
        "operationId": "geoCodeByAddress",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Address"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The geocoding of the address is successfully performed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/geocode": {
      "post": {
        "tags": ["Locations"],
        "summary": "Geocode location",
        "description": "",
        "operationId": "geoCodeByLocationId",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LayerInfo"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created. The location geocod request is created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/locations/{id}/policyConditions": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get policy conditions by location",
        "description": "",
        "operationId": "getPolicyConditions",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " Policy conditions successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/data-upgrade": {
      "post": {
        "tags": ["Exposures"],
        "summary": "Upgrade Exposure / EDM Data Version",
        "description": "",
        "operationId": "post-v2-datasources-upgrade",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specify the edm request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EdmUpgradeRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "RMS_Auth": []
          }
        ]
      }
    },
    "/analyses": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get analyses",
        "description": "",
        "operationId": "getAnalysesResultsv2",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Name of user that ran the analysis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runDate",
            "in": "query",
            "description": "Date that the analysis was run.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Analyses successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysisSearchResultV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Analyses"],
        "summary": "Delete analysis results",
        "description": "",
        "operationId": "deleteAnalysesv2",
        "responses": {
          "204": {
            "description": "A list of Analyses deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/pate-batch": {
      "delete": {
        "tags": ["Analyses"],
        "summary": "Delete PATE treaties",
        "description": "",
        "operationId": "deletePateBatchv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted. PATE treaties for given analysis deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Post Analysis Treaty Execution\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/pate-treaties": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get PATE treaties",
        "description": "",
        "operationId": "getPateListv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of treaties in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PateSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Analyses"],
        "summary": "Delete PATE treaties by analysis",
        "description": "",
        "operationId": "deletePateListv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted. PATE treaties for analysis deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Post Analysis Treaty Execution\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/summary_report": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Generate summary report",
        "description": "",
        "operationId": "summaryReportMetricsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysisSummaryReportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "url containing identifier of the submitted workflow.",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Download Report\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/location-aal": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get location AAL",
        "description": "",
        "operationId": "getAALMetricsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "AAL DESC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location AAL for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationAALResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/analysis-region": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get region details",
        "description": "",
        "operationId": "getAnalysisRegionsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of region details for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysisRegionSearchResultV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/cedants": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get cedants by analysis",
        "description": "",
        "operationId": "getCedantsByAnalysisv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cedants in the analysis is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedantSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/ep/interpolate": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get EP interpolation results",
        "description": "",
        "operationId": "getEPInterpolateMetricResultsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Metric Key name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Metric Key value",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "metricType",
            "in": "query",
            "description": "Metric Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Interpolation EP results successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricsOutput"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/ep": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get EP metrics",
        "description": "",
        "operationId": "getEPMetricsByAnalysisv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metricType",
            "in": "query",
            "description": "Metric Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of EP metrics for a specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricsOutput"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/elt": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get ELT",
        "description": "",
        "operationId": "getEventLossTableResultsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page, maximum is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eventIds",
            "in": "query",
            "description": "Event IDs",
            "schema": {
              "maxItems": 25,
              "minItems": 0,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EventLossItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/metrics": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get metrics",
        "description": "",
        "operationId": "getMetricsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metricType",
            "in": "query",
            "description": "metricType.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["STATS", "ELT", "EP"]
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "position.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "description": "granularity.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "POLICY",
                "enum": ["POLICY"]
              }
            }
          },
          {
            "name": "epType",
            "in": "query",
            "description": "ep Type.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["OEP", "AEP", "TCE_AEP", "TCE_OEP"]
              }
            }
          },
          {
            "name": "returnPeriod",
            "in": "query",
            "description": "returnPeriod.",
            "schema": {
              "maxItems": 12,
              "minItems": 0,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "filterCondition",
            "in": "query",
            "description": "Filter condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "metrics for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/keylosses": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get key losses",
        "description": "",
        "operationId": "getNonEpKeyLossv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key Losses for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/KeyLossItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/plt": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get PLT",
        "description": "",
        "operationId": "getPeriodLossTableResultsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page, maximum is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PLT report for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EventLossItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/perspectives": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get perspectives",
        "description": "",
        "operationId": "getPerspectivesForAnalysisv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Values of all available perspectives for a given analysis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EntityResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/sampledlosses": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get sampled losses",
        "description": "",
        "operationId": "getSampledLossv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective that provides a view of risk. One of `FA` (facultative reinsurance loss), `GR` (gross loss), `GU` (ground up loss), `QS` (quota share loss), `RG` (reinsurance gross loss), `RL` (net loss cat), `RN` (reinsurance net loss), `SS` (surplus share loss), or `WX` (working excess loss).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "events",
            "in": "query",
            "description": "EventIds list",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sampled Losses for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SampledLossItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/stats": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get statistics",
        "description": "",
        "operationId": "getStatisticsResultsv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Statistics for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/StatisticsItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/treaties": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get treaties by analysis",
        "description": "",
        "operationId": "getTreatiesListv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of treaties in the Analysis is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatySearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/treaty/{treatyID}": {
      "get": {
        "tags": ["Analyses"],
        "summary": "Get analysis treaty",
        "description": "",
        "operationId": "getTreatyByIdv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyID",
            "in": "path",
            "description": "Treaty ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treaty for a specified analysis is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Treaty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/map-perspective": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Convert perspectives",
        "description": "",
        "operationId": "mapPerspectivev2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of the analysis on which you want to run Map Perspective workflow. Should be valid analysis id.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MapPerspectiveInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Financial Re-Mapping\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/pate": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Analyze with PATE",
        "description": "",
        "operationId": "processPatev2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupInfoOnly",
            "in": "query",
            "description": "Group info only",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PateInput"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Post Analysis Treaty Execution\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/rerun-ep": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Rerun EP",
        "description": "",
        "operationId": "reRunEpv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of the analysis on which you want to run Rerun Ep workflow. Should be valid analysis id.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Rerun Ep\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/climate-change": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Analyze climate change",
        "description": "",
        "operationId": "runClimateChangev2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of the analysis on which you want to run climate change analysis. Should be valid analysis ID.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ClimateChangeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Add to Analysis Builder\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/simulate-losses": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Simulate PLT analysis",
        "description": "",
        "operationId": "runELTToPLTConversionv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of the analysis on which you want to run ELT to PLT conversion workflow. Should be valid analysis ID.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SimulateELTToPLTInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"ELT to PLT Simulation\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}": {
      "put": {
        "tags": ["Analyses"],
        "summary": "Rename analysis",
        "description": "",
        "operationId": "runRenameAnalysisv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis to be renamed. \\ Should be valid analysis ID.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RenameAnalysisInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Rename Analysis\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Analyses"],
        "summary": "Delete analysis result",
        "description": "",
        "operationId": "deleteAnalysisv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Analysis deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Results\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/convert-event-rate-loss": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Convert event rates and losses",
        "description": "",
        "operationId": "convertAnalysisEventv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of the analysis on which you want to run convert event rate and loss workflow. Should be valid analysis ID.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ConvertEventInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "title": {
                            "type": "string"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Convert Event Rates\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisId}/convertcurrency": {
      "post": {
        "tags": ["Analyses"],
        "summary": "Convert currency by analysis",
        "description": "",
        "operationId": "convertResultCurrencyv2",
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "description": "ID number of analysis.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ConvertResultCurrencyInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The input data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Convert Result Currency\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get aggregate portfolios",
        "description": "",
        "operationId": "searchAggregatePortfoliosv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of aggregate portfolios retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolioSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Create aggregate portfolio",
        "description": "",
        "operationId": "createAggregatePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolio"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Aggregate portfolio created.",
            "headers": {
              "Location": {
                "description": "Aggregate portfolio resource",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios/{id}": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get aggregate portfolio",
        "description": "",
        "operationId": "getAggregatePortfolioByIdv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregate portfolio retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolioSearchItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Update aggregate portfolio",
        "description": "",
        "operationId": "updateAggregatePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolio"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Aggregate portfolio successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Delete aggregate portfolio",
        "description": "",
        "operationId": "deleteAggregatePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "url containing identifier of the submitted workflow.",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios/{id}/metrics": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get metrics by aggregate portfolio",
        "description": "",
        "operationId": "getAggregatePortfolioMetricsv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for a specified aggregate portfolio are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolioMetrics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios/{id}/treaties": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get treaties by aggregate portfolio",
        "description": "",
        "operationId": "getAggregatePortfolioTreatiesv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treaties applicable for a specified aggregate portfolio are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatySearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios/{id}/countries": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get countries by aggregate portfolio",
        "description": "",
        "operationId": "getCountriesByAggregatePortfoliov2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of countries retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolioCountryMetrics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/aggregatePortfolios/{id}/aggregate-exposures-lists": {
      "get": {
        "tags": ["Aggregate Portfolios"],
        "summary": "Get aggregate exposures by aggregate",
        "description": "",
        "operationId": "searchAggregateExposuresv2",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the aggregate portfolio.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Country to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "Resolution to filter by.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of aggregate exposure values retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregateExposuresListSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Aggregate Portfolios\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/branches": {
      "get": {
        "tags": ["Branches"],
        "summary": "Get branches",
        "description": "",
        "operationId": "getBranches",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of branches in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BranchSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Branches"],
        "summary": "Create branch",
        "description": "",
        "operationId": "createBranch",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New branch is created in the data source is successfully.",
            "headers": {
              "Location": {
                "description": "Location of the new Branch",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Resource already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/branches/{id}": {
      "get": {
        "tags": ["Branches"],
        "summary": "Get branch by ID",
        "description": "",
        "operationId": "getBranchById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the branch.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch by Id in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Branches"],
        "summary": "Update branch",
        "description": "",
        "operationId": "updateBranch",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the branch.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated. branch is updated in the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Branches"],
        "summary": "Delete branch",
        "description": "",
        "operationId": "deleteBranch",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the branch.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Branch is deleted from the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/cedants": {
      "get": {
        "tags": ["Cedants"],
        "summary": "Get cedants",
        "description": "",
        "operationId": "getCedants",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of cedants in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedantSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Cedants"],
        "summary": "Create cedant",
        "description": "",
        "operationId": "createCedant",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New cedant is created in the data source is successfully.",
            "headers": {
              "Location": {
                "description": "Location of the new Cedant",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Resource already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/cedants/{id}": {
      "get": {
        "tags": ["Cedants"],
        "summary": "Get cedant",
        "description": "",
        "operationId": "getCedantById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the cedant.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cedant by Id in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cedant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Cedants"],
        "summary": "Update cedant",
        "description": "",
        "operationId": "updateCedant",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the cedant.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Cedant is updated in the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cedants"],
        "summary": "Delete cedant",
        "description": "",
        "operationId": "deleteCedant",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the cedant.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted. cedant is deleted from the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policyConditions/{id}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policy condition",
        "description": "",
        "operationId": "getPolicyConditionTemplates",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information for a specified policy condition is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/faclayers": {
      "get": {
        "tags": ["Utilities"],
        "summary": "Get facultataives",
        "description": "",
        "operationId": "getFacultatives",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of facultataives in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FacultativeSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Facultative Cessions\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Utilities"],
        "summary": "Create facultative",
        "description": "",
        "operationId": "createFacultative",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Facultative"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New facultative is created in the data source is successfully.",
            "headers": {
              "Location": {
                "description": "Location of the new Facultative",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Facultative Cessions\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Resource already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/faclayers/{id}": {
      "get": {
        "tags": ["Utilities"],
        "summary": "Get facultative by ID",
        "description": "",
        "operationId": "getFacultativeById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the faclutative.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Facultative by Id in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Facultative"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Facultative Cessions\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Facultative not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Utilities"],
        "summary": "Update facultative",
        "description": "",
        "operationId": "updateFacultative",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the facultative.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Facultative"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Facultative is updated in the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Facultative Cessions\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Utilities"],
        "summary": "Delete facultative",
        "description": "",
        "operationId": "deleteFacultative",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the facultative.",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted. Facultative is deleted from the data source successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Facultative Cessions\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/globaledit/dryrun": {
      "post": {
        "tags": ["Utilities"],
        "summary": "Update exposures dry run",
        "description": "",
        "operationId": "dryRun",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type: ACCOUNT or PORTFOLIO.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PORTFOLIO",
                "ACCOUNT",
                "LOCATION",
                "POLICY",
                "STEP_POLICY",
                "TREATY",
                "AGGPORTFOLIO"
              ]
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The bulk edit dry run was successfully performed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/globaledit": {
      "post": {
        "tags": ["Utilities"],
        "summary": "Update exposures",
        "description": "",
        "operationId": "globalEdit",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type: ACCOUNT or PORTFOLIO.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PORTFOLIO",
                "ACCOUNT",
                "LOCATION",
                "POLICY",
                "STEP_POLICY",
                "TREATY",
                "AGGPORTFOLIO"
              ]
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine).",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/lobs": {
      "get": {
        "tags": ["Line of Business"],
        "summary": "Get lines of business",
        "operationId": "getLineOfBusinesss",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get List of lineOfBusinesses in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusinessSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Line of Business"],
        "summary": "Create line of business",
        "description": "",
        "operationId": "createLineOfBusiness",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New LineOfBusiness is created in the data source is successfully.",
            "headers": {
              "Location": {
                "description": "Account resource",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/lobs/{id}": {
      "get": {
        "tags": ["Line of Business"],
        "summary": "Get line of business by ID",
        "description": "",
        "operationId": "getLineOfBusinessById",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the LineOfBusiness.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LineOfBusiness by Id in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"View Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Line of Business"],
        "summary": "Update line of business",
        "description": "",
        "operationId": "updateLineOfBusiness",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "LineOfBusiness is updated in the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Line of Business"],
        "summary": "Delete line of business",
        "description": "",
        "operationId": "deleteLineOfBusiness",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the location.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "LineOfBusiness is deleted from the data source is successfully."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource is denied or not authorized to perform the \"Edit Contract Tags\" action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policyConditions": {
      "get": {
        "tags": ["Policy Conditions"],
        "summary": "Get policy conditions",
        "description": "",
        "operationId": "getAllPolicyConditions",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all policy conditions in the EDM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions/{conditionid}/backfill": {
      "post": {
        "tags": ["Policies"],
        "summary": "Back fill policy condition",
        "description": "",
        "operationId": "backFillPolicyCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/copy": {
      "post": {
        "tags": ["Policies"],
        "summary": "Copy policy",
        "description": "",
        "operationId": "copyPolicy",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CopyPolicyInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Existing policy is successfully copied.",
            "headers": {
              "Location": {
                "description": "Policy id of the copy policy",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policies",
        "description": "",
        "operationId": "searchPolicies",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of policies is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicySearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Policies"],
        "summary": "Create policy",
        "description": "",
        "operationId": "createPolicy",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Policy is successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new policy",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions": {
      "post": {
        "tags": ["Policies"],
        "summary": "Create policy condition",
        "description": "",
        "operationId": "createPolicyCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Condition for a specified policy is successfully created.",
            "headers": {
              "Location": {
                "description": "location of the new policy condition",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions/{conditionid}/criteria": {
      "post": {
        "tags": ["Policies"],
        "summary": "Creates policy condition criteria",
        "description": "",
        "operationId": "createPolicyConditionCriteria",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyConditionCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Policy condition successfully created",
            "headers": {
              "Location": {
                "description": "Location of the new policy condition criteria",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/coverages": {
      "post": {
        "tags": ["Policies"],
        "summary": "Create policy coverage",
        "description": "",
        "operationId": "createPolicyCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCoverage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Policy coverage successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new policy coverage",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/cessions": {
      "post": {
        "tags": ["Policies"],
        "summary": "Create reinsurance cession",
        "description": "",
        "operationId": "createPolicyReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Reinsurance cession for a specified policy is successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the new policy reinsurance cession",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policy",
        "description": "",
        "operationId": "getPolicy",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information on a specified policy is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Policy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Policies"],
        "summary": "Update policy",
        "description": "",
        "operationId": "updatePolicy",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Policy successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Policies"],
        "summary": "Delete policy",
        "description": "",
        "operationId": "deletePolicy",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Policy successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions/{conditionid}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policy condition",
        "description": "",
        "operationId": "getPolicyCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information for a condition specified by its ID for a policy specified by its ID is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Policies"],
        "summary": "Update policy condition",
        "description": "",
        "operationId": "updatePolicyCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Policy condition successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Policies"],
        "summary": "Delete policy condition",
        "description": "",
        "operationId": "deletePolicyCondition",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Policy condition successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions/{conditionid}/criteria/{criteriaid}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policy condition criteria",
        "description": "",
        "operationId": "getPolicyConditionCriteria",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "criteriaid",
            "in": "path",
            "description": "ID number of the Policy Condition Criteria.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information for the specified policy condition criteria is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyConditionCriteria"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Policies"],
        "summary": "Update policy condition criteria",
        "description": "",
        "operationId": "updatePolicyConditionCriteria",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "criteriaid",
            "in": "path",
            "description": "ID number of the Policy Condition Criteria.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyConditionCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Policy condition criteria successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Policies"],
        "summary": "Delete policy condition criteria",
        "description": "",
        "operationId": "deletePolicyConditionCriteria",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "criteriaid",
            "in": "path",
            "description": "ID number of the Policy Condition Criteria.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Policy condition criteria successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/coverages/{coverageid}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get policy coverage",
        "description": "",
        "operationId": "getPolicyCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the Policy Coverage.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information on a specified poliy coverage is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCoverage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Policies"],
        "summary": "Update policy coverage",
        "description": "",
        "operationId": "updatePolicyCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the Policy Coverage.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCoverage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Policy coverage successfully updated."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Policies"],
        "summary": "Delete policy coverage",
        "description": "",
        "operationId": "deletePolicyCoverage",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageid",
            "in": "path",
            "description": "ID number of the Policy Coverage.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Policy coverage successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/cessions/{cessionid}": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get reinsurance cession",
        "description": "",
        "operationId": "getPolicyReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the Cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reinsurance cession retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Policies"],
        "summary": "Update reinsurance cession",
        "description": "",
        "operationId": "updatePolicyReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the Cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Reinsurance cession successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Policies"],
        "summary": "Delete reinsurance cession",
        "description": "",
        "operationId": "deletePolicyReinsuranceCession",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cessionid",
            "in": "path",
            "description": "ID number of the Cession.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reinsurance cession successfully deleted"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/policyConditions/{conditionid}/locationconditions": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get location conditions",
        "description": "",
        "operationId": "getLocationConditions",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "conditionid",
            "in": "path",
            "description": "ID number of the Policy Condition.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location conditions for a specified policy condition are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCondition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/policies/{id}/surplustreaties": {
      "get": {
        "tags": ["Policies"],
        "summary": "Get surplus treaties",
        "description": "",
        "operationId": "getSurplusTreaties",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the policy.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of surplus treaties for a specified policy is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Treaty"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/dataServers/{serverId}/": {
      "get": {
        "tags": ["DataServers"],
        "summary": "Get SQL Server instances",
        "description": "",
        "operationId": "searchDbInstancesv2",
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string",
              "default": "datasourceName ASC"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "tenant DB instance list is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ServerInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "RMS_Auth": []
          }
        ]
      }
    },
    "/dataServers/{serverId}/databases/{databaseId}/unregister": {
      "post": {
        "tags": ["Databases"],
        "summary": "Deregister EDM",
        "description": "",
        "operationId": "deregisterDatabasev2",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "RMS_Auth": []
          }
        ]
      }
    },
    "/dataServers/{serverId}/databases": {
      "get": {
        "tags": ["Databases"],
        "summary": "Get data modules on Data Bridge",
        "description": "",
        "operationId": "getAvailableDatabasesv2",
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by a space with`ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all available EDMs from DB instance is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DataBridgeDatabaseSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "RMS_Auth": []
          }
        ]
      }
    },
    "/dataServers/{serverId}/databases/{databaseId}/register": {
      "post": {
        "tags": ["Databases"],
        "summary": "Register EDM",
        "description": "",
        "operationId": "registerDatabaseV2",
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DataBridgeRegisterInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted: A job with the specified ID has been added to the workflow engine queue for processing. Send periodic HTTP GET requests to the URI for the job status. See [Workflow Engine Jobs](https://developer.rms.com/rms-developers/docs/workflow-engine)."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all\n  required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "RMS_Auth": []
          }
        ]
      }
    },
    "/dataServers/{serverId}/archives": {
      "get": {
        "tags": ["Archives"],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ArchiveSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Some of the provided parameters were not valid."
          },
          "410": {
            "description": "Not found. The entity you are trying to interact with does not exist."
          },
          "500": {
            "description": "Internal Server Error. If the problem persists you may want to contact the Administrator."
          }
        }
      }
    },
    "/dataServers/{serverId}/archives/{archiveId}": {
      "delete": {
        "tags": ["Archives"],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "archiveId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": ["Archives"],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "archiveId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ArchiveDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Some of the provided parameters were not valid."
          },
          "410": {
            "description": "Not found. The entity you are trying to interact with does not exist."
          },
          "500": {
            "description": "Internal Server Error. If the problem persists you may want to contact the Administrator."
          }
        }
      }
    },
    "/dataServers/{serverId}/archives/{archiveId}/restore": {
      "post": {
        "tags": ["Archives"],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "archiveId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RestoreArchiveRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted: Riskdata Job is created",
            "headers": {
              "Location": {
                "description": "location of the job with jobId",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities/{entity}": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get entity by domain tablespace",
        "description": "",
        "operationId": "getEntitiesMetaOrValuesv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata for an entity in a domain tablespace is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EntityMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Domains"],
        "summary": "Create currency",
        "description": "",
        "operationId": "createCurrencyv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/KeyValueStore"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created. New Currency is created in the data source successfully.",
            "headers": {
              "Location": {
                "description": "Location of the Currency resource.",
                "style": "simple",
                "schema": {
                  "type": "string",
                  "format": "URI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Resource already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get domains",
        "description": "",
        "operationId": "getDomainsv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainReference"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get entities by domain tablespace",
        "description": "",
        "operationId": "getEntitiesv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of entities for a domain tablespace is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainReference"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities/{entity}/meta": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get attributes domain tablespace entity",
        "description": "",
        "operationId": "getEntityAttributesv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Name of the metadata tag.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attributes for a specified entry in a domain tablespace are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities/{entity}/values": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get entity values",
        "description": "",
        "operationId": "getEntityValuesv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of fields to be fetched. Defaults to all.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Name of the metadata tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional attribute to filter the values. Defaults to returning all values.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Values for a specified domain/tablespaces/entity is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EntityResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities/{entity}/hazards": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get hazards",
        "description": "",
        "operationId": "getHazardsv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonfield",
            "in": "query",
            "description": "Name of the field user wants to fetch in the hazards.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "option",
            "in": "query",
            "description": "Optional attribute to filter the values. Defaults to returning all values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Name of the metadata tag.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of hazards for a specified domain/tablespaces/entity is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EntityResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces/{tablespace}/entities/{entity}/secondarymodifiers": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get secondary modifiers",
        "description": "",
        "operationId": "getSecondaryModifiersv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tablespace",
            "in": "path",
            "description": "Name of the tablespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "description": "Name of the entity.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonfield",
            "in": "query",
            "description": "Name of the field user wants to fetch in the secondary modifiers.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "option",
            "in": "query",
            "description": "Optional attribute to filter the values. Defaults to returning all values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Name of the metadata tag.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters query results by evaluating the value of expressions. The service supports four types of operators:\n* Comparison: `q=[attribute][comparison operator][value]` e.g. `id=100`, `id!=100`, `id>100`\n* Logical: `q=[expression][logical operator][expression]` e.g. `id=100 AND name=\"xyz\"` , `id=100 OR type=\"abc\"`\n* List: `q=[attribute][list operator][values list]` e.g. `id IN (1,2,3]`, `name NOT IN (\"abc\",\"xyz\")`\n* Matching: `q=[attribute][comparison operator][pattern]`, e.g. `name LIKE \"abc \"` , `type NOT LIKE \" xyz* \"`\nTo learn more, see [Query Exposure Data](https://developer.rms.com/rms-developers/docs/query-exposure-data).",
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "sort",
            "in": "query",
            "description": "Specify comma-delimited field names followed by `ASC` (to display the results in alphabetical or numerical ascending order) or `DESC` (to display the results in descending order.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offSet",
            "in": "query",
            "description": "Number of the page displaying the returned records, \\ starting at _0_.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of secondary modifiers for a specified domain/tablespaces/entity is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SecondaryModifierResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all \\ required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/exposures/{exposureId}/domains/{domainname}/tablespaces": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get tablespaces",
        "description": "",
        "operationId": "getTablespacesv1",
        "parameters": [
          {
            "name": "exposureId",
            "in": "path",
            "description": "Data source name",
            "required": true,
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w$",
              "type": "string"
            }
          },
          {
            "name": "domainname",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of table spaces for a domain is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainReference"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "JobIdParam": {
        "name": "jobId",
        "in": "path",
        "description": "Uniquely identifies the job",
        "schema": {
          "type": "string"
        },
        "required": true
      }
    },
    "schemas": { "PatchOperation": {
      "type": "string",
      "enum": ["update"]
    },
      "PatchSingleValue": {
        "type": "string"
      },
      "PatchMultiValues": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "PatchJobOperationStatusValue": {
        "properties": {
          "operation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchOperation"
          },
          "targetProperty": {
            "description": "the group property to patch.",
            "type": "string",
            "enum": ["status"]
          },
          "value": {
            "type": "string",
            "enum": ["canceled", "queued"]
          }
        }
      },
      "PatchJobOperationJobPriorityValue": {
        "properties": {
          "operation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchOperation"
          },
          "targetProperty": {
            "description": "the group property to patch.",
            "type": "string",
            "enum": ["jobPriority"]
          },
          "value": {
            "type": "string",
            "enum": ["verylow", "low", "medium", "high", "veryhigh"]
          }
        }
      },
      "PatchJobOperationMultiValue": {
        "properties": {
          "operation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchOperation"
          },
          "targetProperty": {
            "description": "the group property to patch.",
            "type": "string",
            "enum": ["groupIds"]
          },
          "value": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PatchMultiValues"
          }
        }
      },
      "EdmUpgradeRequest": {
        "type": "object",
        "properties": {
          "edmDataVersion": {
            "type": "string",
            "description": "Provide a compatible upgrade version for EDM data",
            "enum": ["22"]
          }
        }
      },
      "DataSourceSearchResultV2": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/UserDatabaseV2"
        }
      },
      "UserDatabaseV2": {
        "type": "object",
        "properties": {
          "datasourceName": {
            "type": "string"
          },
          "edmName": {
            "type": "string"
          },
          "permissionType": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "serverState": {
            "type": "string",
            "enum": ["READY", "UPGRADING", "UPGRADE_FAILED", "LOCK"]
          },
          "serverNamespace": {
            "type": "string",
            "enum": ["RISK_MODELER", "DATA_BRIDGE"]
          },
          "owner": {
            "type": "string"
          },
          "exposureSetId": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "serverId": {
            "type": "string"
          }
        }
      },
      "ArchiveSearchResult": {
        "type": "object",
        "properties": {
          "archives": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Archive"
            }
          }
        }
      },
      "RestoreArchiveRequest": {
        "properties": {
          "targetInstance": {
            "type": "string",
            "nullable": false,
            "description": "The server to restore it to."
          },
          "databaseName": {
            "type": "string",
            "nullable": false,
            "description": "The name to give the restored database"
          },
          "owner": {
            "type": "string",
            "nullable": true,
            "description": "The owner of the restored database"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of groups to grant access to the newly created database"
          }
        }
      },
      "Archive": {
        "properties": {
          "name": {
            "type": "string",
            "nullable": false
          },
          "serverName": {
            "type": "string",
            "nullable": false
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "The date the database was archived or deleted"
          },
          "createdBy": {
            "type": "string",
            "nullable": false,
            "description": "the user who archived or deleted the database"
          },
          "sizeInMb": {
            "type": "integer",
            "description": "The size of the database in MB"
          }
        }
      },
      "ArchiveDetail": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Archive"
          },
          {
            "type": "object",
            "properties": {
              "downloadUris": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "description": "The URIs to the archived database files"
              }
            }
          }
        ]
      },
      "RiskdataResource": {
        "type": "string",
        "format": "uri",
        "example": "riskdata/v1/ExposureSets/es1/exposures/e1/portfolios"
      },
      "JobsActionObject": {
        "type": "object",
        "properties": {
          "jobStatus": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/JobStatus"
          }
        }
      },
      "JobStatus": {
        "type": "string",
        "enum": [
          "queued",
          "running",
          "failed",
          "completed",
          "created",
          "cancelled"
        ]
      },
      "JobSearchResult": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Job"
            }
          }
        }
      },
      "ProgramSetSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSet"
        }
      },
      "NewProgramSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "share": {
            "type": "boolean",
            "default": "false"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cedenceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedenceType"
          },
          "cedant": {
            "type": "string"
          },
          "underwriter": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        }
      },
      "ProgramSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GroupDetail"
            }
          },
          "cedenceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedenceType"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "cedant": {
            "type": "string"
          },
          "underwriter": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "primeProgramId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FilteredPrograms": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FilteredResult"
          },
          {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSummary"
            }
          }
        ]
      },
      "FilteredResult": {
        "properties": {}
      },
      "SubjectOfLossCreateJson": {
        "required": ["perspective", "subjectOfLossType"],
        "type": "object",
        "properties": {
          "sourceUri": {
            "type": "string",
            "description": "Source or exposure UUID. Required if source contract name is not present",
            "format": "uuid"
          },
          "sourceContractName": {
            "type": "string",
            "description": "Source contract name. Required if source contract uuid is not present"
          },
          "lossSourceType": {
            "type": "string",
            "description": "Loss source type",
            "example": "PLT"
          },
          "subjectOfLossType": {
            "type": "string",
            "description": "Subject of loss type",
            "example": "ELT"
          },
          "perspective": {
            "type": "string",
            "description": "Loss flow type",
            "example": "netloss"
          },
          "weight": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "perilUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "perilIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractRegionJson"
            }
          },
          "lobUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "lobIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "adjustmentUuid": {
            "type": "string",
            "description": "Adjustment uuid",
            "format": "uuid"
          },
          "exposureUri": {
            "type": "string",
            "description": "EDM uuid",
            "format": "uuid"
          }
        },
        "description": "Contract subjects (risk data)"
      },
      "ShareSetJson": {
        "required": [
          "createdAt",
          "description",
          "isActive",
          "isDefault",
          "isDeleted",
          "modifiedAt",
          "modifiedBy",
          "name",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at date",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "Created by username"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Modified by at date",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Modified by username"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "PortfolioCreatedJson": {
        "required": ["portfolioVariationUuid", "portfolioUuid"],
        "type": "object",
        "properties": {
          "portfolioUuid": {
            "type": "string",
            "format": "uuid"
          },
          "portfolioVariationUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ContractColumnCreateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contractNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "riskBlockNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ContractListItemJson": {
        "required": [
          "canParticipate",
          "isLatestFinalizedVariation",
          "name",
          "programName",
          "programVariationSource",
          "programVariationUuid",
          "programStatus",
          "programTenantId",
          "programUuid",
          "riskEndDate",
          "riskStartDate",
          "termCurrencyCode",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Contract uuid",
            "format": "uuid"
          },
          "programUuid": {
            "type": "string",
            "description": "Program uuid",
            "format": "uuid"
          },
          "programName": {
            "type": "string",
            "description": "Program name"
          },
          "programVariationUuid": {
            "type": "string",
            "description": "Program revision uuid",
            "format": "uuid"
          },
          "programVariationName": {
            "type": "string",
            "description": "Variation name"
          },
          "programVariationReSetYear": {
            "type": "integer",
            "description": "Variation reSet year",
            "format": "int32"
          },
          "programVariationSource": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSource"
          },
          "programStatus": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramStatus"
          },
          "name": {
            "type": "string",
            "description": "Contract name"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Currency code"
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Can participate"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "isin": {
            "type": "string",
            "description": "International Securities Identification Number",
            "example": "US38259P5089"
          },
          "treatyAttributes": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeJson"
          },
          "isLatestFinalizedVariation": {
            "type": "boolean"
          }
        }
      },
      "InceptionStatus": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Inception status",
        "example": "Incepting"
      },
      "ContractSignedLineJson": {
        "required": ["contractUuid", "signedLine"],
        "type": "object",
        "properties": {
          "contractUuid": {
            "type": "string",
            "format": "uuid"
          },
          "signedLine": {
            "type": "number"
          }
        }
      },
      "ContractJson": {
        "required": [
          "name",
          "riskEndDate",
          "riskStartDate",
          "status",
          "termCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contract name"
          },
          "status": {
            "type": "string",
            "description": "Contract status"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Contract currency code"
          },
          "templateCode": {
            "type": "string",
            "description": "Template code"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossJson"
            }
          },
          "uuid": {
            "type": "string",
            "description": "Contract uuid",
            "format": "uuid"
          },
          "isin": {
            "type": "string",
            "description": "International Securities Identification Number",
            "example": "US38259P5089"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Participation option"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          },
          "treatyAttributes": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeJson"
          },
          "reference": {
            "type": "string",
            "description": "Contract reference"
          }
        }
      },
      "PortfolioContractJson": {
        "required": ["participation", "uuid"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "participation": {
            "type": "number"
          }
        },
        "description": "Contract"
      },
      "ContractTreatyAttributeExclusionJson": {
        "type": "object",
        "properties": {
          "exclusionType": {
            "type": "string",
            "description": "Exclusion type",
            "enum": ["EXCLUDE", "INCLUDE"]
          },
          "regionType": {
            "type": "string",
            "description": "Region type",
            "default": "country",
            "enum": ["admin1", "country"]
          },
          "perilIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "lobIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Exclusions"
      },
      "ProgramOrganizationJson": {
        "type": "object",
        "properties": {
          "broker": {
            "type": "string",
            "description": "Broker name"
          },
          "legalEntity": {
            "type": "string",
            "description": "Legal etity name"
          },
          "businessUnit": {
            "type": "string",
            "description": "Business unit"
          },
          "office": {
            "type": "string",
            "description": "Office"
          }
        }
      },
      "RiskBlockContractJson": {
        "required": [
          "canParticipate",
          "name",
          "riskEndDate",
          "riskStartDate",
          "termCurrencyCode",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Risk block contract uuid",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Risk block contract name"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Contract currency code"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossJson"
            }
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Participation option"
          }
        },
        "description": "Risk blocks"
      },
      "ContractTreatyAttributesCreateJson": {
        "required": ["quote", "treatyType"],
        "type": "object",
        "properties": {
          "quote": {
            "type": "boolean",
            "description": "Treaty quote"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatyType"
          },
          "occurrenceAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceFranchise": {
            "type": "boolean",
            "description": "Occurrence franchise"
          },
          "aggregateAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "aggregateLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "aggregateFranchise": {
            "type": "boolean",
            "description": "Aggregate franchise"
          },
          "share": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "customCdl": {
            "type": "string",
            "description": "Custom CDL"
          },
          "placement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "cedant": {
            "type": "string",
            "description": "Cedant"
          },
          "underwriter": {
            "type": "string",
            "description": "Treaty Underwriter"
          },
          "otherVariableExpense": {
            "type": "number"
          },
          "reinstatements": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractReinstatementJson"
            }
          },
          "subs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatySubAttributeCreateJson"
            }
          },
          "subjectPremium": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "lossRatioCap": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "cedingCommission": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "payoutType": {
            "type": "string",
            "description": "Payout type",
            "enum": ["BINARY", "PRORATA"]
          },
          "payout": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerType": {
            "type": "string",
            "description": "Trigger type",
            "enum": ["Layer", "K"]
          },
          "triggerOccurrenceAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerOccurrenceLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerCriteria": {
            "type": "string",
            "description": "Trigger criteria type",
            "enum": ["ATTACHES", "EXHAUSTS"]
          },
          "triggerK": {
            "type": "integer",
            "description": "Trigger K",
            "format": "int32"
          },
          "triggerLayerResponse": {
            "type": "string",
            "description": "Trigger layer response type",
            "enum": ["DROPS", "ACTIVATES"]
          },
          "postTriggerAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "postTriggerLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributesLayerJson"
            }
          },
          "exclusions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeExclusionJson"
            }
          }
        },
        "description": "Contract treaty attributes"
      },
      "ProgramContractCreateJson": {
        "required": [
          "name",
          "riskEndDate",
          "riskStartDate",
          "status",
          "termCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contract name"
          },
          "status": {
            "type": "string",
            "description": "Contract status (New by default)",
            "example": "New"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Contract currency code"
          },
          "templateCode": {
            "type": "string",
            "description": "Template code"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossCreateJson"
            }
          },
          "uuid": {
            "type": "string",
            "description": "Contract uuid",
            "format": "uuid"
          },
          "isin": {
            "type": "string",
            "description": "International Securities Identification Number",
            "example": "US38259P5089"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Participation option"
          },
          "signedLine": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "treatyAttributes": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributesCreateJson"
          },
          "reference": {
            "type": "string",
            "description": "Contract reference"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataItemJson"
            }
          }
        }
      },
      "CreateProgramResultJson": {
        "required": ["programUuid", "revisionUuid"],
        "type": "object",
        "properties": {
          "programUuid": {
            "type": "string",
            "format": "uuid"
          },
          "revisionUuid": {
            "type": "string",
            "format": "uuid"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramCreateContractResultJson"
            }
          }
        }
      },
      "ProgramSource": {
        "required": ["entryName"],
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "enum": ["Original", "ReSet", "Renewal"]
      },
      "SeqTenantProvisionListItemJson": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TenantProvisionListItemJson"
        }
      },
      "ProgramVariationLossSourceCreateJson": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "sourceUri": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "lossSourceType": {
            "type": "string",
            "description": "Loss source type",
            "example": "PLT"
          },
          "exposureUri": {
            "type": "string",
            "format": "uuid"
          },
          "analysisId": {
            "type": "object"
          },
          "perspectiveCode": {
            "type": "string"
          }
        },
        "description": "Loss source"
      },
      "ProgramVariationLossSourceJson": {
        "required": ["description", "sourceUri"],
        "type": "object",
        "properties": {
          "sourceUri": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "lossSourceType": {
            "type": "string",
            "description": "Loss source type",
            "example": "PLT"
          },
          "exposureId": {
            "type": "string",
            "format": "uuid"
          },
          "analysisId": {
            "type": "string"
          },
          "perspectiveCode": {
            "type": "string"
          }
        },
        "description": "Loss source"
      },
      "ContractRegionJson": {
        "required": ["regionId", "regionType"],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region ID",
            "format": "int64"
          },
          "regionType": {
            "type": "string",
            "description": "Region type"
          }
        },
        "description": "Region"
      },
      "LossFlowType": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Loss flow type",
        "example": "netloss"
      },
      "ProvisionStatus": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        }
      },
      "FieldErrorsJson": {
        "required": ["field"],
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "errors": {
            "required": ["head", "tail"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Only and always present on draft revisions even when empty"
      },
      "SeqUUID": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PortfolioVariationNameUpdateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "SeqContractSignedLineJson": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractSignedLineJson"
        }
      },
      "ProgramPrimeVariationUpdateJson": {
        "type": "object",
        "properties": {
          "programVariationUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProgramDetails": {
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "isPrime",
          "modifiedAt",
          "modifiedBy",
          "name",
          "organization",
          "revisionStatus",
          "revisionUuid",
          "status",
          "tenantId",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "contractColumns": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractColumnJson"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramContractJson"
            }
          },
          "riskBlocks": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RiskBlockContractJson"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code"
          },
          "quoteStatus": {
            "type": "string",
            "description": "Quote status"
          },
          "defaultStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "defaultEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "cedenceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedenceType"
          },
          "cedant": {
            "type": "string"
          },
          "underwriter": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "primeVariationUuid": {
            "type": "string",
            "format": "uuid"
          },
          "lossSources": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationLossSourceJson"
            }
          },
          "organization": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramOrganizationJson"
          },
          "isPrime": {
            "type": "boolean",
            "description": "Is prime"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramLinkJson"
            }
          },
          "exposureIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "otherVariableExpense": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "templateName": {
            "type": "string",
            "description": "Contract template name"
          },
          "primeAnalysisUuid": {
            "type": "string",
            "description": "Prime analysis uuid",
            "format": "uuid"
          }
        }
      },
      "MetadataInputType": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Metadata input type",
        "enum": ["LIST", "STRING"]
      },
      "MetadataType": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Metadata type",
        "enum": ["PORTFOLIO", "PROGRAM", "CONTRACT"]
      },
      "SubjectOfLossJson": {
        "required": ["perspective", "sourceUri", "subjectOfLossType"],
        "type": "object",
        "properties": {
          "sourceUri": {
            "type": "string",
            "description": "Source or exposure uuid",
            "format": "uuid"
          },
          "lossSourceType": {
            "type": "string",
            "description": "Loss source type",
            "example": "PLT"
          },
          "subjectOfLossType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossType"
          },
          "perspective": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossFlowType"
          },
          "weight": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "perilUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "perilIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractRegionJson"
            }
          },
          "lobUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "lobIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "adjustmentUuid": {
            "type": "string",
            "description": "Adjustment uuid",
            "format": "uuid"
          }
        },
        "description": "Contract subject (risk data)"
      },
      "MetadataJson": {
        "required": ["label", "name", "uuid"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "metadataType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataType"
          },
          "inputType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataInputType"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NewProgramSummary": {
        "required": ["isPrime", "name", "organization"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Program name"
          },
          "description": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationMetadataJson"
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code"
          },
          "quoteStatus": {
            "type": "string",
            "description": "Quote status"
          },
          "defaultStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "defaultEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "lossSources": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationLossSourceJson"
            }
          },
          "organization": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramOrganizationJson"
          },
          "exposureIds": {
            "type": "array",
            "description": "EDM UUIDs to uniquely identify an EDM",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "otherVariableExpense": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          }
        }
      },
      "ProgramSummary": {
        "required": [
          "createdAt",
          "createdBy",
          "deletedAt",
          "deletedBy",
          "description",
          "isPrime",
          "modifiedAt",
          "modifiedBy",
          "name",
          "organization",
          "revisionStatus",
          "revisionUuid",
          "status",
          "tenantId",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "programId": {
            "type": "string",
            "description": "Program uuid",
            "format": "uuid"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "programSetId": {
            "type": "string",
            "description": "Program revision uuid",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Program name"
          },
          "description": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationMetadataJson"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "string",
            "description": "Tenant ID"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          },
          "hasErrors": {
            "type": "object",
            "description": "Contains errors"
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code"
          },
          "quoteStatus": {
            "type": "string",
            "description": "Quote status"
          },
          "defaultStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "defaultEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "lossSources": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationLossSourceJson"
            }
          },
          "organization": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramOrganizationJson"
          },
          "exposureIds": {
            "type": "array",
            "description": "EDM UUIDs to uniquely identify an EDM",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "otherVariableExpense": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          }
        }
      },
      "Program": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSummary"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramDetails"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FieldErrorsJson"
          }
        ]
      },
      "TenantProvisionPaginatedJson": {
        "required": ["items", "totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TenantProvisionListItemJson"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateShareSetResultJson": {
        "required": ["uuid"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProgramVariationMetadataJson": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSource"
          },
          "year": {
            "maximum": 9999,
            "minimum": 1000,
            "type": "integer",
            "format": "int32",
            "example": 2015
          },
          "tags": {
            "type": "string",
            "description": "Program tags"
          },
          "cedant": {
            "type": "string",
            "deprecated": true
          },
          "underwriter": {
            "type": "string",
            "deprecated": true
          }
        }
      },
      "CreateProgramVariationResultJson": {
        "required": ["revisionUuid"],
        "type": "object",
        "properties": {
          "revisionUuid": {
            "type": "string",
            "format": "uuid"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramCreateContractResultJson"
            }
          }
        }
      },
      "AssignedMetadataJson": {
        "required": ["name", "uuid", "value"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "Additional program metadata"
      },
      "CedenceType": {
        "type": "string"
      },
      "ProgramVariationStatusUpdateJson": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramStatus"
          }
        }
      },
      "ProgramStatus": {
        "type": "object"
      },
      "ValidationServiceErrorJson": {
        "required": ["errorCode", "errorMessage"],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorData": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FieldValidationErrorJson"
            }
          }
        }
      },
      "ProgramFromVariationCreateJson": {
        "required": ["programName"],
        "type": "object",
        "properties": {
          "programName": {
            "type": "string"
          }
        }
      },
      "ProgramPaginatedJson": {
        "required": ["items", "totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Program"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ContractTreatyAttributesLayerJson": {
        "type": "object",
        "properties": {
          "occurrenceAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceFranchise": {
            "type": "boolean",
            "description": "Occurrence franchise"
          },
          "aggregateAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "aggregateFranchise": {
            "type": "boolean",
            "description": "Aggregate franchise"
          },
          "aggregateLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "number": {
            "type": "integer",
            "description": "Layer number",
            "format": "int32"
          }
        },
        "description": "Layers"
      },
      "ContractsSignedLinesUpdateJson": {
        "required": ["signedLines"],
        "type": "object",
        "properties": {
          "signedLines": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractSignedLineJson"
            }
          }
        }
      },
      "PortfolioCreateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "portfolioVariationName": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioContractJson"
            }
          }
        }
      },
      "SeqShareSetJson": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ShareSetJson"
        }
      },
      "ContractColumnJson": {
        "required": ["contractUuids", "name", "riskBlockUuids"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contractUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "riskBlockUuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Contract column"
      },
      "ProgramVariationDescriptionUpdateJson": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "SubjectOfLossType": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Subject of loss type",
        "example": "BUSINESS_HIERARCHY_GROUP"
      },
      "PortfolioContractSummaryJson": {
        "required": [
          "canParticipate",
          "name",
          "participation",
          "termCurrencyCode",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "termCurrencyCode": {
            "type": "string"
          },
          "participation": {
            "type": "number"
          },
          "canParticipate": {
            "type": "boolean"
          },
          "riskStartDate": {
            "type": "string",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "format": "date"
          },
          "totalAmount": {
            "type": "object"
          },
          "isin": {
            "type": "string"
          },
          "treatyAttributes": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeJson"
          },
          "isLatestFinalizedVariation": {
            "type": "object"
          }
        },
        "description": "Contract"
      },
      "ProgramUpdateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cedenceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedenceType"
          },
          "cedant": {
            "type": "string"
          },
          "underwriter": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "primeVariationUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ExposuresJson": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "FieldValidationErrorJson": {
        "required": ["field"],
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Error data"
      },
      "PortfolioUpdateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "NewProgram": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/NewProgramSummary"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramDetails"
          }
        ]
      },
      "MetadataItemJson": {
        "required": ["uuid", "value"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "Metadata"
      },
      "ContractTreatySubAttributeCreateJson": {
        "required": ["amount", "isAggregate", "isFranchise", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": ["SUBLIMIT", "SUBEXCESS"]
          },
          "perilIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "regionType": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "lobIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "amount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "isAggregate": {
            "type": "boolean",
            "description": "Is aggregate"
          },
          "isFranchise": {
            "type": "boolean",
            "description": "Is franchise"
          }
        },
        "description": "Contract treaty sub-attributes"
      },
      "MetadataCreateOrUpdateJson": {
        "required": ["label", "metadataType", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "metadataType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataType"
          },
          "inputType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataInputType"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProgramContractJson": {
        "required": ["name", "status", "termCurrencyCode", "uuid"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contract name"
          },
          "status": {
            "type": "string",
            "description": "Contract status",
            "default": "New"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Contract currency code"
          },
          "templateCode": {
            "type": "string",
            "description": "Template code"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossJson"
            }
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isin": {
            "type": "string",
            "description": "International Securities Identification Number",
            "example": "US38259P5089"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Participation option"
          },
          "signedLine": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "treatyAttributes": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeJson"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataItemJson"
            }
          },
          "reference": {
            "type": "string",
            "description": "Contract reference"
          }
        },
        "description": "Contract"
      },
      "ShareSetPaginatedJson": {
        "required": ["items", "totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ShareSetJson"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PortfolioVariationCreateJson": {
        "type": "object",
        "properties": {
          "portfolioVariationName": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioContractJson"
            }
          }
        }
      },
      "ProgramCedenceTypeUpdateJson": {
        "required": ["cedenceType"],
        "type": "object",
        "properties": {
          "cedenceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CedenceType"
          }
        }
      },
      "PortfolioVariationJson": {
        "required": [
          "createdAt",
          "createdBy",
          "modifiedAt",
          "modifiedBy",
          "portfolioUuid",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "portfolioUuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          }
        }
      },
      "ProgramVariationCreateJson": {
        "type": "object",
        "properties": {
          "revisionName": {
            "type": "string",
            "description": "Variation name"
          },
          "revisionDescription": {
            "type": "string",
            "description": "Variation description"
          },
          "description": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationMetadataJson"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code"
          },
          "quoteStatus": {
            "type": "string",
            "description": "Quote status"
          },
          "defaultStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "defaultEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "contractColumns": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractColumnCreateJson"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramContractCreateJson"
            }
          },
          "riskBlocks": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RiskBlockContractCreateJson"
            }
          },
          "lossSources": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationLossSourceCreateJson"
            }
          },
          "organization": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramOrganizationJson"
          },
          "isPrime": {
            "type": "boolean",
            "description": "Is prime",
            "default": false
          },
          "exposureIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "otherVariableExpense": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataItemJson"
            }
          },
          "templateName": {
            "type": "string",
            "description": "Contract template name"
          },
          "primeAnalysisUuid": {
            "type": "string",
            "description": "Prime analysis uuid",
            "format": "uuid"
          }
        }
      },
      "TenantProvisionJson": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProvisionStatus"
          }
        }
      },
      "ProgramLinksJson": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramLinkJson"
            }
          }
        }
      },
      "ShareSetCreateJson": {
        "required": ["description", "isActive", "isDefault", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "PortfolioVariationDetailsJson": {
        "required": [
          "createdAt",
          "createdBy",
          "modifiedAt",
          "modifiedBy",
          "name",
          "portfolioUuid",
          "revisionModifiedAt",
          "revisionModifiedBy",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "portfolioUuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "revisionName": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "revisionModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "revisionModifiedBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "contractsByProgram": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioContractsByProgramJson"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          }
        }
      },
      "ProgramCedantJson": {
        "type": "object",
        "properties": {
          "cedant": {
            "type": "string",
            "description": "Cedant name"
          }
        }
      },
      "PortfolioListItemJson": {
        "required": [
          "createdAt",
          "createdBy",
          "modifiedAt",
          "modifiedBy",
          "name",
          "revisionUuid",
          "tenantId",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "revisionUuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AssignedMetadataJson"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TenantProvisionListItemJson": {
        "required": ["status", "tenantId"],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProvisionStatus"
          }
        }
      },
      "SeqProgram": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Program"
        }
      },
      "RiskBlockContractCreateJson": {
        "required": [
          "canParticipate",
          "name",
          "riskEndDate",
          "riskStartDate",
          "termCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Risk block contract name"
          },
          "termCurrencyCode": {
            "type": "string",
            "description": "Contract currency code"
          },
          "riskStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "riskEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SubjectOfLossCreateJson"
            }
          },
          "canParticipate": {
            "type": "boolean",
            "description": "Participation option"
          }
        }
      },
      "PortfolioContractsByProgramJson": {
        "required": [
          "programName",
          "programVariationSource",
          "programVariationUuid"
        ],
        "type": "object",
        "properties": {
          "programVariationUuid": {
            "type": "string",
            "format": "uuid"
          },
          "programName": {
            "type": "string"
          },
          "programVariationName": {
            "type": "string"
          },
          "programVariationReSetYear": {
            "type": "object"
          },
          "programVariationSource": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramSource"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioContractSummaryJson"
            }
          }
        },
        "description": "Contract by program"
      },
      "ReinstatementType": {
        "type": "object",
        "description": "Reinstatement type",
        "example": "Free"
      },
      "BigDecimal": {
        "type": "object",
        "properties": {
          "bigDecimal": {
            "type": "number"
          },
          "mc": {
            "required": ["precision", "roundingMode"],
            "type": "object",
            "properties": {
              "precision": {
                "type": "integer",
                "format": "int32"
              },
              "roundingMode": {
                "type": "string",
                "enum": [
                  "UP",
                  "DOWN",
                  "CEILING",
                  "FLOOR",
                  "HALF_UP",
                  "HALF_DOWN",
                  "HALF_EVEN",
                  "UNNECESSARY"
                ]
              }
            }
          },
          "computedHashCode": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "scale": {
            "type": "number",
            "writeOnly": true
          },
          "validLong": {
            "type": "boolean"
          },
          "validByte": {
            "type": "boolean"
          },
          "validShort": {
            "type": "boolean"
          },
          "validChar": {
            "type": "boolean"
          },
          "validInt": {
            "type": "boolean"
          },
          "whole": {
            "type": "boolean"
          },
          "decimalDouble": {
            "type": "boolean"
          },
          "decimalFloat": {
            "type": "boolean"
          },
          "binaryDouble": {
            "type": "boolean"
          },
          "binaryFloat": {
            "type": "boolean"
          },
          "exactDouble": {
            "type": "boolean"
          },
          "exactFloat": {
            "type": "boolean"
          }
        },
        "description": "Post trigger limit amount"
      },
      "ContractReinstatementJson": {
        "required": ["reinstatementType"],
        "type": "object",
        "properties": {
          "count": {
            "type": "string",
            "description": "Reinstatement count"
          },
          "reinstatementType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinstatementType"
          },
          "premiumRate": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "proRataOption": {
            "type": "string",
            "description": "Pro-rata option"
          }
        },
        "description": "Contract reinstatement"
      },
      "TreatyType": {
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        },
        "description": "Treaty type",
        "example": "CatXL"
      },
      "ProgramVariationUpdateJson": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "revisionName": {
            "type": "string"
          },
          "revisionDescription": {
            "type": "string"
          },
          "description": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationMetadataJson"
          },
          "notes": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "quoteStatus": {
            "type": "string"
          },
          "defaultStartDate": {
            "type": "string",
            "description": "Risk start date (inception date)",
            "format": "date"
          },
          "defaultEndDate": {
            "type": "string",
            "description": "Risk end date (expiration date)",
            "format": "date"
          },
          "contractColumns": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractColumnCreateJson"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramContractCreateJson"
            }
          },
          "riskBlocks": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RiskBlockContractCreateJson"
            }
          },
          "organization": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramOrganizationJson"
          },
          "exposureIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "brokerage": {
            "type": "number"
          },
          "otherVariableExpense": {
            "type": "number"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetadataItemJson"
            }
          },
          "lossSources": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProgramVariationLossSourceCreateJson"
            }
          },
          "templateName": {
            "type": "string",
            "description": "Contract template name"
          },
          "primeAnalysisUuid": {
            "type": "string",
            "description": "Prime analysis uuid",
            "format": "uuid"
          }
        }
      },
      "ShareSetDataJson": {
        "required": [
          "programName",
          "programVariationName",
          "share",
          "treatyName"
        ],
        "type": "object",
        "properties": {
          "programName": {
            "type": "string"
          },
          "programVariationName": {
            "type": "string"
          },
          "treatyName": {
            "type": "string"
          },
          "share": {
            "type": "number"
          }
        }
      },
      "ProgramLinkJson": {
        "required": ["linkType", "targetProgramUuid"],
        "type": "object",
        "properties": {
          "targetProgramUuid": {
            "type": "string",
            "format": "uuid"
          },
          "linkType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LinkType"
          }
        },
        "description": "Links"
      },
      "ContractTreatyAttributeJson": {
        "required": ["inceptionStatus", "quote", "treatyType"],
        "type": "object",
        "properties": {
          "quote": {
            "type": "boolean",
            "description": "Treaty quote"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatyType"
          },
          "inceptionStatus": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/InceptionStatus"
          },
          "occurrenceAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "occurrenceFranchise": {
            "type": "boolean",
            "description": "Occurrence franchise"
          },
          "aggregateAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "aggregateLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "aggregateFranchise": {
            "type": "boolean",
            "description": "Aggregate franchise"
          },
          "share": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "customCdl": {
            "type": "string",
            "description": "Custom CDL"
          },
          "placement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "cedant": {
            "type": "string",
            "description": "Cedant"
          },
          "underwriter": {
            "type": "string",
            "description": "Treaty Underwriter"
          },
          "reinstatements": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractReinstatementJson"
            }
          },
          "subs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatySubAttributeCreateJson"
            }
          },
          "subjectPremium": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "lossRatioCap": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "cedingCommission": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "brokerage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "otherVariableExpense": {
            "type": "number"
          },
          "payoutType": {
            "type": "string",
            "description": "Payout type",
            "enum": ["BINARY", "PRORATA"]
          },
          "payout": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerType": {
            "type": "string",
            "description": "Trigger type",
            "enum": ["Layer", "K"]
          },
          "triggerOccurrenceAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerOccurrenceLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "triggerCriteria": {
            "type": "string",
            "description": "Trigger criteria type",
            "enum": ["ATTACHES", "EXHAUSTS"]
          },
          "triggerK": {
            "type": "integer",
            "description": "Trigger K",
            "format": "int32"
          },
          "triggerLayerResponse": {
            "type": "string",
            "description": "Trigger layer response type",
            "enum": ["DROPS", "ACTIVATES"]
          },
          "postTriggerAttachmentAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "postTriggerLimitAmount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BigDecimal"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributesLayerJson"
            }
          },
          "exclusions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ContractTreatyAttributeExclusionJson"
            }
          }
        },
        "description": "Contract treaty attributes"
      },
      "PortfolioVariationCreatedJson": {
        "required": ["portfolioVariationUuid"],
        "type": "object",
        "properties": {
          "portfolioVariationUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProgramVariationNameUpdateJson": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ProgramCreateContractResultJson": {
        "required": ["name", "uuid"],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "Contract"
      },
      "LinkType": {
        "required": ["entryName"],
        "type": "object",
        "properties": {
          "entryName": {
            "type": "string"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "logId": {
            "type": "string"
          }
        }
      },
      "AnalysisGroup": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "propagateDetailedLosses": {
            "type": "boolean"
          },
          "analysisIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "rateSchemes": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EventRateScheme"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "EventRateScheme": {
        "type": "object",
        "properties": {
          "modelRegionCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          },
          "perilCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "eventRateSchemeName": {
            "type": "string"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "AnalysisGroupSearchResult": {
        "type": "object",
        "properties": {
          "searchMatchingAnalysisGroupList": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysisGroup"
            }
          }
        }
      },
      "Cedant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^\\w([\\w-]*\\w|)$",
            "type": "string"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ExposureValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LineOfBusiness": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "LossOccurrence": {
        "required": ["treatyId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "regionPeril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "lossOccurrenceTime": {
            "type": "integer",
            "format": "int32"
          },
          "lossOccurrenceRadius": {
            "type": "integer",
            "format": "int32"
          },
          "radiusUnit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "multiLossOccurrence": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "Producer": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^\\w([\\w-]*\\w|)$",
            "type": "string"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "TreatyWithAnalysisInfo": {
        "required": ["attachLevel", "cedant", "treatyNumber", "treatyType"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "treatyName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
            }
          },
          "aggregateDeductible": {
            "type": "number",
            "format": "double"
          },
          "aggregateLimit": {
            "type": "number",
            "format": "double"
          },
          "lossOccurrences": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossOccurrence"
            }
          },
          "analysisId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisName": {
            "type": "string"
          }
        }
      },
      "ConvertEventInput": {
        "type": "object",
        "properties": {
          "analysisName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string",
            "description": "The name for the analysis with converted rates and/or losses. can only contain characters only 0-9, A-Z, a-z, underscore(_), hyphen(-), colon(:), and space. Can't start or end with hyphen, space, or colon, and can't include multiple consecutive hyphens (--)",
            "example": "NewAnalysisName"
          },
          "eventRateSchemeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "eventLossAdjustmentSchemeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ConvertResultCurrencyInput": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          }
        }
      },
      "Currency": {
        "required": ["asOfDate", "code", "scheme", "vintage"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string"
          },
          "vintage": {
            "type": "string"
          }
        }
      },
      "PateBatchInput": {
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "pateId": {
            "type": "integer",
            "format": "int64"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "analysisId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyType": {
            "type": "string"
          }
        }
      },
      "AnalysisSummaryReportInput": {
        "required": ["perilList"],
        "type": "object",
        "properties": {
          "perilList": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reportName": {
            "type": "string"
          }
        }
      },
      "LocationAAL": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationName": {
            "type": "string"
          },
          "locationNumber": {
            "type": "string"
          },
          "aal": {
            "type": "number",
            "format": "double"
          },
          "standardDeviation": {
            "type": "number",
            "format": "double"
          },
          "coefficientOfVariation": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LocationAALResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "offSet": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "locationAALs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationAAL"
            }
          }
        }
      },
      "AnalysesItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "runDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "exposureType": {
            "type": "integer",
            "format": "int32"
          },
          "peril": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "region": {
            "type": "string"
          },
          "engineVersion": {
            "type": "string"
          },
          "groupType": {
            "type": "string"
          },
          "cedant": {
            "type": "string"
          },
          "lob": {
            "type": "string"
          },
          "engineType": {
            "type": "integer",
            "format": "int32"
          },
          "subperil": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSource": {
            "type": "string"
          },
          "jobId": {
            "type": "integer",
            "format": "int64"
          },
          "jobUUID": {
            "type": "string"
          },
          "isGroup": {
            "type": "boolean"
          },
          "engineName": {
            "type": "string"
          },
          "statusName": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "subperilName": {
            "type": "string"
          },
          "rdmName": {
            "type": "string"
          },
          "regroup": {
            "type": "integer",
            "format": "int32"
          },
          "currencyName": {
            "type": "string"
          },
          "perilName": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "lossAmplification": {
            "type": "integer",
            "format": "int32"
          },
          "lossAmplificationName": {
            "type": "string"
          },
          "mode": {
            "type": "integer",
            "format": "int32"
          },
          "modeName": {
            "type": "string"
          },
          "insuranceType": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceTypeName": {
            "type": "string"
          },
          "vulnerabilityCurve": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilityCurveName": {
            "type": "string"
          },
          "riGuid": {
            "type": "string"
          }
        }
      },
      "AnalysisSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysesItem"
        }
      },
      "AnalysisRegionSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionItem"
        }
      },
      "RegionItem": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "subRegion": {
            "type": "string"
          },
          "peril": {
            "type": "string"
          },
          "rateschemeid": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CedantSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
        }
      },
      "Bucket": {
        "type": "object"
      },
      "MetricMetadata": {
        "type": "object",
        "properties": {
          "eventWeightId": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MetricValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Value"
          },
          "bucket": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Bucket"
          }
        }
      },
      "MetricsOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int64"
          },
          "structure": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "portfolioId": {
            "type": "integer",
            "format": "int32"
          },
          "variationId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metricName": {
            "type": "string"
          },
          "metricMetadata": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricMetadata"
          },
          "modelSettings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ModelSettings"
          },
          "metricValue": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricValue"
            }
          },
          "exposureNumber": {
            "type": "string"
          }
        }
      },
      "ModelSettings": {
        "type": "object",
        "properties": {
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          },
          "minLossThreshold": {
            "type": "number",
            "format": "float"
          },
          "numPeriods": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Value": {
        "type": "object",
        "properties": {
          "returnPeriods": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "positionValues": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "EPInterpolateResult": {
        "type": "object",
        "properties": {
          "returnPeriod": {
            "type": "number",
            "format": "double"
          },
          "criticalProbability": {
            "type": "number",
            "format": "double"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Result"
            }
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "perspective": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Values"
            }
          }
        }
      },
      "Values": {
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string"
          },
          "metricValue": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EventLossItem": {
        "type": "object",
        "properties": {
          "anlsid": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sourceid": {
            "type": "integer",
            "format": "int32"
          },
          "eventid": {
            "type": "integer",
            "format": "int32"
          },
          "perspvalue": {
            "type": "number",
            "format": "double"
          },
          "perspcode": {
            "type": "string"
          },
          "stddevi": {
            "type": "number",
            "format": "double"
          },
          "stddevc": {
            "type": "number",
            "format": "double"
          },
          "expvalue": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "peril": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "oepWUC": {
            "type": "number",
            "format": "double"
          },
          "exposureNumber": {
            "type": "string"
          }
        }
      },
      "MetricsResult": {
        "type": "object",
        "properties": {
          "metricType": {
            "type": "string",
            "enum": ["STATS", "ELT", "EP"]
          },
          "granularities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["POLICY"]
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "KeyLossItem": {
        "type": "object",
        "properties": {
          "eventid": {
            "type": "integer",
            "format": "int32"
          },
          "stddev": {
            "type": "number",
            "format": "double"
          },
          "meanloss": {
            "type": "number",
            "format": "double"
          },
          "cv": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Pate": {
        "required": ["attachLevel", "cedant", "treatyNumber", "treatyType"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "treatyName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
            }
          },
          "aggregateDeductible": {
            "type": "number",
            "format": "double"
          },
          "aggregateLimit": {
            "type": "number",
            "format": "double"
          },
          "lossOccurrences": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossOccurrence"
            }
          },
          "analysisId": {
            "type": "integer",
            "format": "int32"
          },
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "DELETE", "UPDATE", "COPY", "IMPORT"]
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PateSearchResult": {
        "type": "object",
        "properties": {
          "searchMatchingPateList": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Pate"
            }
          }
        }
      },
      "PeriodLossItem": {
        "type": "object",
        "properties": {
          "periodid": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "eventid": {
            "type": "integer",
            "format": "int32"
          },
          "eventdate": {
            "type": "string"
          },
          "lossdate": {
            "type": "string"
          },
          "perspvalue": {
            "type": "number",
            "format": "double"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "region": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "exposureNumber": {
            "type": "string"
          }
        }
      },
      "EntityItem": {
        "type": "object",
        "properties": {
          "domainName": {
            "type": "string"
          },
          "tableSpace": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          },
          "dataOwnedBy": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "EntityResult": {
        "type": "object",
        "properties": {
          "entitiesTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "entityItems": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/EntityItem"
          }
        }
      },
      "SampledLossItem": {
        "type": "object",
        "properties": {
          "cedant": {
            "type": "string"
          },
          "lob": {
            "type": "string"
          },
          "losstype": {
            "type": "string"
          },
          "sampleid": {
            "type": "integer",
            "format": "int32"
          },
          "eventid": {
            "type": "integer",
            "format": "int32"
          },
          "loss": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StatisticsItem": {
        "type": "object",
        "properties": {
          "anlsid": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "perspcode": {
            "type": "string"
          },
          "eptype": {
            "type": "string"
          },
          "purepremium": {
            "type": "number",
            "format": "double"
          },
          "totalstddev": {
            "type": "number",
            "format": "double"
          },
          "netpurepremium": {
            "type": "number",
            "format": "double"
          },
          "activation": {
            "type": "number",
            "format": "double"
          },
          "exhaustion": {
            "type": "number",
            "format": "double"
          },
          "totlossratio": {
            "type": "number",
            "format": "double"
          },
          "limit": {
            "type": "number",
            "format": "double"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "netstddev": {
            "type": "number",
            "format": "double"
          },
          "exhaustallreinstatements": {
            "type": "number",
            "format": "double"
          },
          "exposurenumber": {
            "type": "string"
          }
        }
      },
      "Treaty": {
        "required": ["attachLevel", "cedant", "treatyNumber", "treatyType"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "treatyName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
            }
          },
          "aggregateDeductible": {
            "type": "number",
            "format": "double"
          },
          "aggregateLimit": {
            "type": "number",
            "format": "double"
          },
          "lossOccurrences": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossOccurrence"
            }
          }
        }
      },
      "TreatySearchResult": {
        "type": "object",
        "properties": {
          "searchMatchingTreatyList": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Treaty"
            }
          }
        }
      },
      "MapPerspectiveInput": {
        "required": [
          "mapPerspectiveOption",
          "newPerspective",
          "sourcePerspective"
        ],
        "type": "object",
        "properties": {
          "analysisName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string",
            "description": "The name for the analysis with mapped perspective. can only contain characters only 0-9, A-Z, a-z, underscore(_), hyphen(-), colon(:), and space. Can't start or end with hyphen, space, or colon, and can't include multiple consecutive hyphens (--)",
            "example": "NewAnalysisName"
          },
          "sourcePerspective": {
            "type": "string"
          },
          "newPerspective": {
            "type": "string"
          },
          "mapPerspectiveOption": {
            "type": "string",
            "enum": ["INCLUDE_DOWNSTREAM", "DELETE_OTHER", "SELECTED_ONLY"]
          }
        }
      },
      "PateInput": {
        "type": "object",
        "properties": {
          "insert": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Pate"
            }
          },
          "update": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Pate"
            }
          },
          "delete": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Pate"
            }
          }
        }
      },
      "ClimateChangeInput": {
        "type": "object",
        "properties": {
          "analysisName": {
            "type": "string",
            "description": "Name of the final climate change analysis. Can be alpha numeric string.",
            "example": "ABC Climate"
          },
          "climateConditionView": {
            "type": "string",
            "description": "allowableValues = {Combined All Parameters, Frequency and Intensity Only, Default}",
            "example": "Combined All Parameters"
          },
          "referenceRateSchemeId": {
            "type": "integer",
            "description": "Rate scheme Id for a particular model. allowableValues = {190 ,202 ,84 ,9}.  \n 190 ---> RMS 2019 Historical Event Rates,  \n 202 ---> RMS 2021 Historical Event Rates,  \n 84  ---> RMS 2015 Stochastic Event Rates,  \n 9 ---> RMS v2.0 Default Rates",
            "format": "int32",
            "example": 190
          },
          "rcpScenario": {
            "type": "number",
            "description": "RCP scenario needed for this climate change analysis. allowableValues = {2.6, 4.5, 6.0, 8.5}",
            "format": "double",
            "example": 2.6
          },
          "timeHorizon": {
            "type": "integer",
            "description": "Time Horizon for this climate change analysis. Can only be between 2020 and 2100 in 5 year increment.  \n Example - 2020, 2025, 2030, 2035, ....",
            "format": "int32",
            "example": 2025
          },
          "is2CWarmingScenario": {
            "type": "boolean"
          }
        }
      },
      "SimulateELTToPLTInput": {
        "required": ["simulationPeriods", "simulationSetId"],
        "type": "object",
        "properties": {
          "regionCode": {
            "type": "string"
          },
          "perilCode": {
            "type": "string"
          },
          "engineVersion": {
            "type": "string"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "simulationSetId": {
            "type": "integer",
            "format": "int32"
          },
          "simulationSetName": {
            "type": "string"
          },
          "simulationPeriods": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RenameAnalysisInput": {
        "type": "object",
        "properties": {
          "newAnalysisName": {
            "type": "string"
          }
        }
      },
      "AnalysisGroupWithSimulation": {
        "required": [
          "analysisIds",
          "currency",
          "name",
          "numOfSimulations",
          "propagateDetailedLosses",
          "simulateToPLT"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "reportingWindowStart": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "numOfSimulations": {
            "type": "integer",
            "format": "int64"
          },
          "simulationWindowStart": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "simulationWindowEnd": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "simulateToPLT": {
            "type": "boolean"
          },
          "propagateDetailedLosses": {
            "type": "boolean"
          },
          "regionPerilSimulationSet": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
            }
          },
          "minimizedRegionPerilSimulationSet": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          }
        }
      },
      "RegionPerilSimulation": {
        "required": ["simulationPeriods", "simulationSetId"],
        "type": "object",
        "properties": {
          "perilCode": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "regionCode": {
            "type": "string"
          },
          "simulationSetId": {
            "type": "integer",
            "format": "int64"
          },
          "simulationPeriods": {
            "type": "integer",
            "format": "int64"
          },
          "modelRegionCode": {
            "type": "string"
          },
          "eltAnalysisId": {
            "type": "integer",
            "format": "int64"
          },
          "engineVersion": {
            "type": "string"
          }
        }
      },
      "InconsistentField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "treatyIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "InconsistentTreaties": {
        "type": "object",
        "properties": {
          "treaties": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatyWithAnalysisInfoV2"
            }
          },
          "inconsistentFields": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/InconsistentField"
            }
          }
        }
      },
      "TreatyWithAnalysisInfoV2": {
        "required": ["attachLevel", "cedant", "treatyNumber", "treatyType"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "treatyName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
            }
          },
          "aggregateDeductible": {
            "type": "number",
            "format": "double"
          },
          "aggregateLimit": {
            "type": "number",
            "format": "double"
          },
          "lossOccurrences": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossOccurrence"
            }
          },
          "analysisId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisName": {
            "type": "string"
          },
          "regionPerilId": {
            "type": "integer",
            "format": "int32"
          },
          "regionPeril": {
            "type": "string"
          },
          "lossOccurrenceTime": {
            "type": "integer",
            "format": "int32"
          },
          "lossOccurrenceRadius": {
            "type": "integer",
            "format": "int32"
          },
          "radiusUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "radiusUnit": {
            "type": "string"
          },
          "multiLossOccurrence": {
            "type": "string"
          }
        }
      },
      "AnalysesItemV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "runDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rdmName": {
            "type": "string"
          },
          "sourceUris": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RiskdataResource"
            }
          },
          "regroup": {
            "type": "integer",
            "format": "int32"
          },
          "engineVersion": {
            "type": "string"
          },
          "groupType": {
            "type": "string"
          },
          "cedant": {
            "type": "string"
          },
          "lob": {
            "type": "string"
          },
          "jobUri": {
            "type": "integer",
            "format": "int64"
          },
          "isGroup": {
            "type": "boolean"
          },
          "modelProfile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "outputProfile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "engine": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "type": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "subPeril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "region": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "lossAmplification": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mode": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "insuranceType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "vulnerabilityCurve": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "user": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eventRateSchemes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysisCurrency"
          },
          "engineSubType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "framework": {
            "type": "string"
          },
          "simulationSetId": {
            "type": "integer",
            "format": "int64"
          },
          "simulationPeriods": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AnalysisCurrency": {
        "required": ["asOfDate", "code", "scheme", "vintage"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string"
          },
          "vintage": {
            "type": "string"
          }
        }
      },
      "AnalysisSearchResultV2": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AnalysesItemV2"
        }
      },
      "AnalysisRegionSearchResultV2": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionItemV2"
        }
      },
      "RegionItemV2": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "subRegion": {
            "type": "string"
          },
          "peril": {
            "type": "string"
          },
          "rateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "framework": {
            "type": "string"
          },
          "analysisId": {
            "type": "integer",
            "format": "int32"
          },
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "petId": {
            "type": "integer",
            "format": "int32"
          },
          "numSamples": {
            "type": "integer",
            "format": "int32"
          },
          "periods": {
            "type": "integer",
            "format": "int32"
          },
          "applyContractFlag": {
            "type": "boolean"
          },
          "engineVersion": {
            "type": "string"
          }
        }
      },
      "ExposureMetricRequest": {
        "required": ["dataSourceName"],
        "type": "object",
        "properties": {
          "dataSourceName": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "portfolios": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CopyAccountInfo": {
        "required": ["newNumber"],
        "type": "object",
        "properties": {
          "newNumber": {
            "type": "string"
          },
          "newName": {
            "type": "string"
          },
          "linked": {
            "type": "boolean"
          }
        }
      },
      "Account": {
        "required": ["number"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "underwriter": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/UnderWriter"
          },
          "branch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "userId3": {
            "type": "string"
          },
          "userId4": {
            "type": "string"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["InActive", "Active"]
          },
          "linkId": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "CustomData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Branch": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UnderWriter": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "LayerInfo": {
        "required": ["engineType", "name", "type", "version"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "engineType": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "layerOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AccountMetrics": {
        "type": "object",
        "properties": {
          "totalLocations": {
            "type": "integer",
            "format": "int32"
          },
          "totalPolicies": {
            "type": "integer",
            "format": "int32"
          },
          "totalEmployees": {
            "type": "number",
            "format": "double"
          },
          "totalInsuredValue": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Amount"
          },
          "perilsExposed": {
            "type": "string"
          },
          "linkedAccount": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Account"
          },
          "linkedDatasource": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "underwriter": {
            "type": "string"
          },
          "producer": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "cedant": {
            "type": "string"
          },
          "geocodeVersion": {
            "type": "string"
          },
          "hazardVersion": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          }
        }
      },
      "Amount": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string"
          }
        }
      },
      "Coordinate": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "streetAddress": {
            "type": "string"
          },
          "geoResolutionCode": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "CountryMetrics": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "locationCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MetricRequest": {
        "type": "object",
        "properties": {
          "granularity": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metricType": {
            "type": "string"
          },
          "perspective": {
            "type": "string"
          },
          "includeIntermediateSums": {
            "type": "boolean"
          }
        }
      },
      "OutputProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "metricRequests": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/MetricRequest"
            }
          }
        }
      },
      "ProcessInput": {
        "required": ["currency", "edm", "outputSetting"],
        "type": "object",
        "properties": {
          "exposureType": {
            "type": "string",
            "enum": [
              "PORTFOLIO",
              "ACCOUNT",
              "LOCATION",
              "POLICY",
              "STEP_POLICY",
              "TREATY",
              "AGGPORTFOLIO"
            ]
          },
          "edm": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          },
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "treaties": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "jobName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "outputSetting": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OutputProfile"
          },
          "outputProfile": {
            "type": "string"
          }
        }
      },
      "AccountSearchItem": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "cedantName": {
            "type": "string"
          },
          "producerName": {
            "type": "string"
          },
          "underwriterName": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "numLocations": {
            "type": "integer",
            "format": "int32"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "userId3": {
            "type": "string"
          },
          "userId4": {
            "type": "string"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "geocodeVersion": {
            "type": "string"
          },
          "hazardVersion": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          },
          "jobStatus": {
            "type": "string"
          },
          "jobStartDate": {
            "type": "string"
          },
          "jobEndDate": {
            "type": "string"
          },
          "resultsCount": {
            "type": "integer",
            "format": "int32"
          },
          "policyExpirationDate": {
            "type": "string"
          },
          "policyExpirationStatus": {
            "type": "string"
          },
          "totalTIV": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "AccountSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountSearchItem"
        }
      },
      "Band": {
        "required": ["greaterThanOrEqualTo"],
        "type": "object",
        "properties": {
          "greaterThanOrEqualTo": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "lessThan": {
            "maximum": 10000,
            "type": "number",
            "format": "double"
          }
        }
      },
      "CustomBand": {
        "required": ["hazard"],
        "type": "object",
        "properties": {
          "hazard": {
            "type": "string"
          },
          "bands": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Band"
            }
          }
        }
      },
      "ExposureSummaryReportInput": {
        "required": ["perilList"],
        "type": "object",
        "properties": {
          "perilList": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reportName": {
            "type": "string"
          },
          "customBands": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/CustomBand"
            }
          }
        }
      },
      "LocationConditionValidationInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "policyNumber": {
            "type": "string"
          },
          "locationNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "condition1": {
            "type": "string"
          },
          "condition2": {
            "type": "string"
          }
        }
      },
      "CopyAggregatePortfolioInfo": {
        "required": ["newName", "newNumber"],
        "type": "object",
        "properties": {
          "newNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "newName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "AggregatePortfolio": {
        "required": ["cedant", "name", "number", "peril"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "source": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "createDate": {
            "type": "string"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "AggregatePortfolioSearchItem": {
        "required": ["cedant", "name", "number", "peril"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "source": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "createDate": {
            "type": "string"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ownerName": {
            "type": "string"
          }
        }
      },
      "AggregatePortfolioMetrics": {
        "type": "object",
        "properties": {
          "totalAggregateExposures": {
            "type": "integer",
            "format": "int32"
          },
          "perilsExposed": {
            "type": "string"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "cedant": {
            "type": "string"
          }
        }
      },
      "AggregatePortfolioCountryMetrics": {
        "type": "object",
        "properties": {
          "countryMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "AlmProfileInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          },
          "profileType": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "peril": {
            "type": "string"
          },
          "rmsLob": {
            "type": "string"
          },
          "geoRes": {
            "type": "string"
          },
          "trackingId": {
            "type": "string"
          },
          "descFin": {
            "type": "string"
          },
          "descReg": {
            "type": "string"
          },
          "descInv": {
            "type": "string"
          },
          "dataTab": {
            "type": "string"
          },
          "softwareVersionCode": {
            "type": "string"
          }
        }
      },
      "DefaultAlmProfilesResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AlmProfileInfo"
            }
          }
        }
      },
      "AlmProcessInput": {
        "required": ["almProfileIds", "currency", "edm"],
        "type": "object",
        "properties": {
          "exposureType": {
            "type": "string",
            "enum": [
              "PORTFOLIO",
              "ACCOUNT",
              "LOCATION",
              "POLICY",
              "STEP_POLICY",
              "TREATY",
              "AGGPORTFOLIO"
            ]
          },
          "edm": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          },
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "treaties": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "jobName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "almProfileIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "analysisMode": {
            "type": "string"
          },
          "portEltByGeoidByLobByCedant": {
            "type": "boolean"
          },
          "portStatsByGeoidByLobByCedant": {
            "type": "boolean"
          },
          "portStatsByGeoidByCedant": {
            "type": "boolean"
          }
        }
      },
      "AggregateExposuresList": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "lobs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resolutionValues": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AlmErrorMessage"
            }
          },
          "countryCode": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "dependencyResolution": {
            "type": "string"
          }
        }
      },
      "AlmErrorMessage": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string"
          },
          "column": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "AggregatePortfolioSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregatePortfolioSearchItem"
        }
      },
      "BranchSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
        }
      },
      "PolicyCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isPredefined": {
            "type": "boolean"
          },
          "limit": {
            "type": "number",
            "format": "double"
          },
          "deductible": {
            "type": "number",
            "format": "double"
          },
          "deductibleType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "conditionType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "parentCondition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "policyNumber": {
            "type": "string"
          },
          "policyConditionCriterias": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyConditionCriteria"
            }
          },
          "percentOfLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "PolicyConditionCriteria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "logic": {
            "type": "string"
          },
          "openPar": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "closePar": {
            "type": "string"
          }
        }
      },
      "BatchRequest": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "Facultative": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^\\w([\\w-]*\\w|)$",
            "type": "string"
          },
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "FacultativeSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Facultative"
        }
      },
      "ArithmeticExpression": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "expression": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
              },
              "arithmeticPairs": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ArithmeticPair"
                }
              }
            }
          }
        ]
      },
      "ArithmeticPair": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": ["ADD", "SUBTRACT", "MULTIPLY", "DIVIDE"]
          },
          "expression": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          }
        }
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
          },
          "operator": {
            "type": "string",
            "enum": ["EQUAL", "ADD", "SUBTRACT", "MULTIPLY", "DIVIDE"]
          },
          "expression": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          }
        }
      },
      "BooleanCondition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          {
            "type": "object",
            "properties": {
              "condition": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
              },
              "booleanPairs": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BooleanPair"
                }
              }
            }
          }
        ]
      },
      "BooleanPair": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": ["AND", "OR"]
          },
          "condition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          }
        }
      },
      "BooleanValue": {
        "type": "string",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          }
        ],
        "enum": ["true", "false"]
      },
      "BulkEdit": {
        "required": ["editType", "exposureId", "exposureType", "updates"],
        "type": "object",
        "properties": {
          "exposureId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "editType": {
            "type": "string",
            "enum": ["POLICY", "LOCATION", "ACCOUNT"]
          },
          "editQuery": {
            "type": "string"
          },
          "exposureType": {
            "type": "string",
            "enum": [
              "PORTFOLIO",
              "ACCOUNT",
              "LOCATION",
              "POLICY",
              "STEP_POLICY",
              "TREATY",
              "AGGPORTFOLIO"
            ]
          },
          "editCondition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          "updates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updateConditions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Assignment"
            }
          },
          "outputClause": {
            "type": "string"
          }
        }
      },
      "ChildIdentifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "columnName": {
                "type": "string"
              },
              "tableName": {
                "type": "string"
              },
              "castTo": {
                "type": "string",
                "enum": [
                  "INTEGER",
                  "STRING",
                  "STATUS",
                  "LIST",
                  "TIMESTAMP",
                  "OPERATOR",
                  "STATUS_ICON",
                  "LINK",
                  "FLOAT",
                  "BOOLEAN",
                  "DATE_ONLY",
                  "PERCENT",
                  "OBJECT",
                  "LONG",
                  "NULL"
                ]
              },
              "clearDataResolution": {
                "type": "boolean"
              },
              "dataResolutionUS": {
                "type": "boolean"
              },
              "validation": {
                "type": "string"
              },
              "filterable": {
                "type": "boolean"
              },
              "foreignKeyColumnName": {
                "type": "string"
              },
              "subqueryTableName": {
                "type": "string"
              },
              "subqueryIdentifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              }
            }
          }
        ]
      },
      "Condition": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "DateOnlyValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "year": {
                "type": "integer",
                "format": "int32"
              },
              "month": {
                "type": "integer",
                "format": "int32"
              },
              "dayOfMonth": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DecimalValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              }
            }
          }
        ]
      },
      "Expression": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "enum": [
              "INTEGER",
              "STRING",
              "STATUS",
              "LIST",
              "TIMESTAMP",
              "OPERATOR",
              "STATUS_ICON",
              "LINK",
              "FLOAT",
              "BOOLEAN",
              "DATE_ONLY",
              "PERCENT",
              "OBJECT",
              "LONG",
              "NULL"
            ]
          },
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ForeignKeyIdentifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "columnName": {
                "type": "string"
              },
              "tableName": {
                "type": "string"
              },
              "castTo": {
                "type": "string",
                "enum": [
                  "INTEGER",
                  "STRING",
                  "STATUS",
                  "LIST",
                  "TIMESTAMP",
                  "OPERATOR",
                  "STATUS_ICON",
                  "LINK",
                  "FLOAT",
                  "BOOLEAN",
                  "DATE_ONLY",
                  "PERCENT",
                  "OBJECT",
                  "LONG",
                  "NULL"
                ]
              },
              "clearDataResolution": {
                "type": "boolean"
              },
              "dataResolutionUS": {
                "type": "boolean"
              },
              "validation": {
                "type": "string"
              },
              "filterable": {
                "type": "boolean"
              },
              "primaryKeyColumnName": {
                "type": "string"
              },
              "subqueryIdentifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              }
            }
          }
        ]
      },
      "Identifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "columnName": {
                "type": "string"
              },
              "tableName": {
                "type": "string"
              },
              "castTo": {
                "type": "string",
                "enum": [
                  "INTEGER",
                  "STRING",
                  "STATUS",
                  "LIST",
                  "TIMESTAMP",
                  "OPERATOR",
                  "STATUS_ICON",
                  "LINK",
                  "FLOAT",
                  "BOOLEAN",
                  "DATE_ONLY",
                  "PERCENT",
                  "OBJECT",
                  "LONG",
                  "NULL"
                ]
              },
              "clearDataResolution": {
                "type": "boolean"
              },
              "dataResolutionUS": {
                "type": "boolean"
              },
              "validation": {
                "type": "string"
              },
              "filterable": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "InListCondition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              },
              "not": {
                "type": "boolean"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ValueObject"
                }
              }
            }
          }
        ]
      },
      "IntegerValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "LongValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "MatchingCondition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              },
              "not": {
                "type": "boolean"
              },
              "pattern": {
                "type": "string"
              }
            }
          }
        ]
      },
      "NullValue": {
        "type": "string",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          }
        ],
        "enum": ["NULL"]
      },
      "RelationalCondition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUAL",
                  "NOT_EQUAL",
                  "LESS_THAN",
                  "GREATER_THAN",
                  "LTE",
                  "GTE"
                ]
              },
              "expression": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
              }
            }
          }
        ]
      },
      "StringValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SubqueryCondition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Condition"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Identifier"
              },
              "columnName": {
                "type": "string"
              },
              "tableName": {
                "type": "string"
              },
              "conditionColumnName": {
                "type": "string"
              },
              "conditionValue": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TimestampValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "epochSeconds": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ValueObject": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          }
        }
      },
      "YearBuiltIdentifier": {
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "columnName": {
                "type": "string"
              },
              "tableName": {
                "type": "string"
              },
              "validation": {
                "type": "string"
              },
              "castTo": {
                "type": "string",
                "enum": [
                  "INTEGER",
                  "STRING",
                  "STATUS",
                  "LIST",
                  "TIMESTAMP",
                  "OPERATOR",
                  "STATUS_ICON",
                  "LINK",
                  "FLOAT",
                  "BOOLEAN",
                  "DATE_ONLY",
                  "PERCENT",
                  "OBJECT",
                  "LONG",
                  "NULL"
                ]
              },
              "clearDataResolution": {
                "type": "boolean"
              },
              "dataResolutionUS": {
                "type": "boolean"
              },
              "filterable": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "LineOfBusinessSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
        }
      },
      "BuildingAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "yearBuilt": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "roofDeckType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofDeckResistanceField": {
            "type": "number",
            "format": "double"
          },
          "windowGlassdoorProtectionType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windowGlassdoorThickness": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windowGlassdoorDoublepane": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windowGlassdoorProtectionAdequacy": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofCoverType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "rooftopEquipment": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "skylightAreaPercent": {
            "type": "number",
            "format": "double"
          },
          "dockDoorAreaPercent": {
            "type": "number",
            "format": "double"
          },
          "dockDoorPressureResistance": {
            "type": "number",
            "format": "double"
          },
          "skylightImpactResistance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofCoverResistanceCorner": {
            "type": "number",
            "format": "double"
          },
          "roofSlope": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flashingPulloutResistance": {
            "type": "number",
            "format": "double"
          },
          "missileExposure": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofCoverResistancePerimeter": {
            "type": "number",
            "format": "double"
          },
          "roofDeckResistancePerimeter": {
            "type": "number",
            "format": "double"
          },
          "claddingPressureResistance": {
            "type": "number",
            "format": "double"
          },
          "windowGlassdoorGlassType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "claddingType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windowGlassdoorAreaPercent": {
            "type": "number",
            "format": "double"
          },
          "roofDeckResistanceCorner": {
            "type": "number",
            "format": "double"
          },
          "roofCoverResistanceField": {
            "type": "number",
            "format": "double"
          },
          "roofArea": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "area": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "buildingId": {
            "type": "string"
          },
          "buildingName": {
            "type": "string"
          },
          "addressType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "country": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "countryScheme": {
            "type": "string"
          },
          "countryGeoId": {
            "type": "integer",
            "format": "int32"
          },
          "countryRmsCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "addressText": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "cityGeoId": {
            "type": "integer",
            "format": "int64"
          },
          "postalCode": {
            "type": "string"
          },
          "postalGeoId": {
            "type": "integer",
            "format": "int64"
          },
          "block": {
            "type": "string"
          },
          "blockGroup": {
            "type": "string"
          },
          "locationCode": {
            "type": "string"
          },
          "locationCodeGeoId": {
            "type": "integer",
            "format": "int64"
          },
          "parcelNumber": {
            "type": "string"
          },
          "subLocality": {
            "type": "string"
          },
          "geoResolutionConfidence": {
            "type": "number",
            "format": "double"
          },
          "geoAccuracyBuffer": {
            "type": "number",
            "format": "double"
          },
          "geoProductVersion": {
            "type": "string"
          },
          "geoLocationCode": {
            "type": "string"
          },
          "geoMatchCode": {
            "type": "string"
          },
          "geoDataSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "geoResolutionCode": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "geoDataSourceVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "geoDateTime": {
            "type": "string"
          },
          "createDateTime": {
            "type": "string"
          },
          "updateDateTime": {
            "type": "string"
          },
          "admin1Code": {
            "type": "string"
          },
          "admin1GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "admin1Name": {
            "type": "string"
          },
          "admin2Code": {
            "type": "string"
          },
          "admin2GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "admin2Name": {
            "type": "string"
          },
          "admin3Code": {
            "type": "string"
          },
          "admin3GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "admin3Name": {
            "type": "string"
          },
          "admin4Code": {
            "type": "string"
          },
          "admin4GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "admin4Name": {
            "type": "string"
          },
          "admin5Code": {
            "type": "string"
          },
          "admin5GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "admin5Name": {
            "type": "string"
          },
          "zone1GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "zone2GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "zone3GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "zone4GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "zone5GeoId": {
            "type": "integer",
            "format": "int64"
          },
          "zone1": {
            "type": "string"
          },
          "zone2": {
            "type": "string"
          },
          "zone3": {
            "type": "string"
          },
          "zone3Name": {
            "type": "string"
          },
          "zone4Name": {
            "type": "string"
          },
          "zone5Name": {
            "type": "string"
          },
          "zone3Code": {
            "type": "string"
          },
          "zone4Code": {
            "type": "string"
          },
          "zone5Code": {
            "type": "string"
          },
          "ugid": {
            "type": "string"
          }
        }
      },
      "FacReinsurer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Location": {
        "required": ["address", "property"],
        "type": "object",
        "properties": {
          "esdbBuildingAttribute": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBuildingAttribute"
          },
          "property": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Property"
          },
          "address": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Address"
          },
          "biDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBiDetail"
          },
          "eqDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationEqDetail"
          },
          "wsDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWsDetail"
          },
          "toDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationToDetail"
          },
          "flDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFlDetail"
          },
          "frDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFrDetail"
          },
          "trDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationTrDetail"
          },
          "buildingAttribute": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCoverage"
            }
          },
          "reinsuranceCessions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
            }
          },
          "wcDetails": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWcDetail"
            }
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tiv": {
            "type": "number",
            "format": "double"
          },
          "riskAssessorCurves": {
            "type": "string"
          },
          "locationConditions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCondition"
            }
          },
          "maxCvgBldgValuation": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LocationBiDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "redundancy": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "siWaitingPeriod": {
            "type": "number",
            "format": "double"
          },
          "siLimit": {
            "type": "number",
            "format": "double"
          },
          "preparedness": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "serviceInterruption": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "LocationBuildingAttribute": {
        "type": "object",
        "properties": {
          "buildingId": {
            "type": "string"
          },
          "buildingNumber": {
            "type": "string"
          },
          "streetPrefix": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "streetType": {
            "type": "string"
          },
          "streetSuffix": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "buildingClassScheme": {
            "type": "string",
            "enum": [
              "RMS",
              "ATC",
              "ISO",
              "FIRE",
              "RMS_IND",
              "JPBLDG",
              "EURO",
              "RMS_BR",
              "RMS_OP",
              "USER"
            ]
          },
          "occupancyTypeScheme": {
            "type": "string",
            "enum": [
              "ATC",
              "SIC",
              "NAICS",
              "NCCI",
              "ISO",
              "IBC",
              "RMS_IND",
              "JPOCC",
              "EURO",
              "RMS_BR",
              "RMS_OP",
              "WOCC"
            ]
          },
          "derivedStories": {
            "type": "integer",
            "format": "int32"
          },
          "areaUnit": {
            "type": "string",
            "enum": ["SqFeet", "SqMeter"]
          },
          "yearRange": {
            "type": "integer",
            "format": "int32"
          },
          "exterior": {
            "type": "string"
          },
          "fireproof": {
            "type": "string"
          },
          "esdbBuildingName": {
            "type": "string"
          },
          "esdbBuildingClass": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "esdbOccupancyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "esdbBldgHeight": {
            "type": "number",
            "format": "double"
          },
          "esdbStories": {
            "type": "integer",
            "format": "int32"
          },
          "esdbSquareFootage": {
            "type": "number",
            "format": "double"
          },
          "esdbYearBuilt": {
            "type": "string"
          }
        }
      },
      "LocationCondition": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "conditionId": {
            "type": "integer",
            "format": "int32"
          },
          "isIncluded": {
            "type": "string",
            "enum": ["NotIncluded", "Included", "UserIncluded"]
          }
        }
      },
      "LocationCoverage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqslModifier": {
            "type": "integer",
            "format": "int32"
          },
          "lossType": {
            "type": "string",
            "enum": ["Building", "Contents", "BI", "CombinedCvg"]
          },
          "percentSprinkler": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "biPoi": {
            "type": "number",
            "format": "double"
          },
          "deductible": {
            "type": "number",
            "format": "double"
          },
          "coverageModifier": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "accumulation": {
            "type": "string",
            "enum": ["Building", "Contents", "Bi", "Combined"]
          },
          "limit": {
            "type": "number",
            "format": "double"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "percentageLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "waitingPeriod": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LocationEqDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "completionDate": {
            "type": "string"
          },
          "yearSprinkler": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "atcClass": {
            "type": "string"
          },
          "isoClass": {
            "type": "string"
          },
          "fireClass": {
            "type": "string"
          },
          "rmsClass": {
            "type": "string"
          },
          "userClass": {
            "type": "string"
          },
          "atcOccupancy": {
            "type": "string"
          },
          "isoOccupancy": {
            "type": "string"
          },
          "sicOccupancy": {
            "type": "string"
          },
          "ibcOccupancy": {
            "type": "string"
          },
          "userOccupancy": {
            "type": "string"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "secondarySupply": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqslSusceptibility": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "sprinklerType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "baseIsolation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "bldgExterior": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladding": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "constructQuality": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ductility": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "duress": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "enggFoundation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frameBolt": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "hazardExposed": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "internalMasonaryPart": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "longSpan": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecEquip": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ornamentation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "overhangProfile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "preFabrication": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "pounding": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "redundancy": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "shapeConfigure": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "shortColumn": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "sidingType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "storyProfile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "structureUpgrade": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tank": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tiltupRetrofit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "torsion": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "urmRetrofit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wallsBrace": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tsDebris": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tsScour": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tsSafeDist": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tsProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "urmChimney": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "builtOnSlope": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "alquistPreoloZone": {
            "type": "integer",
            "format": "int32"
          },
          "soil": {
            "type": "number",
            "format": "double"
          },
          "landslide": {
            "type": "number",
            "format": "double"
          },
          "liquefaction": {
            "type": "number",
            "format": "double"
          },
          "biZone": {
            "type": "integer",
            "format": "int32"
          },
          "landslideMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "liquefactionMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "soilMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "fireLossMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "landslideCov": {
            "type": "number",
            "format": "double"
          },
          "liquefactionCov": {
            "type": "number",
            "format": "double"
          },
          "soilCov": {
            "type": "number",
            "format": "double"
          },
          "fireLossCov": {
            "type": "number",
            "format": "float"
          },
          "soilPeriod": {
            "type": "number",
            "format": "double"
          },
          "soilThickness": {
            "type": "number",
            "format": "double"
          },
          "fire1": {
            "type": "number",
            "format": "double"
          },
          "fire2": {
            "type": "number",
            "format": "double"
          },
          "fire3": {
            "type": "number",
            "format": "double"
          },
          "fire4": {
            "type": "number",
            "format": "double"
          },
          "fire5": {
            "type": "number",
            "format": "double"
          },
          "fire6": {
            "type": "number",
            "format": "double"
          },
          "fire7": {
            "type": "number",
            "format": "double"
          },
          "fire8": {
            "type": "number",
            "format": "double"
          },
          "mmi100": {
            "type": "number",
            "format": "double"
          },
          "mmi200": {
            "type": "number",
            "format": "double"
          },
          "mmi250": {
            "type": "number",
            "format": "double"
          },
          "mmi475": {
            "type": "number",
            "format": "double"
          },
          "avgSlope": {
            "type": "number",
            "format": "double"
          },
          "distFault1": {
            "type": "number",
            "format": "double"
          },
          "apMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mmiMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "distSinkhole": {
            "type": "number",
            "format": "double"
          },
          "distMine": {
            "type": "number",
            "format": "double"
          },
          "sinkholeZone": {
            "type": "integer",
            "format": "int32"
          },
          "soilVs": {
            "type": "number",
            "format": "double"
          },
          "soilVsMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "basinLocId": {
            "type": "integer",
            "format": "int32"
          },
          "di": {
            "type": "number",
            "format": "double"
          },
          "critd": {
            "type": "number",
            "format": "double"
          },
          "n160CS": {
            "type": "number",
            "format": "double"
          },
          "t15": {
            "type": "number",
            "format": "double"
          },
          "wff": {
            "type": "number",
            "format": "double"
          },
          "distriv": {
            "type": "number",
            "format": "double"
          },
          "gwd": {
            "type": "number",
            "format": "double"
          },
          "dc": {
            "type": "number",
            "format": "double"
          },
          "liqcv": {
            "type": "number",
            "format": "double"
          },
          "hdLiqMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "phi": {
            "type": "number",
            "format": "double"
          },
          "rough": {
            "type": "number",
            "format": "double"
          },
          "ndvi": {
            "type": "number",
            "format": "double"
          },
          "cohes": {
            "type": "number",
            "format": "double"
          },
          "landcv": {
            "type": "number",
            "format": "double"
          },
          "hdLandMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "eqSlope": {
            "type": "number",
            "format": "double"
          },
          "elev": {
            "type": "number",
            "format": "double"
          },
          "cti": {
            "type": "number",
            "format": "double"
          },
          "precip": {
            "type": "number",
            "format": "double"
          },
          "topo": {
            "type": "number",
            "format": "double"
          },
          "hdSecMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "eqslInsurance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "LocationFlDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "completionDate": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "floodProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floorType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodMissile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "basement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodVulnerability": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecGround": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "foundation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "duration": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "contamination": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "velocity": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmVerticalExpDist": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flFoundationType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmStructureCondition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "bespokeFloodDefenseLevel": {
            "type": "number",
            "format": "double"
          },
          "bespokeFloodDefenseLevelType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodIndex": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "elevationCov": {
            "type": "number",
            "format": "double"
          },
          "annProb": {
            "type": "string"
          },
          "flZone": {
            "type": "string"
          },
          "bfe": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "panel": {
            "type": "string"
          },
          "cobra": {
            "type": "string"
          },
          "floodWay": {
            "type": "string"
          },
          "sfha": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "underRev": {
            "type": "string"
          },
          "panelDate": {
            "type": "string"
          },
          "buffer": {
            "type": "number",
            "format": "double"
          },
          "otherZones": {
            "type": "string"
          },
          "huZones": {
            "type": "string"
          },
          "mapSource": {
            "type": "integer",
            "format": "int32"
          },
          "flMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "finishedFloor": {
            "type": "number",
            "format": "double"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "basinName": {
            "type": "string"
          },
          "catchmentId": {
            "type": "integer",
            "format": "int32"
          },
          "floodDriver": {
            "type": "string"
          },
          "rms100Flzone": {
            "type": "integer",
            "format": "int32"
          },
          "rms500Flzone": {
            "type": "integer",
            "format": "int32"
          },
          "fl30YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl50YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl75YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl100YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl200YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl250YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl500YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl1000YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl10000YrRpDef": {
            "type": "integer",
            "format": "int32"
          },
          "fl30YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl50YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl75YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl100YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl200YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl250YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl500YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl1000YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "fl10000YrRpUndef": {
            "type": "integer",
            "format": "int32"
          },
          "hdFlMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flFfHag": {
            "type": "number",
            "format": "double"
          },
          "flFfHagFlag": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flZoneGroup": {
            "type": "integer",
            "format": "int32"
          },
          "flPerBasement": {
            "type": "number",
            "format": "double"
          },
          "protectedByLevee": {
            "type": "string"
          }
        }
      },
      "LocationFrDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "completionDate": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "fireDepartmentRatingModifier": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "fireDepartmentRating": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "sprinklerSystem": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "remoteAlarm": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frRoofCovering": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frRoofGeometry": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frRoofAge": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frRoofVent": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frEmberAccumulator": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frSuppression": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frPerformance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frSetback": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frExterior": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frResAppurtenant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frComAppurtenant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frDeckType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frHeatResistance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "frAccessibilityCondition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireHazard": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireSusceptibility": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireThreat": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireAreaDescription": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireSurfaceFuelType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireSpecialConditions": {
            "type": "string"
          },
          "wildFireLocalHistory": {
            "type": "number",
            "format": "double"
          },
          "wildFireNearbyHistory": {
            "type": "number",
            "format": "double"
          },
          "wildFireAccessibility": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireSlope": {
            "type": "integer",
            "format": "int32"
          },
          "wildFireSlopeFlag": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireFuel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireFuelFlag": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireDistanceToVeg": {
            "type": "integer",
            "format": "int32"
          },
          "wildFireDistanceToVegFlag": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireDistanceToVegUnit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wildFireSiteHazVer": {
            "type": "string"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "LocationToDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "fireClass": {
            "type": "string"
          },
          "rmsClass": {
            "type": "string"
          },
          "userClass": {
            "type": "string"
          },
          "atcOccupancy": {
            "type": "string"
          },
          "isoOccupancy": {
            "type": "string"
          },
          "userOccupancy": {
            "type": "string"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "architecture": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladRate": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "constructQuality": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "designCode": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "doorOpenings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "externalOrnament": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodVulnerability": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "foundation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "maintenance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecSide": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "otherOpenings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofAge": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofAnchor": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofEquipment": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofFrame": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofGeometry": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofParpet": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofSystem": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windMissile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windVulnerability": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "basement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecGround": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodMissiles": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodProtection": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "iceDamProtection": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "plumbingInsulation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "atticInsulation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofVentilation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "snowGuards": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "treeDensity": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "garaging": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "toPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "toProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "toSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "toSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "LocationTrDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "completionDate": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "trPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "trProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "trSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "trSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "LocationWcDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "totalPayroll": {
            "type": "number",
            "format": "double"
          },
          "totalNumEmployees": {
            "type": "number",
            "format": "double"
          },
          "numEmployeesShift1": {
            "type": "number",
            "format": "double"
          },
          "numEmployeesShift2": {
            "type": "number",
            "format": "double"
          },
          "numEmployeesShift3": {
            "type": "number",
            "format": "double"
          },
          "numEmployeesShift4": {
            "type": "number",
            "format": "double"
          },
          "calcNumEmployees": {
            "type": "number",
            "format": "double"
          },
          "emergencyProtection": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "hazardousMaterials": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wageRelativity": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "riskManagement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "employeeDensity": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "undMngtAdjustment": {
            "type": "number",
            "format": "double"
          },
          "groupNum": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "occupancyTypeScheme": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "occupancyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "maxEmployees": {
            "type": "number",
            "format": "double"
          },
          "shiftType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "uslh": {
            "type": "boolean"
          },
          "excessComp": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "LocationWsDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "yearUpgrade": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "completionDate": {
            "type": "string"
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          },
          "coastalSegment": {
            "type": "string"
          },
          "fireClass": {
            "type": "string"
          },
          "rmsClass": {
            "type": "string"
          },
          "userClass": {
            "type": "string"
          },
          "atcOccupancy": {
            "type": "string"
          },
          "isoOccupancy": {
            "type": "string"
          },
          "sicOccupancy": {
            "type": "string"
          },
          "ibcOccupancy": {
            "type": "string"
          },
          "userOccupancy": {
            "type": "string"
          },
          "siteLimit": {
            "type": "number",
            "format": "double"
          },
          "siteDeduct": {
            "type": "number",
            "format": "double"
          },
          "combinedLimit": {
            "type": "number",
            "format": "double"
          },
          "combinedDeduct": {
            "type": "number",
            "format": "double"
          },
          "percentageSiteLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "percentageCombinedLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseSiteDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isFranchiseCombinedDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isValid": {
            "type": "boolean"
          },
          "architecture": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladRate": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "cladType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "constructQuality": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "designCode": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "doorOpenings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "externalOrnament": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodVulnerability": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "foundation": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "maintenance": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecSide": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "otherOpenings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofAge": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofAnchor": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofEquipment": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofFrame": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofGeometry": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofParpet": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "roofSystem": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windMissile": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windVulnerability": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodMissiles": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodProtection": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "basement": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mechElecGround": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "flashing": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmVerticalExpDist": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmStructCondition": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmEquipBracing": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "ifmMissileExp": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsPackage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsProtect": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsSalvage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsSpecieStorage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "resistGarage": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsFloorType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "wsFoundationType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "contamination": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodDuration": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "garaging": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "treeDensity": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "depreciationAge": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "floodIndex": {
            "type": "number",
            "format": "double"
          },
          "distToCoast": {
            "type": "number",
            "format": "double"
          },
          "sysDistToCoast": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "manMadeCov": {
            "type": "number",
            "format": "double"
          },
          "naturalCov": {
            "type": "number",
            "format": "double"
          },
          "elevationCov": {
            "type": "number",
            "format": "double"
          },
          "distToCoastCov": {
            "type": "number",
            "format": "double"
          },
          "manMadeRoughness": {
            "type": "integer",
            "format": "int32"
          },
          "naturalRoughness": {
            "type": "integer",
            "format": "int32"
          },
          "windPool": {
            "type": "integer",
            "format": "int32"
          },
          "biZone": {
            "type": "integer",
            "format": "int32"
          },
          "topologyFeature": {
            "type": "integer",
            "format": "int32"
          },
          "elevationMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "naturalRoughnessMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "manMadeRoughnessMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "distToCoastMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windPoolMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "windExposure": {
            "type": "integer",
            "format": "int32"
          },
          "nfipRate": {
            "type": "number",
            "format": "double"
          },
          "nfipYear": {
            "type": "integer",
            "format": "int32"
          },
          "nfipYearMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "buildingElevation": {
            "type": "number",
            "format": "double"
          },
          "buildingElevationMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "rmsBuildingElevation": {
            "type": "number",
            "format": "double"
          },
          "rmsBuildingElevationMatch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "zoneGroup": {
            "type": "integer",
            "format": "int32"
          },
          "perBasement": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Property": {
        "required": ["locationNumber"],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "inceptDate": {
            "type": "string"
          },
          "yearBuilt": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "updateDate": {
            "type": "string"
          },
          "buildingClassScheme": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "buildingClass": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "occupancyTypeScheme": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "occupancyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "primaryLocId": {
            "type": "integer",
            "format": "int32"
          },
          "siteName": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "buildings": {
            "type": "integer",
            "format": "int32"
          },
          "stories": {
            "type": "integer",
            "format": "int32"
          },
          "floorOccupancy": {
            "type": "string"
          },
          "floorArea": {
            "type": "number",
            "format": "double"
          },
          "bldgHeight": {
            "type": "number",
            "format": "double"
          },
          "heightUnit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "slope": {
            "type": "number",
            "format": "double"
          },
          "otherZone": {
            "type": "string"
          },
          "huZone": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "areaUnit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "bldgValuation": {
            "type": "number",
            "format": "double"
          },
          "valuationDiffAmt": {
            "type": "number",
            "format": "double"
          },
          "valuationDiffPercent": {
            "type": "number",
            "format": "double"
          },
          "floodDefenseElevation": {
            "type": "number",
            "format": "double"
          },
          "floodDefenseElevationUnit": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "rentalPropertyIdentifier": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "mfdSubcategory": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "dwellTime": {
            "type": "integer",
            "format": "int32"
          },
          "userGroundElev": {
            "type": "number",
            "format": "double"
          },
          "userBfe": {
            "type": "number",
            "format": "double"
          },
          "floodDefHtAboveGrnd": {
            "type": "number",
            "format": "double"
          },
          "contentLossTrigger": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "isPrimaryBldg": {
            "type": "boolean"
          },
          "useContentValue": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "nship": {
            "type": "integer",
            "format": "int32"
          },
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "ReinsuranceCession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "exposureId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureType": {
            "type": "string",
            "enum": ["POL", "LOC"]
          },
          "type": {
            "type": "string",
            "enum": ["None", "Facultative", "Treaty"]
          },
          "facReinsurer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/FacReinsurer"
          },
          "treaty": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Treaty"
          },
          "layerNumber": {
            "type": "integer",
            "format": "int32"
          },
          "layerAmount": {
            "type": "number",
            "format": "double"
          },
          "excessAmount": {
            "type": "number",
            "format": "double"
          },
          "percentReinsurance": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "LocationSearchItem": {
        "type": "object",
        "properties": {
          "propertyReference": {
            "type": "string"
          },
          "location": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Location"
          }
        }
      },
      "LocationSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationSearchItem"
        }
      },
      "Link": {
        "required": ["href", "method", "rel"],
        "type": "object",
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MetaLinks": {
        "required": ["links", "meta"],
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Link"
            }
          },
          "meta": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Meta"
          }
        }
      },
      "PolicyConditionSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
        }
      },
      "CopyPolicyInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Policy": {
        "required": ["number", "status"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string"
          },
          "accountId": {
            "type": "integer",
            "format": "int32"
          },
          "lob": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "inceptionDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "partOf": {
            "type": "number",
            "format": "double"
          },
          "attachmentPoint": {
            "type": "number",
            "format": "double"
          },
          "minDeductible": {
            "type": "number",
            "format": "double"
          },
          "maxDeductible": {
            "type": "number",
            "format": "double"
          },
          "blanketLimit": {
            "type": "number",
            "format": "double"
          },
          "blanketDeductible": {
            "type": "number",
            "format": "double"
          },
          "blanketPremium": {
            "type": "number",
            "format": "double"
          },
          "biLifeLine": {
            "type": "integer",
            "format": "int32"
          },
          "deductType": {
            "type": "integer",
            "format": "int32"
          },
          "structure": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "coverageBase": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "limitGU": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "userText3": {
            "type": "string"
          },
          "userText4": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCoverage"
            }
          },
          "reinsuranceCessions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
            }
          },
          "policyConditions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
            }
          },
          "CustomData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "newCauseOfLoss": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "percentOfLossDeductible": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "PolicyCoverage": {
        "required": ["label", "lossType", "peril"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "lossType": {
            "type": "string",
            "enum": ["Building", "Contents", "BI", "CombinedCvg"]
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "limit": {
            "type": "number",
            "format": "double"
          },
          "deductible": {
            "type": "number",
            "format": "double"
          },
          "label": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "accumulation": {
            "type": "integer",
            "format": "int32"
          },
          "isValid": {
            "type": "boolean"
          },
          "percentOfLossDeductibleAmount": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "PolicyConditionMetrics": {
        "type": "object",
        "properties": {
          "notIncludedCount": {
            "type": "integer",
            "format": "int32"
          },
          "includedByFilterCount": {
            "type": "integer",
            "format": "int32"
          },
          "includedByUserCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PolicySearchResult": {
        "type": "object",
        "properties": {
          "matchCount": {
            "type": "integer",
            "format": "int64"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Policy"
            }
          }
        }
      },
      "CopyPortfolioInfo": {
        "required": ["newDescription", "newName", "newNumber"],
        "type": "object",
        "properties": {
          "deep": {
            "type": "boolean"
          },
          "newName": {
            "type": "string"
          },
          "newNumber": {
            "type": "string"
          },
          "newDescription": {
            "type": "string"
          },
          "isDeep": {
            "type": "boolean"
          }
        }
      },
      "NewPortfolio": {
        "required": ["description", "name", "number"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          }
        }
      },
      "Portfolio": {
        "required": ["description", "name", "number"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          }
        }
      },
      "PortfolioMetrics": {
        "type": "object",
        "properties": {
          "totalAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "totalLocations": {
            "type": "integer",
            "format": "int32"
          },
          "totalPolicies": {
            "type": "integer",
            "format": "int32"
          },
          "perilsExposed": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "geocodeVersion": {
            "type": "string"
          },
          "hazardVersion": {
            "type": "string"
          }
        }
      },
      "PortfolioFilteredAccountsInput": {
        "type": "object",
        "properties": {
          "selectAll": {
            "type": "boolean"
          },
          "queryFilter": {
            "type": "string"
          },
          "markedAccounts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "manageExistingAccounts": {
            "type": "boolean"
          }
        }
      },
      "PortfolioAccountsInput": {
        "type": "object",
        "properties": {
          "accountsToAdd": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "accountsToRemove": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PortfolioSearchItem": {
        "required": ["description", "name", "number"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          },
          "geocodeVersion": {
            "type": "string"
          },
          "hazardVersion": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "jobStatus": {
            "type": "string"
          },
          "jobStartDate": {
            "type": "string"
          },
          "jobEndDate": {
            "type": "string"
          }
        }
      },
      "PortfolioSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioSearchItem"
        }
      },
      "ProducerSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
        }
      },
      "CopyStepPolicyInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StepPolicy": {
        "required": ["expirationDate", "inceptionDate", "number"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "stepOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "lobDetId": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "causeOfLoss": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "inceptionDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "payoutAmount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "payoutFunctionId": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "share": {
            "type": "number",
            "format": "double"
          },
          "excessAmount": {
            "type": "number",
            "format": "double"
          },
          "isPerRiskSubject": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "childOrderId": {
            "pattern": "^$|^([1-9][0-9]*)(,([1-9][0-9]*))*$",
            "type": "string"
          },
          "subjectFunctionId": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "coverageBase": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "limitGU": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "StepPolicySearchResult": {
        "type": "object",
        "properties": {
          "totalSearchCount": {
            "type": "integer",
            "format": "int64"
          },
          "stepPolicies": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/StepPolicy"
            }
          }
        }
      },
      "CopyTreatyInfo": {
        "required": ["newNumber"],
        "type": "object",
        "properties": {
          "newNumber": {
            "type": "string"
          },
          "newName": {
            "type": "string"
          }
        }
      },
      "UnderwriterSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/UnderWriter"
        }
      },
      "QueryEntity": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          }
        }
      },
      "PortfolioConditionCriteria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "logic": {
            "type": "string"
          },
          "openPar": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "closePar": {
            "type": "string"
          }
        }
      },
      "GlobalAnalysisSettings": {
        "required": [
          "franchiseDeductible",
          "minLossThreshold",
          "numMaxLossEvent",
          "treatConstructionOccupancyAsUnknown"
        ],
        "type": "object",
        "properties": {
          "franchiseDeductible": {
            "type": "boolean"
          },
          "minLossThreshold": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "treatConstructionOccupancyAsUnknown": {
            "type": "boolean"
          },
          "numMaxLossEvent": {
            "maximum": 5000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProcessInputV2": {
        "required": ["currency", "edm"],
        "type": "object",
        "properties": {
          "exposureType": {
            "type": "string",
            "enum": [
              "PORTFOLIO",
              "ACCOUNT",
              "LOCATION",
              "POLICY",
              "STEP_POLICY",
              "TREATY",
              "AGGPORTFOLIO"
            ]
          },
          "edm": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          },
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "treaties": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "jobName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "outputProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "globalAnalysisSettings": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GlobalAnalysisSettings"
          },
          "climateChangeVariationId": {
            "maximum": 68,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AggregateExposuresListSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AggregateExposuresList"
        }
      },
      "AccountInput": {
        "required": ["label", "number"],
        "type": "object",
        "properties": {
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "UPDATE", "DELETE"]
          },
          "label": {
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyInput"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationInput"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "underwriter": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/UnderWriter"
          },
          "branch": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Branch"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "userId3": {
            "type": "string"
          },
          "userId4": {
            "type": "string"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["InActive", "Active"]
          },
          "linkId": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "CustomData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BulkExposureInput": {
        "type": "object",
        "properties": {
          "portfolios": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PortfolioInput"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountInput"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationInput"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyInput"
            }
          },
          "treaties": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/TreatyInput"
            }
          },
          "uploadId": {
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          }
        }
      },
      "LocationInput": {
        "required": ["address", "label", "property"],
        "type": "object",
        "properties": {
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "UPDATE", "DELETE"]
          },
          "label": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "esdbBuildingAttribute": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBuildingAttribute"
          },
          "property": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Property"
          },
          "address": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Address"
          },
          "biDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationBiDetail"
          },
          "eqDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationEqDetail"
          },
          "wsDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWsDetail"
          },
          "toDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationToDetail"
          },
          "flDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFlDetail"
          },
          "frDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationFrDetail"
          },
          "trDetail": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationTrDetail"
          },
          "buildingAttribute": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/BuildingAttribute"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCoverage"
            }
          },
          "reinsuranceCessions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
            }
          },
          "wcDetails": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationWcDetail"
            }
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "tiv": {
            "type": "number",
            "format": "double"
          },
          "riskAssessorCurves": {
            "type": "string"
          },
          "locationConditions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LocationCondition"
            }
          },
          "maxCvgBldgValuation": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PolicyInput": {
        "required": ["label", "number", "status"],
        "type": "object",
        "properties": {
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "UPDATE", "DELETE"]
          },
          "label": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string"
          },
          "accountId": {
            "type": "integer",
            "format": "int32"
          },
          "lob": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "peril": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "status": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "inceptionDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "partOf": {
            "type": "number",
            "format": "double"
          },
          "attachmentPoint": {
            "type": "number",
            "format": "double"
          },
          "minDeductible": {
            "type": "number",
            "format": "double"
          },
          "maxDeductible": {
            "type": "number",
            "format": "double"
          },
          "blanketLimit": {
            "type": "number",
            "format": "double"
          },
          "blanketDeductible": {
            "type": "number",
            "format": "double"
          },
          "blanketPremium": {
            "type": "number",
            "format": "double"
          },
          "biLifeLine": {
            "type": "integer",
            "format": "int32"
          },
          "deductType": {
            "type": "integer",
            "format": "int32"
          },
          "structure": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "coverageBase": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "limitGU": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "userText3": {
            "type": "string"
          },
          "userText4": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCoverage"
            }
          },
          "reinsuranceCessions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ReinsuranceCession"
            }
          },
          "policyConditions": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/PolicyCondition"
            }
          },
          "CustomData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "newCauseOfLoss": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "percentOfLossDeductible": {
            "type": "number",
            "format": "double"
          },
          "isFranchiseDeductible": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          }
        }
      },
      "PortfolioInput": {
        "required": ["description", "label", "name", "number"],
        "type": "object",
        "properties": {
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "UPDATE", "DELETE"]
          },
          "label": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/AccountInput"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          }
        }
      },
      "TreatyInput": {
        "required": [
          "attachLevel",
          "cedant",
          "label",
          "treatyNumber",
          "treatyType"
        ],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "treatyName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "cedant": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "jobpriority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LineOfBusiness"
            }
          },
          "aggregateDeductible": {
            "type": "number",
            "format": "double"
          },
          "aggregateLimit": {
            "type": "number",
            "format": "double"
          },
          "lossOccurrences": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossOccurrence"
            }
          },
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "UPDATE", "DELETE"]
          },
          "label": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AggregatePortfolioFlatFileMapping": {
        "required": ["columnMapping", "countryCode", "resolution"],
        "type": "object",
        "properties": {
          "resolutionConversionFrom": {
            "type": "string"
          },
          "resolutionConversionTo": {
            "type": "string"
          },
          "columnMapping": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "dataRowStart": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "countryCode": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "dependencyResolution": {
            "type": "string"
          }
        }
      },
      "S3Bucket": {
        "type": "object",
        "properties": {
          "accessKeyId": {
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "sessionToken": {
            "type": "string"
          },
          "s3Path": {
            "type": "string"
          },
          "s3Region": {
            "type": "string"
          }
        }
      },
      "FileInput": {
        "required": ["fileName", "fileType"],
        "type": "object",
        "properties": {
          "fileInputType": {
            "type": "string",
            "enum": ["MRI", "ALM"]
          },
          "fileType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "ErrorBody": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Link"
            }
          }
        }
      },
      "EdmImportInput": {
        "type": "object",
        "properties": {
          "exposureSetId": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RDMImportInput": {
        "required": ["rdmName", "uploadId"],
        "type": "object",
        "properties": {
          "uploadId": {
            "type": "string"
          },
          "rdmName": {
            "type": "string"
          },
          "edmDataSourceName": {
            "type": "string"
          },
          "analysisIdFilter": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "tableFilter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "perspectiveFilter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exposureSetId": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "S3UploadHelper": {
        "type": "object",
        "properties": {
          "bucketPrefix": {
            "type": "string"
          },
          "awsRegion": {
            "type": "string"
          },
          "uploadId": {
            "type": "string"
          },
          "uploadKey1": {
            "type": "string"
          },
          "uploadKey2": {
            "type": "string"
          },
          "uploadKey3": {
            "type": "string"
          }
        }
      },
      "DataBridgeDatabase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "serverId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "version": {
            "type": "string"
          },
          "datasource": {
            "type": "string"
          },
          "dbType": {
            "type": "string",
            "enum": ["EDM", "RDM"]
          },
          "exposureSetId": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DataBridgeDatabaseSearchResult": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "dataBridgeDatabases": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DataBridgeDatabase"
            }
          }
        }
      },
      "EdmRequest": {
        "type": "object",
        "properties": {
          "exposureSetId": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ServerInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string",
            "enum": ["IR_PLATFORM", "DATA_BRIDGE"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "host": {
            "type": "string",
            "writeOnly": true
          },
          "port": {
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "defaultServer": {
            "type": "boolean"
          }
        }
      },
      "DataSourceSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/UserDatabaseV1"
        }
      },
      "UserDatabaseV1": {
        "type": "object",
        "properties": {
          "datasourceName": {
            "type": "string"
          },
          "edmName": {
            "type": "string"
          },
          "permissionType": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "serverState": {
            "type": "string",
            "enum": ["READY", "UPGRADING", "UPGRADE_FAILED", "LOCK"]
          },
          "serverNamespace": {
            "type": "string",
            "enum": ["RISK_MODELER", "DATA_BRIDGE"]
          },
          "owner": {
            "type": "string"
          },
          "exposureSetId": {
            "type": "string"
          },
          "datasourceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExportInput": {
        "required": ["exportType"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The `type` attribute identifies the model type: `ExposureExportInput`, `LocationResultsExportInput`, `ResultsExportInputV2`.",
            "example": "ExposureExportInput"
          },
          "exportType": {
            "type": "string",
            "description": "The required `exportType` identifies the database to export: EDM, LocationResults, or RDM.",
            "example": "EDM",
            "enum": ["EDM", "RDM", "LOCATION_RESULTS"]
          },
          "exportFormat": {
            "type": "string",
            "description": "The `exportFormat` attribute specified the format of the exported data (BAK, CSV, MDF or PARQUET). EDM and RDM data modules may be exported to the BAK and MDF formats. Analysis results may be exported to the CSV or PARQUET formats. Locations results can be exported to the CSV format.",
            "example": "BAK",
            "enum": ["CSV", "PARQUET", "BAK", "MDF", "JSON"]
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ExportOptions": {
        "type": "object",
        "properties": {
          "exportAccounts": {
            "type": "boolean"
          },
          "exportLocations": {
            "type": "boolean"
          },
          "exportPolicies": {
            "type": "boolean"
          },
          "exportTreaties": {
            "type": "boolean"
          },
          "exportReinsuranceInfo": {
            "type": "boolean"
          },
          "exportPerilDetailsInfo": {
            "type": "boolean"
          }
        },
        "description": "Indicate the parts of the exposure that will be exported.",
        "example": "\"exportAccounts\": true, \"exportLocations\": true, \"exportPolicies\": true, \"exportTreaties\": true, \"exportReinsuranceInfo\": true, \"exportPerilDetailsInfo\": true"
      },
      "ExposureExportInput": {
        "required": [
          "exportType",
          "exposureIds",
          "exposureType",
          "sourceDatasource"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExportInput"
          },
          {
            "type": "object",
            "properties": {
              "sourceDatasource": {
                "type": "string",
                "description": "The name of the source from which the exposure will be exported.",
                "example": "Source_EDM"
              },
              "destinationDatasource": {
                "type": "string",
                "description": "The name of the destination where the exposure will be exported.",
                "example": "Destination_EDM"
              },
              "exposureType": {
                "type": "string",
                "description": "The type of exposure that will be exported.",
                "example": "ACCOUNT",
                "enum": [
                  "PORTFOLIO",
                  "ACCOUNT",
                  "LOCATION",
                  "POLICY",
                  "STEP_POLICY",
                  "TREATY",
                  "AGGPORTFOLIO"
                ]
              },
              "exposureIds": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "The IDs of the exposures that will be exported.",
                  "format": "int32"
                }
              },
              "sqlServerVersion": {
                "type": "string",
                "enum": ["2019", "2014"]
              },
              "download": {
                "type": "boolean",
                "description": "Indicate if the EDM will be downloaded.",
                "example": true
              },
              "createnew": {
                "type": "boolean",
                "description": "Indicate if the EDM will be newly created.",
                "example": true
              },
              "exportOptions": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExportOptions"
              },
              "sqlVersion": {
                "type": "string",
                "description": "SQL server version of exported BAK or MDF.",
                "example": "2014",
                "enum": ["2019", "2014"],
                "default": "2014"
              }
            }
          }
        ]
      },
      "LocationResultsExportInput": {
        "required": ["analysisIds", "exportType"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExportInput"
          },
          {
            "type": "object",
            "properties": {
              "analysisIds": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "The Ids of the analyses that will be use for generating Location Result Export. Currently support exporting for only one analyses id.",
                  "format": "int32"
                }
              },
              "exportFields": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Exported fields needed for generating of the Export Location Results file.",
                  "example": "[locationId, locationNumber, locationName]"
                }
              },
              "perspectives": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Financial perspectives needed for generating of the Export Location Result file.",
                  "example": "[GU, GR]"
                }
              },
              "fileName": {
                "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
                "type": "string",
                "description": "The name of the file that will be generated.",
                "example": "LocationResult"
              }
            }
          }
        ]
      },
      "LossDetails": {
        "type": "object",
        "properties": {
          "lossType": {
            "type": "string",
            "description": "Different type of losses.",
            "example": "STATS"
          },
          "outputLevels": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Output Levels that should be saved in the result.",
              "example": "[Admin1, Admin2, Contract, Country]"
            }
          },
          "perspectives": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Financial perspectives that should be saved in the result.",
              "example": "[GU, GR]"
            }
          }
        },
        "description": "List with loss details.",
        "example": "[LossDetails_STATS, LossDetails_EP, LossDetails_LOSS_TABLE]"
      },
      "ResultsExportInput": {
        "required": ["exportType"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExportInput"
          },
          {
            "type": "object",
            "properties": {
              "analysisId": {
                "minimum": 1,
                "type": "integer",
                "description": "ID of the analysis.",
                "format": "int32",
                "example": 24088
              },
              "rdmName": {
                "maxLength": 64,
                "minLength": 0,
                "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w*$",
                "type": "string",
                "description": "The name of the RDM.",
                "example": "RMS_RDM"
              },
              "lossDetails": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossDetails"
                }
              }
            }
          }
        ]
      },
      "ResultsExportInputV2": {
        "required": ["analysisIds", "exportType"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExportInput"
          },
          {
            "type": "object",
            "properties": {
              "analysisIds": {
                "maxItems": 50,
                "minItems": 0,
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "List with analyses IDs.",
                  "format": "int32"
                }
              },
              "additionalOutputs": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "List with additional outputs.",
                  "example": "[HAZARD]",
                  "enum": ["HAZARD", "DAMAGE", "UNCERTAINTY"]
                }
              },
              "rdmName": {
                "maxLength": 64,
                "minLength": 0,
                "pattern": "^\\w((?!--)[\\w\\s-])*\\w$|^\\w*$",
                "type": "string",
                "description": "The name of the RDM.",
                "example": "RMS_RDM"
              },
              "lossDetails": {
                "type": "array",
                "items": {
                  "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossDetails"
                }
              },
              "sqlServerVersion": {
                "type": "string",
                "enum": ["2019", "2014"]
              },
              "createnew": {
                "type": "boolean",
                "description": "Shows if the RDM will be newly created or not. If it's not passed, it's Set to true by default.",
                "example": false
              },
              "sqlVersion": {
                "type": "string",
                "description": "SQL server version of exported BAK or MDF.",
                "example": "2014",
                "enum": ["2019", "2014"],
                "default": "2014"
              },
              "nonWeightedPlt": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "DownloadResultsInput": {
        "required": ["workflowId"],
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "lossDetails": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LossDetails"
            }
          }
        }
      },
      "AccountFileInput": {
        "required": ["name", "number"],
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SubmittedImportJob": {
        "required": ["bucketId", "dataSourceName", "delimiter"],
        "type": "object",
        "properties": {
          "bucketId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "accountsFileId": {
            "type": "integer",
            "format": "int32"
          },
          "locationsFileId": {
            "type": "integer",
            "format": "int32"
          },
          "reinsuranceFileId": {
            "type": "integer",
            "format": "int32"
          },
          "mappingFileId": {
            "type": "integer",
            "format": "int32"
          },
          "locale": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "dataSourceName": {
            "type": "string"
          },
          "delimiter": {
            "type": "string",
            "description": "the delimiter used in all files to separate columns",
            "enum": ["TAB", "COMMA", "SEMICOLON"]
          },
          "skipLines": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "appendLocations": {
            "type": "boolean"
          },
          "geoHaz": {
            "type": "boolean"
          },
          "portfolioId": {
            "type": "integer",
            "format": "int32"
          },
          "importType": {
            "type": "string",
            "enum": ["MRI", "ALM"]
          },
          "portfolioIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ImportSourceFileItem": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "sourceExample": {
            "type": "string"
          }
        }
      },
      "ImportSourceFileResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportSourceFileItem"
            }
          }
        }
      },
      "ImportMappingItem": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        }
      },
      "ImportMappingOutput": {
        "required": ["accountItems", "locationItems", "reinsuranceItems"],
        "type": "object",
        "properties": {
          "accountItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          },
          "locationItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          },
          "reinsuranceItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          }
        }
      },
      "ImportMappingInput": {
        "required": ["accountItems", "locationItems", "mapFileName"],
        "type": "object",
        "properties": {
          "mapFileName": {
            "type": "string"
          },
          "accountItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          },
          "locationItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          },
          "reinsuranceItems": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ImportMappingItem"
            }
          }
        }
      },
      "DataBridgeRegisterInput": {
        "required": ["TargetExposureSetUri"],
        "type": "object",
        "properties": {
          "TargetExposureSetUri": {
            "type": "string"
          }
        }
      },
      "ExposureSearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Exposure"
        }
      },
      "Exposure": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": ["not ready", "ready"]
          },
          "databaseName": {
            "type": "string"
          },
          "permissionType": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "serverState": {
            "type": "string",
            "enum": ["READY", "UPGRADING", "UPGRADE_FAILED", "LOCK"]
          },
          "serverNamespace": {
            "type": "string",
            "enum": ["IR_PLATFORM", "DATA_BRIDGE"]
          },
          "owner": {
            "type": "string"
          },
          "exposureSetId": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "serverId": {
            "type": "string"
          }
        }
      },
      "KeyValueStore": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "DomainReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "EntityMeta": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "string",
            "format": "uri"
          },
          "values": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DomainItem": {
        "type": "object",
        "properties": {
          "domainName": {
            "type": "string"
          },
          "tableSpace": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          },
          "dataOwnedBy": {
            "type": "string"
          },
          "domainSchema": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainSchema"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "DomainResult": {
        "type": "object",
        "properties": {
          "attributesTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "domainItems": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/DomainItem"
          }
        }
      },
      "DomainSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Field"
            }
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "nullable": {
            "type": "boolean"
          },
          "primaryKey": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "SecondaryModifierItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SecondaryModifierResult": {
        "type": "object",
        "properties": {
          "secondaryModifiersTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "secondaryModifierItem": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/SecondaryModifierItem"
            }
          }
        }
      },
      "GroupDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ExposureSetsearchResult": {
        "type": "array",
        "items": {
          "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ExposureSet"
        }
      },
      "PatchGenericRequest": {
        "required": ["operation", "targetProperty", "value"],
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["ADD", "UPDATE", "REMOVE"]
          },
          "targetProperty": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "PatchGenericOperation": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          }
        }
      },
      "PatchGenericTargetProperty": {
        "type": "object",
        "properties": {
          "targetProperty": {
            "type": "string"
          }
        }
      },
      "PatchGenericValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "ExposureBatchOperation": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
          },
          {
            "type": "object",
            "properties": {
              "input": {
                "required": [
                  "analysisIds",
                  "currency",
                  "name",
                  "numOfSimulations",
                  "propagateDetailedLosses",
                  "simulateToPLT"
                ],
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "analysisIds": {
                    "maxItems": 2147483647,
                    "minItems": 1,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "reportingWindowStart": {
                    "maxLength": 2147483647,
                    "minLength": 1,
                    "type": "string"
                  },
                  "numOfSimulations": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "simulationWindowStart": {
                    "maxLength": 2147483647,
                    "minLength": 1,
                    "type": "string"
                  },
                  "simulationWindowEnd": {
                    "maxLength": 2147483647,
                    "minLength": 1,
                    "type": "string"
                  },
                  "simulateToPLT": {
                    "type": "boolean"
                  },
                  "propagateDetailedLosses": {
                    "type": "boolean"
                  },
                  "regionPerilSimulationSet": {
                    "type": "array",
                    "items": {
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
                    }
                  },
                  "minimizedRegionPerilSimulationSet": {
                    "type": "array",
                    "items": {
                      "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
                    }
                  },
                  "name": {
                    "maxLength": 64,
                    "minLength": 1,
                    "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        ]
      },
      "GeoHazInput": {
        "required": ["datasource", "layers"],
        "type": "object",
        "properties": {
          "datasource": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/LayerInfo"
            }
          }
        }
      },
      "GeohazOperationV1": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
          },
          {
            "type": "object",
            "properties": {
              "input": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GeoHazInput"
              }
            }
          }
        ]
      },
      "GroupOperationV1": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
          },
          {
            "type": "object",
            "properties": {
              "input": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GroupingInput"
              }
            }
          }
        ]
      },
      "GroupingInput": {
        "required": [
          "analysisIds",
          "currency",
          "name",
          "numOfSimulations",
          "propagateDetailedLosses",
          "simulateToPLT"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "reportingWindowStart": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "numOfSimulations": {
            "type": "integer",
            "format": "int64"
          },
          "simulationWindowStart": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "simulationWindowEnd": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "simulateToPLT": {
            "type": "boolean"
          },
          "propagateDetailedLosses": {
            "type": "boolean"
          },
          "regionPerilSimulationSet": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
            }
          },
          "minimizedRegionPerilSimulationSet": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/RegionPerilSimulation"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          }
        }
      },
      "OperationV1": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "properties": {
          "label": {
            "maxLength": 16,
            "minLength": 2,
            "pattern": "[a-zA-Z]+[a-zA-Z0-9_]*",
            "type": "string",
            "description": "The unique name of the operation."
          },
          "operation": {
            "type": "string",
            "description": "The `operation` attribute identifies the operation model type and API to be invoked. It can be one of `geohaz`, `process` or `group`"
          },
          "input": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "dependsOn": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "continueOnFailure": {
            "type": "boolean"
          }
        },
        "description": "List containing sub-jobs of the batch workflow",
        "discriminator": {
          "propertyName": "operation"
        },
        "anyOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GeohazOperationV1"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/ProcessOperationV1"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GroupOperationV1"
          },
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV2"
          }
        ]
      },
      "OperationV2": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
          },
          {
            "type": "object",
            "properties": {
              "operation": {
                "type": "string",
                "description": "The `operation` attribute identifies the operation API to be invoked."
              },
              "input": {
                "type": "object"
              }
            }
          }
        ]
      },
      "ProcessOperationV1": {
        "required": ["input", "label", "operation"],
        "type": "object",
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
          },
          {
            "type": "object",
            "properties": {
              "input": {
                "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/WorkflowPlanProcessInput"
              }
            }
          }
        ]
      },
      "UserDefinedWorkflow": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The `type` attribute identifies the model type: `PortfolioWorkflow`, `AccountWorkflow`",
            "example": "PortfolioWorkflow"
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string",
            "description": "The name of the batch workflow.",
            "example": "Batch_Workflow"
          },
          "operations": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/OperationV1"
            }
          }
        }
      },
      "WorkflowPlanProcessInput": {
        "required": ["currency", "edm"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "exposureType": {
            "type": "string",
            "enum": [
              "PORTFOLIO",
              "ACCOUNT",
              "LOCATION",
              "POLICY",
              "STEP_POLICY",
              "TREATY",
              "AGGPORTFOLIO"
            ]
          },
          "edm": {
            "type": "string"
          },
          "currency": {
            "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Currency"
          },
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "treaties": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "jobName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^\\w((?!--)[\\w\\s:-])*\\w$|^\\w*$",
            "type": "string"
          },
          "outputProfileId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "resourceGroup": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "LastStatusTime": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "input": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "output": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "percentComplete": {
            "type": "integer",
            "format": "int32"
          },
          "continueOnFailure": {
            "type": "boolean"
          }
        }
      },
      "JobMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tenantName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "RUNNING",
              "FINISHED",
              "FAILED",
              "CANCELLED",
              "PENDING",
              "CANCELLING",
              "CANCEL_REQUESTED"
            ]
          },
          "submitTime": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Job"
            }
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "output": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/JobMessage"
            }
          }
        }
      },
      "WorkflowSearchResult": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/Workflow"
            }
          }
        }
      },
      "ExposureSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "https://raw.githubusercontent.com/RMS/rms-developers/product/drafts/.assets/irp/riskdata.json#/components/schemas/GroupDetail"
            }
          }
        }
      },
      "NewExposureSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "share": {
            "type": "boolean"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "rms_bearer_token": {
        "type": "http",
        "description": "RMS tenant specific bearer token to make authorized requests with temporary life span",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "rms_api_key": {
        "type": "apiKey",
        "name": "Authorization",
        "description": "RMS tenant specific api key to make authorized requests",
        "in": "header"
      }
    }
  }
}
