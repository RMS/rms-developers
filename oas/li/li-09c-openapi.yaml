openapi: 3.0.1
info:
  title: Location Intelligence API
  version: 2022.09.c
  description: Use LI API data to access RMS model insights in a flexible, scalable, and programmable way. The suite of layers includes exposure enhancement, geocoding, hazard, risk scoring, and loss costs to provide information for key decisions in the underwriting workflow, including screening, selection, and pricing.
externalDocs:
  description: Find out more about RMS
  url: 'https://www.rms.com/programs/location-intelligence-api/'
tags:
  - name: Geocoding
    description: Geocodes an address
  - name: Composite
    description: Returns multiple layers for an address, including chaining the output of one layer into the input for another
  - name: Risk lookups
    description: Returns one exposure, hazard, risk score, or loss cost layer for an address
paths:
  /{layer}/{version}:
    post:
      tags:
        - Risk lookups
      summary: Generic Lookup
      operationId: genericLookup
      parameters:
        - name: layer
          in: path
          description: Layer name
          example: "us_fema_firm"
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Layer version
          example: "latest"
          required: true
          schema:
            type: string
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ac_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Central America Earthquake Hazard. Including countries - Honduras, El Salvador, Guatemala, Panama, Nicaragua, Costa Rica, Belize
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/SvAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ac_eq_hazard/18.1:
    $ref: '#/paths/~1ac_eq_hazard~118.0'
  /ac_eq_hazard/latest:
    $ref: '#/paths/~1ac_eq_hazard~118.0'
  /ah_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: South America Earthquake Hazard. Including countries - Brazil, Argentina, Peru, Colombia, Ecuador, Chile, Venezuela, Bolivia
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/BrAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ah_eq_hazard/18.1:
    $ref: '#/paths/~1ah_eq_hazard~118.0'
  /ah_eq_hazard/latest:
    $ref: '#/paths/~1ah_eq_hazard~118.0'
  /ap_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Southeast Asia Earthquake Hazard. Including countries - Indonesia, Philippines, Malaysia, Thailand, Singapore, Vietnam
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/VnAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ap_eq_hazard/18.1:
    $ref: '#/paths/~1ap_eq_hazard~118.0'
  /ap_eq_hazard/latest:
    $ref: '#/paths/~1ap_eq_hazard~118.0'
  /au_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Australia Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/AuAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_eq_hazard/18.1:
    $ref: '#/paths/~1au_eq_hazard~118.0'
  /au_eq_hazard/latest:
    $ref: '#/paths/~1au_eq_hazard~118.0'
  /au_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Australia Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/AuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_eq_loss_cost/latest:
    $ref: '#/paths/~1au_eq_loss_cost~118.1'
  /au_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Australia Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/AuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_eq_risk_score/latest:
    $ref: '#/paths/~1au_eq_risk_score~118.1'
  /au_ws_hazard/18.0:
    post:
      tags:
        - Windstorm hazard lookup
      summary: Australia Windstorm Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/AuAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HurricaneHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_ws_hazard/18.1:
    $ref: '#/paths/~1au_ws_hazard~118.0'
  /au_ws_hazard/latest:
    $ref: '#/paths/~1au_ws_hazard~118.0'
  /au_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Australia Cyclone Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/AuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    surgeFlag:
                      type: "integer"
                      description: >
                        Perspective: * `0` - Wind * `1` - Wind and Surge

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_ws_loss_cost/latest:
    $ref: '#/paths/~1au_ws_loss_cost~118.1'
  /au_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Australia Cyclone Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/AuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    surgeFlag:
                      type: "integer"
                      description: >
                        Perspective: * `0` - Wind * `1` - Wind and Surge

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /au_ws_risk_score/latest:
    $ref: '#/paths/~1au_ws_risk_score~118.1'
  /ca_cs_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Severe Convective Storm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaCsAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_cs_loss_cost/latest:
    $ref: '#/paths/~1ca_cs_loss_cost~118.0'
  /ca_cs_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Severe Convective Storm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaCsAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_cs_risk_score/latest:
    $ref: '#/paths/~1ca_cs_risk_score~118.0'
  /ca_eq_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - locationCode
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_eq_loss_cost/latest:
    $ref: '#/paths/~1ca_eq_loss_cost~118.0'
  /ca_eq_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreCaOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_eq_risk_score/latest:
    $ref: '#/paths/~1ca_eq_risk_score~118.0'
  /ca_mmi/18.1:
    post:
      tags:
        - Risk lookups
      summary: Canada Earthquake MMI
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MmiOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_mmi/latest:
    $ref: '#/paths/~1ca_mmi~118.1'
  /ca_wf_model_hazard/1.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Wildfire Distance to Vegetation, Fuel, Slope
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAWildfireOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_wf_model_hazard/latest:
    $ref: '#/paths/~1ca_wf_model_hazard~11.0'
  /ca_wt_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Winterstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_wt_loss_cost/latest:
    $ref: '#/paths/~1ca_wt_loss_cost~118.0'
  /ca_wt_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: Canada Winterstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WtRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ca_wt_risk_score/latest:
    $ref: '#/paths/~1ca_wt_risk_score~118.0'
  /cb_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Caribbean Earthquake Hazard. Including countries - Saint Barthelemy, Puerto Rico, Bermuda, Haiti, Turks And Caicos Islands, Martinique, Bonaire, St Kitts and Nevis, U.S. Virgin Islands, Saint Martin, Grenada, Antigua and Barbuda, Cayman Islands, British Virgin Islands, Saba, St. Eustatius, Saint Vincent and The Grenadines, Curacao, Jamaica, Cuba, Dominica, Anguilla, Sint Maarten, Aruba, Montserrat, Guadeloupe, Trinidad and Tobago, Bahamas, Barbados, Saint Lucia, Dominican Republic
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/DrAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_eq_hazard/18.1:
    $ref: '#/paths/~1cb_eq_hazard~118.0'
  /cb_eq_hazard/latest:
    $ref: '#/paths/~1cb_eq_hazard~118.0'
  /cb_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                        - admin3GeoId
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_eq_loss_cost/latest:
    $ref: '#/paths/~1cb_eq_loss_cost~118.1'
  /cb_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Earthquake Risk Scores
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_eq_risk_score/latest:
    $ref: '#/paths/~1cb_eq_risk_score~118.1'
  /cb_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                        - admin3GeoId
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_ws_loss_cost/21.0:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                        - admin3GeoId
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
                    constructionQualityCodeOption:
                      type: "integer"
                      description: >
                        constructionQualityCodeOption: * `0` - Unknown * `1` - Obvious signs of deterioration or distress * `2` - Wind Only – FORTIFIED Home™/ Commercial, Bronze, Option 1 (U.S. and Canada only) * `3` - Wind Only – FORTIFIED Home/ Commercial, Bronze, Option 2 (U.S. and Canada only) * `4` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 1 (U.S. and Canada only) * `5` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 2 (U.S. and Canada only) * `6` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 1 (U.S. and Canada only) * `7` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 2 (U.S. and Canada only) * `8` - Wind Only – FORTIFIED for Safer Living – [Post 2001] (U.S. and Canada only) * `9` - Certified design and construction * `10` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 1 * `11` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 2 * `12` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 1 * `13` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 2 * `14` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 1 * `15` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 2 * `16` - Hail & Wind – FORTIFIED for Safer Living / Business™ (Post 2001)

                      example: 12
                    roofCoveringCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Metal sheathing with exposed fasteners * `2` - Metal sheathing with concealed fasteners * `3` - Built-up roof or single-ply membrane roof with the presence of gutters * `4` - Built-up roof or single-ply membrane roof without the presence of gutters * `5` - Concrete / clay tiles * `6` - Wood shakes * `7` - Normal shingle * `8` - Normal shingle with Secondary Water Resistance (SWR) * `9` - Shingle rated for high wind speeds * `10` - Shingle rated for high wind speeds with Secondary Water Resistance (SWR) * `16` - Concrete roof * `17` - Bermuda-style roof

                      example: 3
                    roofAgeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - 0–5 years * `2` - 6–10 years * `3` - 11 years or more * `4` - Obvious signs of deterioration or distress

                      example: 2
                    roofGeometryCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Flat roof with parapets * `2` - Flat roof without parapets * `3` - Hip roof with slope less than or equal to 6:12 (26.5 degrees) * `4` - Hip roof with slope greater than 6:12 (26.5 degrees) * `5` - Gable roof with slope less than or equal to 6:12 (26.5 degrees) * `6` - Gable roof with slope greater than 6:12 (26.5 degrees) * `7` - Braced gable roof with slope less than or equal to 6:12 (26.5 degrees) * `8` - Braced gable roof with slope greater than 6:12 (26.5 degrees)

                      example: 0
                    roofAnchorCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Toe nailing / No anchorage * `2` - Clips * `3` - Single wraps * `4` - Double wraps * `5` - Structural

                      example: 3
                    claddingTypeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Brick veneer * `2` - Metal sheathing * `3` - Wood * `4` - EIFS * `5` - Impact rated glazing * `6` - Glazing not designed for impact with gravel rooftop within 1000 ft * `7` - Glazing not designed for impact without gravel rooftop within 1000 ft * `8` - Vinyl siding * `9` - Stucco * `10` - None

                      example: 3
                    roofSheathingCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Batten decking / Skipped sheathing * `2` - 6d Nails – Any nail schedule * `3` - 8d Nails – Minimum nail schedule * `4` - 8d Nails – High wind nail schedule * `5` - 10d Nails – High wind nail schedule * `6` - Dimensional lumber / Tongue & groove decking with a minimum of 2 nails per board

                      example: 2
                    openingProtectionCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - All openings designed for pressure and large missiles (including doors) * `2` - All openings designed for pressure and medium missiles (including doors) * `3` - All openings designed for pressure and small missiles (including doors) * `4` - All glazed openings designed for pressure and large missiles (doors not designed for pressure / impact) * `5` - All glazed openings designed for pressure and medium missiles (doors not designed for pressure / impact) * `6` - All glazed openings designed for pressure and small missiles (doors not designed for pressure / impact) * `7` - All glazed openings covered with plywood/OSB (doors not designed for pressure / impact) * `8` - At least one glazed opening has no windborne debris protection (doors not designed for pressure / impact) * `9` - No exterior openings (glazed or nonglazed) have debris protection * `10` - All glazed openings designed for pressure and large missiles and doors designed for pressure only * `11` - All glazed openings designed for pressure and medium missiles and doors designed for pressure only * `12` - All glazed openings designed for pressure and small missiles and doors designed for pressure only * `13` - All glazed openings covered with plywood / OSB and doors designed for pressure and missile impact * `14` - All glazed openings covered with plywood / OSB and doors designed for pressure only * `15` - No glazed openings have wind-borne debris protection but doors designed for pressure and missile impact * `16` - No glazed openings have wind-borne debris protection but doors designed for pressure only

                      example: 14
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_ws_loss_cost/latest:
    $ref: '#/paths/~1cb_ws_loss_cost~121.0'
  /cb_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Windstorm Risk Scores
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_ws_risk_score/21.0:
    post:
      tags:
        - Risk lookups
      summary: Caribbean Windstorm Risk Scores
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryFips
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/DrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    constructionQualityCodeOption:
                      type: "integer"
                      description: >
                        constructionQualityCodeOption: * `0` - Unknown * `1` - Obvious signs of deterioration or distress * `2` - Wind Only – FORTIFIED Home™/ Commercial, Bronze, Option 1 (U.S. and Canada only) * `3` - Wind Only – FORTIFIED Home/ Commercial, Bronze, Option 2 (U.S. and Canada only) * `4` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 1 (U.S. and Canada only) * `5` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 2 (U.S. and Canada only) * `6` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 1 (U.S. and Canada only) * `7` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 2 (U.S. and Canada only) * `8` - Wind Only – FORTIFIED for Safer Living – [Post 2001] (U.S. and Canada only) * `9` - Certified design and construction * `10` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 1 * `11` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 2 * `12` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 1 * `13` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 2 * `14` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 1 * `15` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 2 * `16` - Hail & Wind – FORTIFIED for Safer Living / Business™ (Post 2001)

                      example: 12
                    roofCoveringCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Metal sheathing with exposed fasteners * `2` - Metal sheathing with concealed fasteners * `3` - Built-up roof or single-ply membrane roof with the presence of gutters * `4` - Built-up roof or single-ply membrane roof without the presence of gutters * `5` - Concrete / clay tiles * `6` - Wood shakes * `7` - Normal shingle * `8` - Normal shingle with Secondary Water Resistance (SWR) * `9` - Shingle rated for high wind speeds * `10` - Shingle rated for high wind speeds with Secondary Water Resistance (SWR) * `16` - Concrete roof * `17` - Bermuda-style roof

                      example: 3
                    roofAgeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - 0–5 years * `2` - 6–10 years * `3` - 11 years or more * `4` - Obvious signs of deterioration or distress

                      example: 2
                    roofGeometryCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Flat roof with parapets * `2` - Flat roof without parapets * `3` - Hip roof with slope less than or equal to 6:12 (26.5 degrees) * `4` - Hip roof with slope greater than 6:12 (26.5 degrees) * `5` - Gable roof with slope less than or equal to 6:12 (26.5 degrees) * `6` - Gable roof with slope greater than 6:12 (26.5 degrees) * `7` - Braced gable roof with slope less than or equal to 6:12 (26.5 degrees) * `8` - Braced gable roof with slope greater than 6:12 (26.5 degrees)

                      example: 0
                    roofAnchorCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Toe nailing / No anchorage * `2` - Clips * `3` - Single wraps * `4` - Double wraps * `5` - Structural

                      example: 3
                    claddingTypeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Brick veneer * `2` - Metal sheathing * `3` - Wood * `4` - EIFS * `5` - Impact rated glazing * `6` - Glazing not designed for impact with gravel rooftop within 1000 ft * `7` - Glazing not designed for impact without gravel rooftop within 1000 ft * `8` - Vinyl siding * `9` - Stucco * `10` - None

                      example: 3
                    roofSheathingCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Batten decking / Skipped sheathing * `2` - 6d Nails – Any nail schedule * `3` - 8d Nails – Minimum nail schedule * `4` - 8d Nails – High wind nail schedule * `5` - 10d Nails – High wind nail schedule * `6` - Dimensional lumber / Tongue & groove decking with a minimum of 2 nails per board

                      example: 2
                    openingProtectionCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - All openings designed for pressure and large missiles (including doors) * `2` - All openings designed for pressure and medium missiles (including doors) * `3` - All openings designed for pressure and small missiles (including doors) * `4` - All glazed openings designed for pressure and large missiles (doors not designed for pressure / impact) * `5` - All glazed openings designed for pressure and medium missiles (doors not designed for pressure / impact) * `6` - All glazed openings designed for pressure and small missiles (doors not designed for pressure / impact) * `7` - All glazed openings covered with plywood/OSB (doors not designed for pressure / impact) * `8` - At least one glazed opening has no windborne debris protection (doors not designed for pressure / impact) * `9` - No exterior openings (glazed or nonglazed) have debris protection * `10` - All glazed openings designed for pressure and large missiles and doors designed for pressure only * `11` - All glazed openings designed for pressure and medium missiles and doors designed for pressure only * `12` - All glazed openings designed for pressure and small missiles and doors designed for pressure only * `13` - All glazed openings covered with plywood / OSB and doors designed for pressure and missile impact * `14` - All glazed openings covered with plywood / OSB and doors designed for pressure only * `15` - No glazed openings have wind-borne debris protection but doors designed for pressure and missile impact * `16` - No glazed openings have wind-borne debris protection but doors designed for pressure only

                      example: 14
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cb_ws_risk_score/latest:
    $ref: '#/paths/~1cb_ws_risk_score~121.0'
  /cc_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: China Earthquake Hazard. Including countries - China, Taiwan
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CnAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cc_eq_hazard/18.1:
    $ref: '#/paths/~1cc_eq_hazard~118.0'
  /cc_eq_hazard/latest:
    $ref: '#/paths/~1cc_eq_hazard~118.0'
  /cc_ws_hazard/18.0:
    post:
      tags:
        - Windstorm hazard lookup
      summary: Hong Kong Windstorm Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/HkAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HurricaneHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cc_ws_hazard/18.1:
    $ref: '#/paths/~1cc_ws_hazard~118.0'
  /cc_ws_hazard/latest:
    $ref: '#/paths/~1cc_ws_hazard~118.0'
  /cn_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: China Earthquake Loss Cost - Includes China & HongKong
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CnRiskIndexAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cn_eq_loss_cost/latest:
    $ref: '#/paths/~1cn_eq_loss_cost~118.1'
  /cn_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: China Earthquake Risk Score - Includes China & HongKong
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CnRiskIndexAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cn_eq_risk_score/latest:
    $ref: '#/paths/~1cn_eq_risk_score~118.1'
  /cn_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: China Windstorm Loss Cost - Includes China & HongKong
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CnRiskIndexAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cn_ws_loss_cost/latest:
    $ref: '#/paths/~1cn_ws_loss_cost~118.1'
  /cn_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: China Windstorm Risk Score - Includes China & HongKong
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/CnRiskIndexAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /cn_ws_risk_score/latest:
    $ref: '#/paths/~1cn_ws_risk_score~118.1'
  /composite:
    post:
      tags:
        - Composite
      summary: Perform Multiple Lookups for a Location. If geocoding is included, that geocoded address is used for all other lookups.
      operationId: composite
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeInput'
            example:
              location:
                address:
                  admin1Code: "CA"
                  cityName: "NEWARK"
                  countryCode: "US"
                  countryScheme: "ISO2A"
                  postalCode: "94560"
                  streetAddress: "7575 GATEWAY BLVD"
                characteristics:
                  construction: ATC1
                  occupancy: ATC1
                  yearBuilt: 1973
                  numOfStories: 3
                coverageValues:
                  buildingValue: 1000000
                  contentsValue: 100000
                  businessInterruptionValue: 50000
              layers:
                - name: geocode
                  version: latest
                - name: us_eq_loss_cost
                  version: latest
                - name: us_fema_firm
                  version: latest
                  options:
                    distanceUnit: feet
                    proximityDistance: 100
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: European Earthquake Hazard. Including countries - Ireland, Hungary, Andorra, Italy, Bulgaria, Romania, Slovenia, Liechtenstein, France, Netherlands, Switzerland, Germany, Portugal, Belgium, Austria, Greece, United Kingdom, Spain, Turkey, Luxembourg
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_eq_hazard/18.1:
    $ref: '#/paths/~1eu_eq_hazard~118.0'
  /eu_eq_hazard/latest:
    $ref: '#/paths/~1eu_eq_hazard~118.0'
  /eu_eq_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                        - postalCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsEuBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_eq_loss_cost/latest:
    $ref: '#/paths/~1eu_eq_loss_cost~118.0'
  /eu_eq_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreEuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_eq_risk_score/latest:
    $ref: '#/paths/~1eu_eq_risk_score~118.0'
  /eu_fl_depth/1.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Flood Depth
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    lookup:
                      type: "string"
                      enum:
                        - "floodDepth"
                        - "wetOrDry"
                        - "proximity"
                      description: >
                        Type of lookup: * `floodDepth` - Lookup flood depths * `wetOrDry` - Lookup if the location is wet or dry * `proximity` - Lookup max depth within proximity

                      default: "floodDepth"
                      example: "proximity"
                    defended:
                      type: boolean
                      description: "Max depth is defended/undefended (only applies to lookup type `proximity`)"
                      default: false
                      example: false
                    returnPeriod:
                      type: integer
                      description: "Return period for max depth calculation (only applies to lookup type `proximity`)"
                      default: 1000
                      example: 1000
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return max depth found within this distance from the address (only applies to lookup type `proximity` and the maximum distance allowed is 1000 meters)"
                      example: 100
                      default: 100
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                      description: "Distance unit"
                      default: "meters"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: '#/components/schemas/FlDepthInlandSurgeOutput'
                  - $ref: '#/components/schemas/FlDepthBaseOutput'
                  - $ref: '#/components/schemas/FlDepthInlandProximityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_fl_depth/2.0:
    $ref: '#/paths/~1eu_fl_depth~11.0'
  /eu_fl_depth/latest:
    $ref: '#/paths/~1eu_fl_depth~11.0'
  /eu_fl_loss_cost/2.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Flood Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/EuFrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsEuFl/value'
                    coverageValues:
                      example:
                        $ref: '#/components/examples/CoverageValuesFlood/value'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %"
                      example: 0.163958568
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_fl_loss_cost/latest:
    $ref: '#/paths/~1eu_fl_loss_cost~12.0'
  /eu_fl_risk_score/2.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Flood Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/EuFrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsEuFl/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreEuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_fl_risk_score/latest:
    $ref: '#/paths/~1eu_fl_risk_score~12.0'
  /eu_mmi/18.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Earthquake MMI
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MmiBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_mmi/latest:
    $ref: '#/paths/~1eu_mmi~118.0'
  /eu_ws_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                        - postalCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    euwsFlag:
                      type: "integer"
                      description: >
                        Perspective: * `0` - Reference view * `1` - Climate view * `2` - Reference view (low frequency only) * `3` - Climate view (low frequency only)

                      minimum: 0
                      maximum: 3
                      default: 0
                      example: 0
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_ws_loss_cost/latest:
    $ref: '#/paths/~1eu_ws_loss_cost~118.0'
  /eu_ws_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: Europe Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/EuGbAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsEuBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreEuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /eu_ws_risk_score/latest:
    $ref: '#/paths/~1eu_ws_risk_score~118.0'
  /geocode/18.0:
    post:
      tags:
        - Geocoding
      summary: Geocode address
      requestBody:
        description: Address to geocode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeocodeInput'
            example:
              countryCode: "US"
              countryScheme: "ISO2A"
              admin1Code: "CA"
              postalCode: "94560"
              streetAddress: "7575 GATEWAY BLVD"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin1:
    get:
      tags:
        - Geocoding
      summary: Query the admin1 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin1Name
          schema:
            type: string
          description: Name of administrative level 1
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin1ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin1/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the admin1 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces.
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin1Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin2:
    get:
      tags:
        - Geocoding
      summary: Query the admin2 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: admin2Name
          schema:
            type: string
          description: Name of administrative level 2
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin2/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the admin2 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties.
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin3:
    get:
      tags:
        - Geocoding
      summary: Query the admin3 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: admin3Code
          schema:
            type: string
          description: Code for administrative level 3. Admin3 represents smaller geographic divisions than Admin2, such as municipality
        - in: query
          name: admin3Name
          schema:
            type: string
          description: Name of administrative level 3
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin3/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the admin3 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for administrative level 3. Admin3 represents smaller geographic divisions than Admin2, such as municipality.
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin4:
    get:
      tags:
        - Geocoding
      summary: Query the admin4 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: admin4Code
          schema:
            type: string
          description: Code for administrative level 4. Admin4 represents smaller geographic divisions than Admin3, such as neighborhood or district
        - in: query
          name: admin4Name
          schema:
            type: string
          description: Name of administrative level 4
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/admin4/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the admin4 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for administrative level 4. Admin3 represents smaller geographic divisions than Admin3, such as neighborhood or district.
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableAdmin2Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/city:
    get:
      tags:
        - Geocoding
      summary: Query the city reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: cityCode
          schema:
            type: string
          description: Code for the city, City field represents a city or a town
        - in: query
          name: cityName
          schema:
            type: string
          description: city, field represents a city or a town
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableCityListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/city/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the city reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for city
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableCityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/country:
    get:
      tags:
        - Geocoding
      summary: Query the country reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: countryName
          schema:
            type: string
          description: Name of Country
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableCountryListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/country/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the country reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for Country
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableCountryOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/locationCode:
    get:
      tags:
        - Geocoding
      summary: Query the locationCode reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: locationCode
          schema:
            type: string
          description: location code, field represents a subregion such as postcode sector (UK), FSA (Canada)
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableLocationCodeListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/locationCode/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the locationCode reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for location code
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableLocationCodeOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/postalCode:
    get:
      tags:
        - Geocoding
      summary: Query the postalCode reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: admin1Code
          schema:
            type: string
          description: Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces
        - in: query
          name: admin2Code
          schema:
            type: string
          description: Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties
        - in: query
          name: postalCode
          schema:
            type: string
          description: Postal Code
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTablePostalCodeListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/postalCode/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the postalCode reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for postal code
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTablePostalCodeOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone1:
    get:
      tags:
        - Geocoding
      summary: Query the zone1 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: zone1Name
          schema:
            type: string
          description: CRESTA zones
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone1ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone1/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the zone1 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for CRESTA zone. CRESTA represent globally uniform system for the accumulation risk control of natural hazards - particularly earthquakes, storms and floods.
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone1Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone3:
    get:
      tags:
        - Geocoding
      summary: Query the zone3 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: zone3Name
          schema:
            type: string
          description: CRESTA zones
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone3ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone3/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the zone3 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for zone 3. Zone2 represents Low-resolution CRESTA Zone
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone3Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone4:
    get:
      tags:
        - Geocoding
      summary: Query the zone4 reference table
      parameters:
        - in: query
          name: countryFips
          schema:
            type: string
          description: Country FIPS code
        - in: query
          name: zone4Name
          schema:
            type: string
          description: CRESTA zones
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 100
          description: The numbers of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone4ListOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.0/zone4/{id}:
    get:
      tags:
        - Geocoding
      summary: Query the zone4 reference table by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: "integer"
            format: "int64"
          description: Globally unique ID for zone 4. Zone2 represents High-resolution CRESTA Zone
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTableZone4Output'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  /geocode/18.1:
    $ref: '#/paths/~1geocode~118.0'
  /geocode/18.1/admin1:
    $ref: '#/paths/~1geocode~118.0~1admin1'
  /geocode/18.1/admin1/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin1~1%7Bid%7D'
  /geocode/18.1/admin2:
    $ref: '#/paths/~1geocode~118.0~1admin2'
  /geocode/18.1/admin2/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin2~1%7Bid%7D'
  /geocode/18.1/admin3:
    $ref: '#/paths/~1geocode~118.0~1admin3'
  /geocode/18.1/admin3/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin3~1%7Bid%7D'
  /geocode/18.1/admin4:
    $ref: '#/paths/~1geocode~118.0~1admin4'
  /geocode/18.1/admin4/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin4~1%7Bid%7D'
  /geocode/18.1/city:
    $ref: '#/paths/~1geocode~118.0~1city'
  /geocode/18.1/city/{id}:
    $ref: '#/paths/~1geocode~118.0~1city~1%7Bid%7D'
  /geocode/18.1/country:
    $ref: '#/paths/~1geocode~118.0~1country'
  /geocode/18.1/country/{id}:
    $ref: '#/paths/~1geocode~118.0~1country~1%7Bid%7D'
  /geocode/18.1/locationCode:
    $ref: '#/paths/~1geocode~118.0~1locationCode'
  /geocode/18.1/locationCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1locationCode~1%7Bid%7D'
  /geocode/18.1/postalCode:
    $ref: '#/paths/~1geocode~118.0~1postalCode'
  /geocode/18.1/postalCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1postalCode~1%7Bid%7D'
  /geocode/20.0/admin1:
    $ref: '#/paths/~1geocode~118.0~1admin1'
  /geocode/20.0/admin1/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin1~1%7Bid%7D'
  /geocode/20.0/admin2:
    $ref: '#/paths/~1geocode~118.0~1admin2'
  /geocode/20.0/admin2/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin2~1%7Bid%7D'
  /geocode/20.0/admin3:
    $ref: '#/paths/~1geocode~118.0~1admin3'
  /geocode/20.0/admin3/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin3~1%7Bid%7D'
  /geocode/20.0/admin4:
    $ref: '#/paths/~1geocode~118.0~1admin4'
  /geocode/20.0/admin4/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin4~1%7Bid%7D'
  /geocode/20.0/city:
    $ref: '#/paths/~1geocode~118.0~1city'
  /geocode/20.0/city/{id}:
    $ref: '#/paths/~1geocode~118.0~1city~1%7Bid%7D'
  /geocode/20.0/country:
    $ref: '#/paths/~1geocode~118.0~1country'
  /geocode/20.0/country/{id}:
    $ref: '#/paths/~1geocode~118.0~1country~1%7Bid%7D'
  /geocode/20.0/locationCode:
    $ref: '#/paths/~1geocode~118.0~1locationCode'
  /geocode/20.0/locationCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1locationCode~1%7Bid%7D'
  /geocode/20.0/postalCode:
    $ref: '#/paths/~1geocode~118.0~1postalCode'
  /geocode/20.0/postalCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1postalCode~1%7Bid%7D'
  /geocode/21.0:
    $ref: '#/paths/~1geocode~118.0'
  /geocode/21.0/admin1:
    $ref: '#/paths/~1geocode~118.0~1admin1'
  /geocode/21.0/admin1/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin1~1%7Bid%7D'
  /geocode/21.0/admin2:
    $ref: '#/paths/~1geocode~118.0~1admin2'
  /geocode/21.0/admin2/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin2~1%7Bid%7D'
  /geocode/21.0/admin3:
    $ref: '#/paths/~1geocode~118.0~1admin3'
  /geocode/21.0/admin3/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin3~1%7Bid%7D'
  /geocode/21.0/admin4:
    $ref: '#/paths/~1geocode~118.0~1admin4'
  /geocode/21.0/admin4/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin4~1%7Bid%7D'
  /geocode/21.0/city:
    $ref: '#/paths/~1geocode~118.0~1city'
  /geocode/21.0/city/{id}:
    $ref: '#/paths/~1geocode~118.0~1city~1%7Bid%7D'
  /geocode/21.0/country:
    $ref: '#/paths/~1geocode~118.0~1country'
  /geocode/21.0/country/{id}:
    $ref: '#/paths/~1geocode~118.0~1country~1%7Bid%7D'
  /geocode/21.0/locationCode:
    $ref: '#/paths/~1geocode~118.0~1locationCode'
  /geocode/21.0/locationCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1locationCode~1%7Bid%7D'
  /geocode/21.0/postalCode:
    $ref: '#/paths/~1geocode~118.0~1postalCode'
  /geocode/21.0/postalCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1postalCode~1%7Bid%7D'
  /geocode/22.0:
    $ref: '#/paths/~1geocode~118.0'
  /geocode/22.0/admin1:
    $ref: '#/paths/~1geocode~118.0~1admin1'
  /geocode/22.0/admin1/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin1~1%7Bid%7D'
  /geocode/22.0/admin2:
    $ref: '#/paths/~1geocode~118.0~1admin2'
  /geocode/22.0/admin2/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin2~1%7Bid%7D'
  /geocode/22.0/admin3:
    $ref: '#/paths/~1geocode~118.0~1admin3'
  /geocode/22.0/admin3/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin3~1%7Bid%7D'
  /geocode/22.0/admin4:
    $ref: '#/paths/~1geocode~118.0~1admin4'
  /geocode/22.0/admin4/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin4~1%7Bid%7D'
  /geocode/22.0/city:
    $ref: '#/paths/~1geocode~118.0~1city'
  /geocode/22.0/city/{id}:
    $ref: '#/paths/~1geocode~118.0~1city~1%7Bid%7D'
  /geocode/22.0/country:
    $ref: '#/paths/~1geocode~118.0~1country'
  /geocode/22.0/country/{id}:
    $ref: '#/paths/~1geocode~118.0~1country~1%7Bid%7D'
  /geocode/22.0/locationCode:
    $ref: '#/paths/~1geocode~118.0~1locationCode'
  /geocode/22.0/locationCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1locationCode~1%7Bid%7D'
  /geocode/22.0/postalCode:
    $ref: '#/paths/~1geocode~118.0~1postalCode'
  /geocode/22.0/postalCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1postalCode~1%7Bid%7D'
  /geocode/latest:
    $ref: '#/paths/~1geocode~118.0'
  /geocode/latest/admin1:
    $ref: '#/paths/~1geocode~118.0~1admin1'
  /geocode/latest/admin1/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin1~1%7Bid%7D'
  /geocode/latest/admin2:
    $ref: '#/paths/~1geocode~118.0~1admin2'
  /geocode/latest/admin2/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin2~1%7Bid%7D'
  /geocode/latest/admin3:
    $ref: '#/paths/~1geocode~118.0~1admin3'
  /geocode/latest/admin3/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin3~1%7Bid%7D'
  /geocode/latest/admin4:
    $ref: '#/paths/~1geocode~118.0~1admin4'
  /geocode/latest/admin4/{id}:
    $ref: '#/paths/~1geocode~118.0~1admin4~1%7Bid%7D'
  /geocode/latest/city:
    $ref: '#/paths/~1geocode~118.0~1city'
  /geocode/latest/city/{id}:
    $ref: '#/paths/~1geocode~118.0~1city~1%7Bid%7D'
  /geocode/latest/country:
    $ref: '#/paths/~1geocode~118.0~1country'
  /geocode/latest/country/{id}:
    $ref: '#/paths/~1geocode~118.0~1country~1%7Bid%7D'
  /geocode/latest/locationCode:
    $ref: '#/paths/~1geocode~118.0~1locationCode'
  /geocode/latest/locationCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1locationCode~1%7Bid%7D'
  /geocode/latest/postalCode:
    $ref: '#/paths/~1geocode~118.0~1postalCode'
  /geocode/latest/postalCode/{id}:
    $ref: '#/paths/~1geocode~118.0~1postalCode~1%7Bid%7D'
  /global_distance_to_nuclear_plant/1.0:
    post:
      tags:
        - Risk lookups
      summary: Global Distance to Nuclear Plants
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsNuclearD2TAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalNuclearD2TOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /global_distance_to_nuclear_plant/latest:
    $ref: '#/paths/~1global_distance_to_nuclear_plant~11.0'
  /global_distance_to_volcano/1.0:
    post:
      tags:
        - Risk lookups
      summary: Global Distance to Volcano
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/NzAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalVolcanoD2TOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /global_distance_to_volcano/latest:
    $ref: '#/paths/~1global_distance_to_volcano~11.0'
  /global_fl_depth/1.0:
    post:
      tags:
        - Risk lookups
      summary: Global Flood Depth
      requestBody:
        description: Global Flood Depth
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryCode
                        - countryScheme
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/PlAddress/value'
                      properties:
                        countryCode:
                          type: "string"
                          description: "Country Code"
                          example: "US"
                          maxLength: 4
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    lookup:
                      type: "string"
                      enum:
                        - "proximity"
                        - "wetOrDry"
                        - "floodDepth"
                      description: >
                        Type of lookup: * `floodDepth` - Lookup flood depths * `wetOrDry` - Lookup if the location is wet or dry * `proximity` - Lookup max depth within proximity

                      default: "floodDepth"
                      example: "proximity"
                    returnPeriod:
                      type: integer
                      description: "Return period for max depth calculation (only applies to lookup type `proximity`)"
                      default: 1000
                      example: 1000
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return max depth found within this distance from the address (only applies to lookup type `proximity` and the maximum distance allowed is 1000 meters)"
                      example: 100
                      default: 100
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                      description: "Distance unit"
                      default: "meters"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: '#/components/schemas/GlobalFlDepthInlandOutput'
                  - $ref: '#/components/schemas/FlDepthBaseOutput'
                  - $ref: '#/components/schemas/FlDepthInlandProximityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /global_fl_depth/latest:
    $ref: '#/paths/~1global_fl_depth~11.0'
  /gu_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Guam Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_eq_hazard/18.1:
    $ref: '#/paths/~1gu_eq_hazard~118.0'
  /gu_eq_hazard/latest:
    $ref: '#/paths/~1gu_eq_hazard~118.0'
  /gu_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Guam Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_eq_loss_cost/latest:
    $ref: '#/paths/~1gu_eq_loss_cost~118.1'
  /gu_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Guam Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_eq_risk_score/latest:
    $ref: '#/paths/~1gu_eq_risk_score~118.1'
  /gu_ws_hazard/18.0:
    post:
      tags:
        - Windstorm hazard lookup
      summary: Guam Windstorm Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HurricaneHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_ws_hazard/18.1:
    $ref: '#/paths/~1gu_ws_hazard~118.0'
  /gu_ws_hazard/latest:
    $ref: '#/paths/~1gu_ws_hazard~118.0'
  /gu_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Guam Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_ws_loss_cost/latest:
    $ref: '#/paths/~1gu_ws_loss_cost~118.1'
  /gu_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Guam Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/GuAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /gu_ws_risk_score/latest:
    $ref: '#/paths/~1gu_ws_risk_score~118.1'
  /il_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Israel Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/IlAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /il_eq_hazard/18.1:
    $ref: '#/paths/~1il_eq_hazard~118.0'
  /il_eq_hazard/latest:
    $ref: '#/paths/~1il_eq_hazard~118.0'
  /in_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: India Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/InAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /in_eq_hazard/18.1:
    $ref: '#/paths/~1in_eq_hazard~118.0'
  /in_eq_hazard/latest:
    $ref: '#/paths/~1in_eq_hazard~118.0'
  /in_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: India Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - postalCode
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/InAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /in_eq_loss_cost/latest:
    $ref: '#/paths/~1in_eq_loss_cost~118.1'
  /in_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: India Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - postalCode
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/InAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /in_eq_risk_score/latest:
    $ref: '#/paths/~1in_eq_risk_score~118.1'
  /in_fl_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: India Flood Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - postalCode
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/InAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /in_fl_loss_cost/latest:
    $ref: '#/paths/~1in_fl_loss_cost~118.1'
  /in_fl_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: India Flood Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - postalCode
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/InAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /in_fl_risk_score/latest:
    $ref: '#/paths/~1in_fl_risk_score~118.1'
  /jp_eq_hazard/2.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Japan Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/JpAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /jp_eq_hazard/latest:
    $ref: '#/paths/~1jp_eq_hazard~12.0'
  /kr_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: Korea Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/KrAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /kr_eq_hazard/18.1:
    $ref: '#/paths/~1kr_eq_hazard~118.0'
  /kr_eq_hazard/latest:
    $ref: '#/paths/~1kr_eq_hazard~118.0'
  /kr_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Korea Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/KrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /kr_eq_loss_cost/latest:
    $ref: '#/paths/~1kr_eq_loss_cost~118.1'
  /kr_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Korea Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/KrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /kr_eq_risk_score/latest:
    $ref: '#/paths/~1kr_eq_risk_score~118.1'
  /kr_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Korea Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/KrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /kr_ws_loss_cost/latest:
    $ref: '#/paths/~1kr_ws_loss_cost~118.1'
  /kr_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Korea Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/KrAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /kr_ws_risk_score/latest:
    $ref: '#/paths/~1kr_ws_risk_score~118.1'
  /mx_mmi/18.1:
    post:
      tags:
        - Risk lookups
      summary: Mexico Earthquake MMI
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/MxAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MmiOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /mx_mmi/latest:
    $ref: '#/paths/~1mx_mmi~118.1'
  /na_eq_hazard/18.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: North America Earthquake Hazard. Including countries - Canada, United States, Mexico
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /na_eq_hazard/18.1:
    $ref: '#/paths/~1na_eq_hazard~118.0'
  /na_eq_hazard/latest:
    $ref: '#/paths/~1na_eq_hazard~118.0'
  /na_ws_hazard/18.0:
    post:
      tags:
        - Windstorm hazard lookup
      summary: North America Windstorm Hazard, including countries - us, cb, mx, ca.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - admin1Code
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/NaWsAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HurricaneHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /na_ws_hazard/18.1:
    $ref: '#/paths/~1na_ws_hazard~118.0'
  /na_ws_hazard/latest:
    $ref: '#/paths/~1na_ws_hazard~118.0'
  /nz_eq_hazard/2.0:
    post:
      tags:
        - Earthquake hazard lookup
      summary: New Zealand Earthquake Hazard.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/NzAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeHazardOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /nz_eq_hazard/latest:
    $ref: '#/paths/~1nz_eq_hazard~12.0'
  /nz_fl_depth/1.0:
    post:
      tags:
        - Risk lookups
      summary: New Zealand Flood Depth
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/NzAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    lookup:
                      type: "string"
                      enum:
                        - "floodDepth"
                        - "wetOrDry"
                        - "proximity"
                      description: >
                        Type of lookup: * `floodDepth` - Lookup flood depths * `wetOrDry` - Lookup if the location is wet or dry * `proximity` - Lookup max depth within proximity

                      default: "floodDepth"
                      example: "proximity"
                    defended:
                      type: boolean
                      description: "Max depth is defended/undefended (only applies to lookup type `proximity`)"
                      default: false
                      example: false
                    returnPeriod:
                      type: integer
                      description: "Return period for max depth calculation (only applies to lookup type `proximity`)"
                      default: 1000
                      example: 1000
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return max depth found within this distance from the address (only applies to lookup type `proximity` and the maximum distance allowed is 1000 meters)"
                      example: 100
                      default: 100
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                      description: "Distance unit"
                      default: "meters"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: '#/components/schemas/FlDepthInlandSurgeOutput'
                  - $ref: '#/components/schemas/FlDepthBaseOutput'
                  - $ref: '#/components/schemas/FlDepthInlandProximityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /nz_fl_depth/latest:
    $ref: '#/paths/~1nz_fl_depth~11.0'
  /nz_mmi/18.0:
    post:
      tags:
        - Risk lookups
      summary: New Zealand Earthquake MMI
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/NzAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MmiOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /nz_mmi/latest:
    $ref: '#/paths/~1nz_mmi~118.0'
  /ph_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Philippines Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/PhAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ph_ws_loss_cost/latest:
    $ref: '#/paths/~1ph_ws_loss_cost~118.1'
  /ph_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Philippines Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/PhAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /ph_ws_risk_score/latest:
    $ref: '#/paths/~1ph_ws_risk_score~118.1'
  /sea_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: South East Asia Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/IdAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /sea_eq_loss_cost/latest:
    $ref: '#/paths/~1sea_eq_loss_cost~118.1'
  /sea_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: South East Asia Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/IdAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /sea_eq_risk_score/latest:
    $ref: '#/paths/~1sea_eq_risk_score~118.1'
  /tw_eq_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Taiwan Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/TwAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /tw_eq_loss_cost/latest:
    $ref: '#/paths/~1tw_eq_loss_cost~118.1'
  /tw_eq_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Taiwan Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/TwAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /tw_eq_risk_score/latest:
    $ref: '#/paths/~1tw_eq_risk_score~118.1'
  /tw_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: Taiwan Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/TwAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostGuOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /tw_ws_loss_cost/latest:
    $ref: '#/paths/~1tw_ws_loss_cost~118.1'
  /tw_ws_risk_score/18.1:
    post:
      tags:
        - Risk lookups
      summary: Taiwan Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/TwAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /tw_ws_risk_score/latest:
    $ref: '#/paths/~1tw_ws_risk_score~118.1'
  /us_cs_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Severe Convective Storm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCsAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_cs_loss_cost/latest:
    $ref: '#/paths/~1us_cs_loss_cost~118.0'
  /us_cs_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Severe Convective Storm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCsAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_cs_risk_score/latest:
    $ref: '#/paths/~1us_cs_risk_score~118.0'
  /us_distance_to_fault/17.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Earthquake Faults
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - admin1Code
                      example:
                        $ref: '#/components/examples/USSubsidenceAddress/value'
                layerOptions:
                  type: object
                  properties:
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                        - "miles"
                        - "km"
                      description: "Distance unit of the output"
                      example: "miles"
                      default: "miles"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsEqFaultOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_distance_to_fault/latest:
    $ref: '#/paths/~1us_distance_to_fault~117.0'
  /us_distance_to_fire_station/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Distance to Fire Station
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsNuclearD2TAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsD2FireStationOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_distance_to_fire_station/latest:
    $ref: '#/paths/~1us_distance_to_fire_station~11.0'
  /us_distance_to_inner_coast/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Distance to Inner Coast
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - admin1Code
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsLandfillD2InnerCoastAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsD2InnerCoastOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_distance_to_inner_coast/latest:
    $ref: '#/paths/~1us_distance_to_inner_coast~11.0'
  /us_distance_to_landfill/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Distance to Landfill
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsLandfillD2LAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsD2LandfillOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_distance_to_landfill/latest:
    $ref: '#/paths/~1us_distance_to_landfill~11.0'
  /us_eq_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Earthquake Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - admin2GeoId
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_eq_loss_cost/latest:
    $ref: '#/paths/~1us_eq_loss_cost~118.0'
  /us_eq_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Earthquake Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreUsOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_eq_risk_score/latest:
    $ref: '#/paths/~1us_eq_risk_score~118.0'
  /us_esdb_building_attributes/7.1:
    post:
      tags:
        - Risk lookups
      summary: U.S. ExposureSource Database (ESDB) Building Attributes
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - geoMatchCode
                        - postalCode
                        - streetAddress
                        - cityName
                        - admin1Code
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsTxAddressEsdb/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    useOutputForOtherLayers:
                      type: "boolean"
                      description: "In a composite call, use the ESDB attributes for other risk score and loss cost lookups"
                      default: false
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EsdbOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_esdb_building_attributes/7.2:
    $ref: '#/paths/~1us_esdb_building_attributes~17.1'
  /us_esdb_building_attributes/8.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. ExposureSource Database (ESDB) Building Attributes
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - ugid
                        - postalCode
                        - streetAddress
                        - cityName
                        - admin1Code
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsTxAddressEsdb/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    useOutputForOtherLayers:
                      type: "boolean"
                      description: "In a composite call, use the ESDB attributes for other risk score and loss cost lookups"
                      default: false
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EsdbOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_esdb_building_attributes/latest:
    $ref: '#/paths/~1us_esdb_building_attributes~18.0'
  /us_fema_firm/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. FEMA Firm
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                      description: "Distance unit"
                      default: "feet"
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return flood zones found within this distance from the address (the maximum distance allowed is 1000 feet)"
                      example: 100
                      default: 100
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FemaOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_fema_firm/latest:
    $ref: '#/paths/~1us_fema_firm~11.0'
  /us_fl_depth/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Flood Depth
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    lookup:
                      type: "string"
                      enum:
                        - "floodDepth"
                        - "wetOrDry"
                        - "proximity"
                      description: >
                        Type of lookup: * `floodDepth` - Lookup flood depths * `wetOrDry` - Lookup if the location is wet or dry * `proximity` - Lookup max depth within proximity

                      default: "floodDepth"
                      example: "proximity"
                    defended:
                      type: boolean
                      description: "Max depth is defended/undefended (only applies to lookup type `proximity`)"
                    returnPeriod:
                      type: integer
                      description: "Return period for max depth calculation (only applies to lookup type `proximity`)"
                      example: 1000
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return max depth found within this distance from the address (only applies to lookup type `proximity` and the maximum distance allowed is 1000 meters)"
                      example: 100
                      default: 100
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                      description: "Distance unit"
                      default: "meters"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: '#/components/schemas/FlDepthInlandOutput'
                  - $ref: '#/components/schemas/FlDepthBaseOutput'
                  - $ref: '#/components/schemas/FlDepthInlandSurgeProximityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_fl_depth/latest:
    $ref: '#/paths/~1us_fl_depth~11.0'
  /us_fl_loss_cost/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Flood Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/UsFlAddressExtended/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFlood/value'
                    coverageValues:
                      example:
                        $ref: '#/components/examples/CoverageValuesFlood/value'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %"
                      example: 0.163958568
                    limitAmount:
                      type: "number"
                      format: "double"
                      description: "Limit amount"
                      example: 1888581.191
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostUsFlOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_fl_loss_cost/latest:
    $ref: '#/paths/~1us_fl_loss_cost~11.0'
  /us_fl_risk_score/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Flood Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - admin1Code
                        - postalCodeGeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddressExtended/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFlood/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_fl_risk_score/latest:
    $ref: '#/paths/~1us_fl_risk_score~11.0'
  /us_fl_susceptibility/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Flood Susceptibility
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1GeoId
                        - postalCodeGeoId
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddressExtended/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFlood/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlSusceptibilityOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_fl_susceptibility/latest:
    $ref: '#/paths/~1us_fl_susceptibility~11.0'
  /us_mmi/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Earthquake MMI
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
                    characteristics:
                      type: object
                      example: {}
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MmiOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_mmi/latest:
    $ref: '#/paths/~1us_mmi~118.0'
  /us_subsidence/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Subsidence
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - admin1Code
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/USSubsidenceAddress/value'
                layerOptions:
                  type: object
                  properties:
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return List of sinkholes and mines found within this distance from the address. The maximum distance allowed is 10 miles and default is 1 mile."
                      example: 8
                      default: 1
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                        - "miles"
                        - "km"
                      description: "Distance unit"
                      example: "miles"
                      default: "miles"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USSubsidenceOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_subsidence/latest:
    $ref: '#/paths/~1us_subsidence~118.0'
  /us_tr_distance_to_target/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Terrorism Distance to Target
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsTrD2TAddress/value'
                layerOptions:
                  type: object
                  properties:
                    proximityDistance:
                      type: "number"
                      format: "double"
                      description: "Return List of terrorism targets found within this distance from the address. The maximum distance allowed is 5000 feet and default is 1000 feet."
                      example: 3000
                      default: 1000
                    distanceUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                        - "miles"
                        - "km"
                      description: "Distance unit"
                      example: "miles"
                      default: "miles"
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsTrD2TOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_tr_distance_to_target/latest:
    $ref: '#/paths/~1us_tr_distance_to_target~11.0'
  /us_tr_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Terrorism Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    attackTypeFlag:
                      type: "integer"
                      description: >
                        Perspective: * `0` - All * `1` - Conventional

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_tr_loss_cost/latest:
    $ref: '#/paths/~1us_tr_loss_cost~118.0'
  /us_tr_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Terrorism Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    attackTypeFlag:
                      type: "integer"
                      description: >
                        Perspective: * `0` - All * `1` - Conventional

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_tr_risk_score/latest:
    $ref: '#/paths/~1us_tr_risk_score~118.0'
  /us_wf_loss_cost/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Wildfire Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/USSubsidenceAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsWF/value'
                    coverageValues:
                      example:
                        $ref: '#/components/examples/CoverageValuesFlood/value'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
                    distanceToVegetationUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                        - "miles"
                        - "km"
                      description: "Distance to Vegetation Unit"
                      example: "feet"
                    distanceToVegetation:
                      type: "number"
                      description: "Distance to Vegetation"
                      example: 5
                    roofSystemOptionCode:
                      type: "number"
                      description: "Roof system option code"
                      example: 1
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wf_loss_cost/latest:
    $ref: '#/paths/~1us_wf_loss_cost~11.0'
  /us_wf_model_hazard/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Wildfire Distance to Vegetation, Fuel, Slope
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USWildfireOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wf_model_hazard/latest:
    $ref: '#/paths/~1us_wf_model_hazard~11.0'
  /us_wf_risk_score/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Wildfire Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddressExtended/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsWF/value'
                    coverageValues:
                      example:
                        $ref: '#/components/examples/CoverageValuesFlood/value'
                layerOptions:
                  type: object
                  properties:
                    distanceToVegetationUnit:
                      type: "string"
                      enum:
                        - "feet"
                        - "meters"
                        - "miles"
                        - "km"
                      description: "Distance to Vegetation Unit"
                      example: "feet"
                    distanceToVegetation:
                      type: "number"
                      description: "Distance to Vegetation"
                      example: 5
                    roofSystemOptionCode:
                      type: "number"
                      description: "Roof system option code"
                      example: 1
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsWfRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wf_risk_score/latest:
    $ref: '#/paths/~1us_wf_risk_score~11.0'
  /us_wf_supplemental_hazard/1.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Wildfire Supplemental Hazard
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - countryCode
                        - countryScheme
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsCaAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USWildfireSupplementalOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wf_supplemental_hazard/latest:
    $ref: '#/paths/~1us_wf_supplemental_hazard~11.0'
  /us_ws_asce_windspeed/7.1:
    post:
      tags:
        - Risk lookups
      summary: U.S. Wind Speed
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - admin1Code
                      example:
                        $ref: '#/components/examples/USSubsidenceAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsWindSpeedOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_ws_asce_windspeed/latest:
    $ref: '#/paths/~1us_ws_asce_windspeed~17.1'
  /us_ws_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFloorArea/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    uswsFlag:
                      type: "integer"
                      description: >
                        perspective: * `0` - RMS default settings * `1` - RMS Alternative Florida Vulnerability (Florida Only)

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
                    constructionQualityCodeOption:
                      type: "integer"
                      description: >
                        constructionQualityCodeOption: * `0` - Unknown * `1` - Obvious signs of deterioration or distress * `2` - Wind Only – FORTIFIED Home™/ Commercial, Bronze, Option 1 (U.S. and Canada only) * `3` - Wind Only – FORTIFIED Home/ Commercial, Bronze, Option 2 (U.S. and Canada only) * `4` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 1 (U.S. and Canada only) * `5` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 2 (U.S. and Canada only) * `6` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 1 (U.S. and Canada only) * `7` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 2 (U.S. and Canada only) * `8` - Wind Only – FORTIFIED for Safer Living – [Post 2001] (U.S. and Canada only) * `9` - Certified design and construction * `10` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 1 * `11` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 2 * `12` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 1 * `13` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 2 * `14` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 1 * `15` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 2 * `16` - Hail & Wind – FORTIFIED for Safer Living / Business™ (Post 2001)

                      example: 12
                    roofCoveringCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Metal sheathing with exposed fasteners * `2` - Metal sheathing with concealed fasteners * `3` - Built-up roof or single-ply membrane roof with the presence of gutters * `4` - Built-up roof or single-ply membrane roof without the presence of gutters * `5` - Concrete / clay tiles * `6` - Wood shakes * `7` - Normal shingle * `8` - Normal shingle with Secondary Water Resistance (SWR) * `9` - Shingle rated for high wind speeds * `10` - Shingle rated for high wind speeds with Secondary Water Resistance (SWR) * `16` - Concrete roof * `17` - Bermuda-style roof

                      example: 3
                    roofAgeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - 0–5 years * `2` - 6–10 years * `3` - 11 years or more * `4` - Obvious signs of deterioration or distress

                      example: 2
                    roofGeometryCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Flat roof with parapets * `2` - Flat roof without parapets * `3` - Hip roof with slope less than or equal to 6:12 (26.5 degrees) * `4` - Hip roof with slope greater than 6:12 (26.5 degrees) * `5` - Gable roof with slope less than or equal to 6:12 (26.5 degrees) * `6` - Gable roof with slope greater than 6:12 (26.5 degrees) * `7` - Braced gable roof with slope less than or equal to 6:12 (26.5 degrees) * `8` - Braced gable roof with slope greater than 6:12 (26.5 degrees)

                      example: 0
                    roofAnchorCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Toe nailing / No anchorage * `2` - Clips * `3` - Single wraps * `4` - Double wraps * `5` - Structural

                      example: 3
                    claddingTypeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Brick veneer * `2` - Metal sheathing * `3` - Wood * `4` - EIFS * `5` - Impact rated glazing * `6` - Glazing not designed for impact with gravel rooftop within 1000 ft * `7` - Glazing not designed for impact without gravel rooftop within 1000 ft * `8` - Vinyl siding * `9` - Stucco * `10` - None

                      example: 3
                    roofSheathingCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Batten decking / Skipped sheathing * `2` - 6d Nails – Any nail schedule * `3` - 8d Nails – Minimum nail schedule * `4` - 8d Nails – High wind nail schedule * `5` - 10d Nails – High wind nail schedule * `6` - Dimensional lumber / Tongue & groove decking with a minimum of 2 nails per board

                      example: 2
                    openingProtectionCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - All openings designed for pressure and large missiles (including doors) * `2` - All openings designed for pressure and medium missiles (including doors) * `3` - All openings designed for pressure and small missiles (including doors) * `4` - All glazed openings designed for pressure and large missiles (doors not designed for pressure / impact) * `5` - All glazed openings designed for pressure and medium missiles (doors not designed for pressure / impact) * `6` - All glazed openings designed for pressure and small missiles (doors not designed for pressure / impact) * `7` - All glazed openings covered with plywood/OSB (doors not designed for pressure / impact) * `8` - At least one glazed opening has no windborne debris protection (doors not designed for pressure / impact) * `9` - No exterior openings (glazed or nonglazed) have debris protection * `10` - All glazed openings designed for pressure and large missiles and doors designed for pressure only * `11` - All glazed openings designed for pressure and medium missiles and doors designed for pressure only * `12` - All glazed openings designed for pressure and small missiles and doors designed for pressure only * `13` - All glazed openings covered with plywood / OSB and doors designed for pressure and missile impact * `14` - All glazed openings covered with plywood / OSB and doors designed for pressure only * `15` - No glazed openings have wind-borne debris protection but doors designed for pressure and missile impact * `16` - No glazed openings have wind-borne debris protection but doors designed for pressure only

                      example: 14
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LossCostBaseOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_ws_loss_cost/18.1:
    post:
      tags:
        - Risk lookups
      summary: U.S. Windstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                        - postalCodeGeoId
                      example:
                        $ref: '#/components/examples/UsFlAddressExtended/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFloorArea/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    uswsFlag:
                      type: "integer"
                      description: >
                        perspective: * `0` - RMS default settings * `1` - RMS Alternative Florida Vulnerability (Florida Only)

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
                    constructionQualityCodeOption:
                      type: "integer"
                      description: >
                        constructionQualityCodeOption: * `0` - Unknown * `1` - Obvious signs of deterioration or distress * `2` - Wind Only – FORTIFIED Home™/ Commercial, Bronze, Option 1 (U.S. and Canada only) * `3` - Wind Only – FORTIFIED Home/ Commercial, Bronze, Option 2 (U.S. and Canada only) * `4` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 1 (U.S. and Canada only) * `5` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 2 (U.S. and Canada only) * `6` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 1 (U.S. and Canada only) * `7` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 2 (U.S. and Canada only) * `8` - Wind Only – FORTIFIED for Safer Living – [Post 2001] (U.S. and Canada only) * `9` - Certified design and construction * `10` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 1 * `11` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 2 * `12` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 1 * `13` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 2 * `14` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 1 * `15` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 2 * `16` - Hail & Wind – FORTIFIED for Safer Living / Business™ (Post 2001)

                      example: 12
                    roofCoveringCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Metal sheathing with exposed fasteners * `2` - Metal sheathing with concealed fasteners * `3` - Built-up roof or single-ply membrane roof with the presence of gutters * `4` - Built-up roof or single-ply membrane roof without the presence of gutters * `5` - Concrete / clay tiles * `6` - Wood shakes * `7` - Normal shingle * `8` - Normal shingle with Secondary Water Resistance (SWR) * `9` - Shingle rated for high wind speeds * `10` - Shingle rated for high wind speeds with Secondary Water Resistance (SWR) * `16` - Concrete roof * `17` - Bermuda-style roof

                      example: 3
                    roofAgeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - 0–5 years * `2` - 6–10 years * `3` - 11 years or more * `4` - Obvious signs of deterioration or distress

                      example: 2
                    roofGeometryCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Flat roof with parapets * `2` - Flat roof without parapets * `3` - Hip roof with slope less than or equal to 6:12 (26.5 degrees) * `4` - Hip roof with slope greater than 6:12 (26.5 degrees) * `5` - Gable roof with slope less than or equal to 6:12 (26.5 degrees) * `6` - Gable roof with slope greater than 6:12 (26.5 degrees) * `7` - Braced gable roof with slope less than or equal to 6:12 (26.5 degrees) * `8` - Braced gable roof with slope greater than 6:12 (26.5 degrees)

                      example: 0
                    roofAnchorCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Toe nailing / No anchorage * `2` - Clips * `3` - Single wraps * `4` - Double wraps * `5` - Structural

                      example: 3
                    claddingTypeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Brick veneer * `2` - Metal sheathing * `3` - Wood * `4` - EIFS * `5` - Impact rated glazing * `6` - Glazing not designed for impact with gravel rooftop within 1000 ft * `7` - Glazing not designed for impact without gravel rooftop within 1000 ft * `8` - Vinyl siding * `9` - Stucco * `10` - None

                      example: 3
                    roofSheathingCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Batten decking / Skipped sheathing * `2` - 6d Nails – Any nail schedule * `3` - 8d Nails – Minimum nail schedule * `4` - 8d Nails – High wind nail schedule * `5` - 10d Nails – High wind nail schedule * `6` - Dimensional lumber / Tongue & groove decking with a minimum of 2 nails per board

                      example: 2
                    openingProtectionCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - All openings designed for pressure and large missiles (including doors) * `2` - All openings designed for pressure and medium missiles (including doors) * `3` - All openings designed for pressure and small missiles (including doors) * `4` - All glazed openings designed for pressure and large missiles (doors not designed for pressure / impact) * `5` - All glazed openings designed for pressure and medium missiles (doors not designed for pressure / impact) * `6` - All glazed openings designed for pressure and small missiles (doors not designed for pressure / impact) * `7` - All glazed openings covered with plywood/OSB (doors not designed for pressure / impact) * `8` - At least one glazed opening has no windborne debris protection (doors not designed for pressure / impact) * `9` - No exterior openings (glazed or nonglazed) have debris protection * `10` - All glazed openings designed for pressure and large missiles and doors designed for pressure only * `11` - All glazed openings designed for pressure and medium missiles and doors designed for pressure only * `12` - All glazed openings designed for pressure and small missiles and doors designed for pressure only * `13` - All glazed openings covered with plywood / OSB and doors designed for pressure and missile impact * `14` - All glazed openings covered with plywood / OSB and doors designed for pressure only * `15` - No glazed openings have wind-borne debris protection but doors designed for pressure and missile impact * `16` - No glazed openings have wind-borne debris protection but doors designed for pressure only

                      example: 14
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_ws_loss_cost/21.0:
    $ref: '#/paths/~1us_ws_loss_cost~118.1'
  /us_ws_loss_cost/latest:
    $ref: '#/paths/~1us_ws_loss_cost~118.1'
  /us_ws_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Windstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsFloorArea/value'
                    coverageValues:
                      type: object
                      example: {}
                layerOptions:
                  type: object
                  properties:
                    uswsFlag:
                      type: "integer"
                      description: >
                        perspective: * `0` - RMS default settings * `1` - RMS Alternative Florida Vulnerability (Florida Only)

                      minimum: 0
                      maximum: 1
                      default: 0
                      example: 0
                    constructionQualityCodeOption:
                      type: "integer"
                      description: >
                        constructionQualityCodeOption: * `0` - Unknown * `1` - Obvious signs of deterioration or distress * `2` - Wind Only – FORTIFIED Home™/ Commercial, Bronze, Option 1 (U.S. and Canada only) * `3` - Wind Only – FORTIFIED Home/ Commercial, Bronze, Option 2 (U.S. and Canada only) * `4` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 1 (U.S. and Canada only) * `5` - Wind Only – FORTIFIED Home/ Commercial, Silver, Option 2 (U.S. and Canada only) * `6` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 1 (U.S. and Canada only) * `7` - Wind Only – FORTIFIED Home/ Commercial, Gold, Option 2 (U.S. and Canada only) * `8` - Wind Only – FORTIFIED for Safer Living – [Post 2001] (U.S. and Canada only) * `9` - Certified design and construction * `10` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 1 * `11` - Hail & Wind – FORTIFIED Home/ Commercial, Bronze, Option 2 * `12` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 1 * `13` - Hail & Wind – FORTIFIED Home/ Commercial, Silver, Option 2 * `14` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 1 * `15` - Hail & Wind – FORTIFIED Home/ Commercial, Gold, Option 2 * `16` - Hail & Wind – FORTIFIED for Safer Living / Business™ (Post 2001)

                      example: 12
                    roofCoveringCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Metal sheathing with exposed fasteners * `2` - Metal sheathing with concealed fasteners * `3` - Built-up roof or single-ply membrane roof with the presence of gutters * `4` - Built-up roof or single-ply membrane roof without the presence of gutters * `5` - Concrete / clay tiles * `6` - Wood shakes * `7` - Normal shingle * `8` - Normal shingle with Secondary Water Resistance (SWR) * `9` - Shingle rated for high wind speeds * `10` - Shingle rated for high wind speeds with Secondary Water Resistance (SWR) * `16` - Concrete roof * `17` - Bermuda-style roof

                      example: 3
                    roofAgeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - 0–5 years * `2` - 6–10 years * `3` - 11 years or more * `4` - Obvious signs of deterioration or distress

                      example: 2
                    roofGeometryCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Flat roof with parapets * `2` - Flat roof without parapets * `3` - Hip roof with slope less than or equal to 6:12 (26.5 degrees) * `4` - Hip roof with slope greater than 6:12 (26.5 degrees) * `5` - Gable roof with slope less than or equal to 6:12 (26.5 degrees) * `6` - Gable roof with slope greater than 6:12 (26.5 degrees) * `7` - Braced gable roof with slope less than or equal to 6:12 (26.5 degrees) * `8` - Braced gable roof with slope greater than 6:12 (26.5 degrees)

                      example: 0
                    roofAnchorCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Toe nailing / No anchorage * `2` - Clips * `3` - Single wraps * `4` - Double wraps * `5` - Structural

                      example: 3
                    claddingTypeCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Brick veneer * `2` - Metal sheathing * `3` - Wood * `4` - EIFS * `5` - Impact rated glazing * `6` - Glazing not designed for impact with gravel rooftop within 1000 ft * `7` - Glazing not designed for impact without gravel rooftop within 1000 ft * `8` - Vinyl siding * `9` - Stucco * `10` - None

                      example: 3
                    roofSheathingCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - Batten decking / Skipped sheathing * `2` - 6d Nails – Any nail schedule * `3` - 8d Nails – Minimum nail schedule * `4` - 8d Nails – High wind nail schedule * `5` - 10d Nails – High wind nail schedule * `6` - Dimensional lumber / Tongue & groove decking with a minimum of 2 nails per board

                      example: 2
                    openingProtectionCodeOption:
                      type: "integer"
                      description: >
                        * `0` - Unknown * `1` - All openings designed for pressure and large missiles (including doors) * `2` - All openings designed for pressure and medium missiles (including doors) * `3` - All openings designed for pressure and small missiles (including doors) * `4` - All glazed openings designed for pressure and large missiles (doors not designed for pressure / impact) * `5` - All glazed openings designed for pressure and medium missiles (doors not designed for pressure / impact) * `6` - All glazed openings designed for pressure and small missiles (doors not designed for pressure / impact) * `7` - All glazed openings covered with plywood/OSB (doors not designed for pressure / impact) * `8` - At least one glazed opening has no windborne debris protection (doors not designed for pressure / impact) * `9` - No exterior openings (glazed or nonglazed) have debris protection * `10` - All glazed openings designed for pressure and large missiles and doors designed for pressure only * `11` - All glazed openings designed for pressure and medium missiles and doors designed for pressure only * `12` - All glazed openings designed for pressure and small missiles and doors designed for pressure only * `13` - All glazed openings covered with plywood / OSB and doors designed for pressure and missile impact * `14` - All glazed openings covered with plywood / OSB and doors designed for pressure only * `15` - No glazed openings have wind-borne debris protection but doors designed for pressure and missile impact * `16` - No glazed openings have wind-borne debris protection but doors designed for pressure only

                      example: 14
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreUsOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_ws_risk_score/18.1:
    $ref: '#/paths/~1us_ws_risk_score~118.0'
  /us_ws_risk_score/21.0:
    $ref: '#/paths/~1us_ws_risk_score~118.0'
  /us_ws_risk_score/latest:
    $ref: '#/paths/~1us_ws_risk_score~118.0'
  /us_ws_windpool_zone/1.0:
    post:
      tags:
        - Windstorm hazard lookup
      summary: U.S. Wind Pool Zones for Alabama, Florida, Georgia, Louisiana, Mississippi, New Jersey, North Carolina, South Carolina, Texas.
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AddressInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - latitude
                        - longitude
                        - countryRmsCode
                        - admin1Code
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/USWindpoolZoneAddress/value'
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindpoolZoneOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_ws_windpool_zone/latest:
    $ref: '#/paths/~1us_ws_windpool_zone~11.0'
  /us_wt_loss_cost/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Winterstorm Loss Cost
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      $ref: '#/components/schemas/CoverageValuesInput'
                layerOptions:
                  type: object
                  properties:
                    deductibleType:
                      type: "integer"
                      description: >
                        Deductible type: * `1` - Building * `2` - Contents * `3` - BI * `4` - Combined * `5` - Site

                      minimum: 1
                      maximum: 5
                      example: 1
                    deductibleAmount:
                      type: "number"
                      format: "double"
                      description: "Deductible amount in %, or dollar amount"
                      example: 0.10
                    deductibleAmount2:
                      type: "number"
                      format: "double"
                      description: "Deductible 2 amount in %, or dollar amount"
                      example: 0.05
                    deductibleAmount3:
                      type: "number"
                      format: "double"
                      description: "Deductible 3 amount in %, or dollar amount"
                      example: 0.02
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuGrLossCostOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wt_loss_cost/latest:
    $ref: '#/paths/~1us_wt_loss_cost~118.0'
  /us_wt_risk_score/18.0:
    post:
      tags:
        - Risk lookups
      summary: U.S. Winterstorm Risk Score
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LocationInput'
                    - type: object
                  properties:
                    address:
                      type: object
                      required:
                        - admin1Code
                        - latitude
                        - longitude
                        - countryRmsCode
                        - rmsGeoModelResolutionCode
                      example:
                        $ref: '#/components/examples/UsFlAddress/value'
                    characteristics:
                      example:
                        $ref: '#/components/examples/CharacteristicsBasic/value'
                    coverageValues:
                      type: object
                      example: {}
        required: true
      responses:
        '200':
          description: Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WtRiskScoreOutput'
        '400':
          $ref: '#/components/responses/400Response'
        '401':
          $ref: '#/components/responses/401Response'
        '500':
          $ref: '#/components/responses/500Response'
  /us_wt_risk_score/latest:
    $ref: '#/paths/~1us_wt_risk_score~118.0'
components:
  schemas:
    GeocodeInput:
      type: object
      required:
        - countryCode
        - countryScheme
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "User defined id"
          example: 0
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "CA"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "CALIFORNIA"
          maxLength: 256
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "001"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "ALAMEDA COUNTY"
          maxLength: 256
        admin3Code:
          type: "string"
          description: "Code for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: ""
          maxLength: 16
        admin3Name:
          type: "string"
          description: "Name of administrative level 3"
          example: ""
          maxLength: 256
        admin4Code:
          type: "string"
          description: "Code for administrative level 4"
          example: "044230130"
          maxLength: 16
        admin4Name:
          type: "string"
          description: "Name of administrative level 4"
          example: "044230130"
          maxLength: 256
        cityName:
          type: "string"
          description: "Name of City/Town"
          example: "NEWARK"
          maxLength: 256
        countryCode:
          type: "string"
          description: "Country Code (optional for geocoding if latitude and longitude are provided)"
          example: "US"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United States"
          maxLength: 512
        countryScheme:
          type: "string"
          description: "Standard for user-supplied country code (optional for geocoding if latitude and longitude are provided)"
          example: "ISO2A"
          enum:
            - "ISO2A"
            - "ISO3A"
            - "ISO3N"
            - "FIPS"
        latitude:
          type: "number"
          format: "double"
          description: "Location Latitude"
          example: 37.54120000000001
          minimum: -90
          maximum: 90
        longitude:
          type: "number"
          format: "double"
          description: "Location Longitude"
          example: -122.06061000000001
          minimum: -180
          maximum: 180
        postalCode:
          type: "string"
          description: "Postal Code"
          example: "94560"
          maxLength: 16
        streetAddress:
          type: "string"
          description: "Address containing Number, Street Name, Street Type, etc."
          example: "7575 GATEWAY BLVD"
          maxLength: 256
        name:
          type: "string"
          description: "Supplemental text captured for the address"
          example: ""
          maxLength: 512
    GeocodeOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/GeocodeInput'
        - type: object
          properties:
            admin1GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
              example: 99999106
            admin2GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
              example: 99999206001
            admin3GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for administrative level 3. Code for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
              example: 12695859
            admin4GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for administrative level 4."
              example: 62219571
            admin5GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for administrative level 5."
              example: 0
            cityGeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for City/Town"
              example: 999993061080
            countryFips:
              type: "string"
              description: "Country FIPS code"
              example: "US"
              maxLength: 4
            countryGeoId:
              type: "integer"
              description: "Globally unique ID for Country"
              example: 840
            countryRmsCode:
              type: "string"
              description: "RMS code for Country"
              example: "US"
              maxLength: 4
            geoDataSourceId:
              type: "integer"
              description: "Geocode Data Source ID"
              example: 8
            geoMatchCode:
              type: "string"
              description: "Code for portions of the input address that matched, did not match, or were modified during the geocoding process."
              example: "T1-999993061080-T1A1-S0T100A100-S1A1-00-B-A-X"
              maxLength: 255
            locationCode:
              type: "string"
              description: "Census Tract Number / Sonpo / Sector / Short Postal Code"
              example: "060014443.01"
              maxLength: 16
            locationCodeGeoId:
              type: "integer"
              format: "int64"
              description: "Unique identification code for the location"
              example: 0
            parcelId:
              type: "integer"
              format: "int64"
              description: "Parcel id"
              example: 0
            postalCodeGeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for postal code"
              example: 99999494560
            rmsGeoModelResolutionCode:
              type: "integer"
              description: >
                Address match level: * `0` - None * `1` - Coordinate * `2` - Street / Parcel / Building * `3` - High Resolution Postcode / Other * `4` - Block Group/Census Tract * `5` - Postal code * `6` - Neighborhood * `7` - City * `8` - District / Municipality * `9` - County * `10` - State/Province * `11` - CRESTA * `12` - Multiple * `13` - User Defined * `14` - Country

              example: 2
              minimum: 0
              maximum: 14
            rmsGeocodingResolutionCode:
              type: "integer"
              description: "Indicates the geocoding resolutions that are supported by the ACORD standard"
              example: 31
            ugid:
              type: "string"
              description: "Unique global identifier"
              example: "USS3121778167575"
              maxLength: 50
            zone1Code:
              type: "string"
              description: "CRESTA code"
              example: "A2"
              maxLength: 16
            zone2Code:
              type: "string"
              description: "zone2 code"
              example: ""
              maxLength: 16
            zone3Code:
              type: "string"
              description: "zone3 code (Low Resolution CRESTA Zone)"
              example: ""
              maxLength: 16
            zone4Code:
              type: "string"
              description: "zone4 code (High Resolution CRESTA Zone)"
              example: ""
              maxLength: 16
            zone3Name:
              type: "string"
              description: "zone3 name (Low Resolution CRESTA Zone)"
              example: ""
              maxLength: 256
            zone4Name:
              type: "string"
              description: "zone4 name (High Resolution CRESTA Zone)"
              example: ""
              maxLength: 256
            zone1GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for Zone1 (CRESTA)"
              example: 999995062
            zone2GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for Zone2 (CRESTA)"
              example: 0
            zone3GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for Zone3 (Low Resolution CRESTA Zone)"
              example: 22505979
            zone4GeoId:
              type: "integer"
              format: "int64"
              description: "Globally unique ID for Zone4 (High Resolution CRESTA Zone)"
              example: 20235111
            dataVersion:
              type: "string"
              description: "Data version"
              example: "xx.x.xxxx.x"
              maxLength: 20
    ReferenceTableCountryOutput:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "US"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "US"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "US"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United States"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 840
    ReferenceTableCountryListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableCountryOutput'
    ReferenceTableAdmin1Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "US"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "US"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "US"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United States"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 840
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "CA"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "CALIFORNIA"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 99999106
    ReferenceTableAdmin1ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableAdmin1Output'
    ReferenceTableAdmin2Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "US"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "US"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "US"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United States"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 840
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "CA"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "CALIFORNIA"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 99999106
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "001"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "ALAMEDA COUNTY"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 99999206001
    ReferenceTableAdmin2ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableAdmin2Output'
    ReferenceTableAdmin3Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "AE"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "AE"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "AE"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United Arab Emirates"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 784
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: ""
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "Dubai"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 2347111
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: ""
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "Dubai"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 61762805
        admin3Code:
          type: "string"
          description: "Code for administrative level 3. Admin3 represents smaller geographic divisions than Admin2, such as municipality."
          example: ""
          maxLength: 16
        admin3Name:
          type: "string"
          description: "Name of administrative level 3"
          example: "Umm Suqeim Second"
          maxLength: 256
        admin3GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 3. Admin3 represents smaller geographic divisions than Admin2, such as municipality."
          example: 61762880
    ReferenceTableAdmin3ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableAdmin3Output'
    ReferenceTableAdmin4Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "PE"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "PE"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "PE"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "Peru"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 604
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "15"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "Lima"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 2346482
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "1501"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "Lima"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 64079965
        cityCode:
          type: "string"
          description: "Code for city or town."
          example: "335570"
          maxLength: 16
        cityName:
          type: "string"
          description: "Name of city"
          example: "Lima CBD"
          maxLength: 256
        cityGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for city or town."
          example: 30335570
        admin4Code:
          type: "string"
          description: "Code for administrative level 4. Admin4 represents smaller geographic divisions than Admin3, such as neighborhood/district."
          example: "71043"
          maxLength: 16
        admin4Name:
          type: "string"
          description: "Name of administrative level 4"
          example: "Lima San Isidro CBD"
          maxLength: 256
        admin4GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 4. Admin4 represents smaller geographic divisions than Admin3, such as neighborhood/district."
          example: 71071043
    ReferenceTableAdmin4ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableAdmin4Output'
    ReferenceTablePostalCodeOutput:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "US"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "US"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "US"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United States"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 840
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "CA"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "CALIFORNIA"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 99999106
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "001"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "ALAMEDA COUNTY"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 99999206001
        admin3Code:
          type: "string"
          description: "Code for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: "NE1"
          maxLength: 16
        admin3Name:
          type: "string"
          description: "Name of administrative level 3"
          example: ""
          maxLength: 256
        admin3GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: 12695859
        cityName:
          type: "string"
          description: "Name of City/Town"
          example: "NEWARK"
          maxLength: 256
        cityGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for City/Town"
          example: 999993061080
        postalCode:
          type: "string"
          description: "Postal Code"
          example: "94560"
          maxLength: 16
        postalCodeGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for postal code"
          example: 99999494560
    ReferenceTablePostalCodeListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTablePostalCodeOutput'
    ReferenceTableLocationCodeOutput:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "GB"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "UK"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "GB"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "United Kingdom"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 826
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "103"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "England"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 24554868
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "103"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "Dudley"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 30277299
        admin3Code:
          type: "string"
          description: "Code for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: "E07CR0"
          maxLength: 16
        admin3Name:
          type: "string"
          description: "Name of administrative level 3"
          example: "Dudley"
          maxLength: 256
        admin3GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: 12695865
        cityName:
          type: "string"
          description: "Name of City/Town"
          example: "Halesowen"
          maxLength: 256
        cityGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for City/Town"
          example: 22165
        locationCode:
          type: "string"
          description: "Location Code"
          example: "B62 2"
          maxLength: 16
        locationCodeGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for postal code"
          example: 60550885
    ReferenceTableLocationCodeListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableLocationCodeOutput'
    ReferenceTableCityOutput:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "AG"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "AC"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "CB"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "Antigua and Barbuda"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 28
        admin1Code:
          type: "string"
          description: "Code for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: "200"
          maxLength: 16
        admin1Name:
          type: "string"
          description: "Name of administrative level 1"
          example: "Barbuda"
          maxLength: 256
        admin1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 1. Admin1 represents large geographic divisions, such as states and provinces."
          example: 60375118
        admin2Code:
          type: "string"
          description: "Code for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: "200"
          maxLength: 16
        admin2Name:
          type: "string"
          description: "Name of administrative level 2"
          example: "Barbuda"
          maxLength: 256
        admin2GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 2. Admin2 represents smaller geographic divisions than Admin1, such as counties."
          example: 2344541
        admin3Code:
          type: "string"
          description: "Code for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: "28200001"
          maxLength: 16
        admin3Name:
          type: "string"
          description: "Name of administrative level 3"
          example: "AG001"
          maxLength: 256
        admin3GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for administrative level 3. Admin3 represents even smaller geographic divisions than Admin2, such as districts."
          example: 60372390
        cityCode:
          type: "string"
          description: "Code for City/Town"
          example: "282001"
        cityName:
          type: "string"
          description: "Name of City/Town"
          example: "The Caves"
          maxLength: 256
        cityGeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for City/Town"
          example: 56228
    ReferenceTableCityListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableCityOutput'
    ReferenceTableZone1Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "DK"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "DA"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "DK"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "Denmark"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 208
        zone1Name:
          type: "string"
          description: "Name of CRESTA zone"
          example: "3"
          maxLength: 256
        zone1GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for CRESTA zones."
          example: 60344626
    ReferenceTableZone1ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableZone1Output'
    ReferenceTableZone3Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "JP"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "JA"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "JP"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "Japan"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 392
        zone3Name:
          type: "string"
          description: "Name of Low-resolution CRESTA Zone"
          example: "JPN_04"
          maxLength: 256
        zone3GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for Low-resolution CRESTA Zone."
          example: 64021802
    ReferenceTableZone3ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableZone3Output'
    ReferenceTableZone4Output:
      type: object
      properties:
        countryIso2a:
          type: "string"
          description: "Country ISO2A code"
          example: "CZ"
          maxLength: 2
        countryFips:
          type: "string"
          description: "Country FIPS code"
          example: "EZ"
          maxLength: 4
        countryRmsCode:
          type: "string"
          description: "RMS code for Country"
          example: "CZ"
          maxLength: 4
        countryName:
          type: "string"
          description: "Name of Country"
          example: "Czech Republic"
          maxLength: 512
        countryGeoId:
          type: "integer"
          description: "Globally unique ID for Country"
          example: 203
        zone4Name:
          type: "string"
          description: "Name of CRESTA zone"
          example: "CZE_68742"
          maxLength: 256
        zone4GeoId:
          type: "integer"
          format: "int64"
          description: "Globally unique ID for CRESTA zones."
          example: 64048047
    ReferenceTableZone4ListOutput:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceTableZone4Output'
    LocationInput:
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/GeocodeOutput'
        characteristics:
          $ref: '#/components/schemas/CharacteristicsInput'
        coverageValues:
          $ref: '#/components/schemas/CoverageValuesInput'
    GlobalLocationInput:
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/GeocodeOutput'
        characteristics:
          $ref: '#/components/schemas/CharacteristicsInput'
        coverageValues:
          $ref: '#/components/schemas/CoverageValuesInput'
    AddressInput:
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/GeocodeOutput'
    CharacteristicsInput:
      type: object
      properties:
        construction:
          type: string
          description: "Construction combines both scheme and class. Construction `scheme` (e.g., ATC) is represented by the letters at the beginning. It is a system used for classifying a building's construction class. Construction `class` is represented by the number(s) following the scheme. It is an attribute referring to the dominant material used in constructing the building frame/structure. Unknown=0."
          example: "ATC1"
          default: "ATC0"
          externalDocs:
            description: "List of constructions"
            url: "https://support.rms.com/techpub/OLH_Content/RLRB_Online_Library/Index.htm#RL_RB_DLM_Ref/Supported_Const_Class_Schemes_by_Country.htm"
        occupancy:
          type: string
          description: "Occupancy combines both scheme and type. Occupancy `scheme` (e.g., ATC) is represented by the letters at the beginning. It is the classification used for identifying a building's occupancy type. Occupancy `type` is represented by the number(s) following the scheme. It is an attribute that describes the typical or dominant use of the building (e.g., residential, or schools, or commercial usage). Unknown=0."
          example: "ATC1"
          default: "ATC0"
          externalDocs:
            description: "List of occupancies"
            url: "https://support.rms.com/techpub/OLH_Content/RLRB_Online_Library/Index.htm#RL_RB_DLM_Ref/Supported_Occ_Type_Schemes_by_Country.htm"
        yearBuilt:
          type: "integer"
          description: "Attribute describing the year when a structure was constructed. For many RMS peril models, year built is a primary vulnerability attribute."
          example: 1980
          default: 0
        numOfStories:
          type: "integer"
          description: "Attribute that represents the number of floors for a structure. It is a single number, such as 6 or 22, not a range of numbers. Structures are classified according to the number of floors they have."
          default: 0
          example: 1
        foundationType:
          type: "integer"
          description: "Attribute that captures this differentiating factor for flood risk. This attribute is used to infer the height of the first floor during hazard retrieval."
          default: 0
          example: 0
        firstFloorHeightAboveGround:
          type: "integer"
          description: "First floor height above ground"
          example: 5
          default: 0
        basement:
          type: "string"
          description: "Indicates whether there is a basement or not"
          example: "YES"
          default: "DEFAULT"
          enum:
            - "DEFAULT"
            - "YES"
            - "NO"
        floorArea:
          type: "integer"
          description: "Floor area is a primary building characteristic that represents a building's total living area, across all floors. It excludes garages, porches, decks, sunrooms, and basements."
          example: 1452
          default: 0
    CoverageValuesInput:
      type: object
      properties:
        buildingValue:
          type: "number"
          format: "double"
          description: "Building value"
          default: 0
          example: 1000000
        contentsValue:
          type: "number"
          format: "double"
          description: "Contents value"
          default: 0
          example: 100000
        businessInterruptionValue:
          type: "number"
          format: "double"
          description: "Business interruption value"
          default: 0
          example: 50000
    MmiBaseOutput:
      type: object
      description: "The Modified Mercalli Intensity (MMI) is a subjective scale used to describe the observed local shaking intensity and related effects of an earthquake. The scale ranges from 1 (barely felt) to 12 (total destruction), with slight damage beginning at 6."
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        mmi100yr:
          type: "number"
          format: "double"
          description: "100-year MMI score"
          example: 0
        mmi200yr:
          type: "number"
          format: "double"
          description: "200-year MMI score"
          example: 0
        mmi250yr:
          type: "number"
          format: "double"
          description: "250-year MMI score"
          example: 4.1
        mmi475yr:
          type: "number"
          format: "double"
          description: "475-year MMI score"
          example: 6.3
        mmi500yr:
          type: "number"
          format: "double"
          description: "500-year MMI score"
          example: 6.5
        mmi1000yr:
          type: "number"
          format: "double"
          description: "1000-year MMI score"
          example: 8.0
    MmiOutput:
      type: object
      description: "The Modified Mercalli Intensity (MMI) is a subjective scale used to describe the observed local shaking intensity and related effects of an earthquake. The scale ranges from 1 (barely felt) to 12 (total destruction), with slight damage beginning at 6."
      allOf:
        - $ref: '#/components/schemas/MmiBaseOutput'
        - type: object
          properties:
            mmi1500yr:
              type: "number"
              format: "double"
              description: "1500-year MMI score"
              example: 8.5
    EsdbOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        id:
          type: "integer"
          description: "Client location id for purposes of matching input and output"
          example: 1234
        multipleBuildingFlag:
          type: "string"
          description: "Potential for multiple buildings"
          example: "Unknown"
          maxLength: 7
        isPrimaryBuildingFlag:
          type: "integer"
          description: "Represents the building to be returned when multiple buildings exist. Yes=1; No=0"
          example: 0
        isHD:
          type: "integer"
          description: "Indicates whether the record is part of HD data set"
          example: 0
        numOfStories:
          type: "integer"
          description: "Attribute that represents the number of floors for a structure. It is a single number, such as 6 or 22, not a range of numbers. Structures are classified according to the number of floors they have."
          example: 3
        numOfStoriesSource:
          type: "string"
          description: "Flag for source of numOfStories data returned"
          example: "E"
          maxLength: 1
        floorArea:
          type: "integer"
          description: "Floor area is a primary building characteristic that represents a building's total living area, across all floors. It excludes garages, porches, decks, sunrooms, and basements."
          example: 1452
        floorAreaSource:
          type: "string"
          description: "Flag for source of floorArea data returned"
          example: "E"
          maxLength: 1
        yearBuilt:
          type: "integer"
          description: "Attribute describing the year when a structure was constructed. For many RMS peril models, year built is a primary vulnerability attribute."
          example: 1965
        yearBuiltSource:
          type: "string"
          description: "Flag for source of yearBuilt data returned"
          example: "E"
          maxLength: 1
        buildingHeight:
          type: "integer"
          description: "Building Height in feet"
          example: 400
        construction:
          type: "string"
          description: "Construction combines both scheme and class. Construction `scheme` (e.g., ATC) is represented by the letters at the beginning. It is a system used for classifying a building's construction class. Construction `class` is represented by the number(s) following the scheme. It is an attribute referring to the dominant material used in constructing the building frame/structure. Unknown=0."
          example: "ATC1"
          maxLength: 16
        constructionSource:
          type: "string"
          description: "Flag for source of construction data returned "
          example: "E"
          maxLength: 1
        occupancy:
          type: "string"
          description: "Occupancy combines both scheme and type. Occupancy `scheme` (e.g., ATC) is represented by the letters at the beginning. It is the classification used for identifying a building's occupancy type. Occupancy `type` is represented by the number(s) following the scheme. It is an attribute that describes the typical or dominant use of the building (e.g., residential, or schools, or commercial usage). Unknown=0."
          example: "ATC1"
          maxLength: 16
        occupancySource:
          type: "string"
          description: "Flag for source of occupancy data returned "
          example: "E"
          maxLength: 1
        occupancy2: #Is secondaryOccupancy in the spec
          type: "string"
          description: "Second Occupancy Scheme and Code"
          example: "ATC2"
          maxLength: 16
        occupancy3: #Is tertiaryOccupancy in the spec
          type: "string"
          description: "Third Occupancy Scheme and Code"
          example: "ATC3"
          maxLength: 16
        roofCoverCode:
          type: "string"
          description: "Code for modifier that captures the presence of roof covering that affects losses depending on the uplift resistance of the roof cover elements and their replacement costs."
          example: "RMS7"
          maxLength: 16
        roofCoverDescription:
          type: "string"
          description: "Roofing material description"
          example: "COMPOSITION SHINGLE"
          maxLength: 256
        airConditioningDescription:
          type: "string"
          description: "Air conditioning description"
          example: "CENTRAL"
          maxLength: 256
        exteriorDescription:
          type: "string"
          description: "Modifier that describes the exterior of the building (cladding) with respect to its damageability and performance in earthquakes, floods, severe convective storms, and windstorms."
          example: "BRICK VENEER"
          maxLength: 256
        roofGeometryCode:
          type: "string"
          description: "Code for modifier that captures the roof geometry, which determines the magnitude and extent of wind forces experienced on the roof."
          example: "4"
          maxLength: 16
        roofGeometryDescription:
          type: "string"
          description: "Roof Geometry description"
          example: "Gable roof high pitch (>30ยบ)"
          maxLength: 256
        floorOccupancy:
          type: "string"
          description: "Modifier used in RMS products that captures the number of floors occupied, either a single floor or a range of floors. Positive numbers represent floors above grade, and negative numbers represent floors below grade (basement levels)."
          example: "-1"
          maxLength: 3
        floorOccupancyDescription:
          type: "string"
          description: "Basement description"
          example: "Finished"
          maxLength: 256
        foundationSystemDescription:
          type: "string"
          description: "Attribute that captures this differentiating factor for flood risk. This attribute is used to infer the height of the first floor during hazard retrieval."
          example: "POST AND PIER"
          maxLength: 256
        heatingTypeDescription:
          type: "string"
          description: "Type of heating"
          example: "CENTRAL"
          maxLength: 256
        numberOfBaths:
          type: "string"
          description: "Count of bathrooms"
          example: "2"
          maxLength: 5
        numberOfBedrooms:
          type: "string"
          description: "Count of bedrooms"
          example: "3"
          maxLength: 5
        numberOfUnits:
          type: "string"
          description: "Count of units in building (if MFD)"
          example: "1"
          maxLength: 5
        pool:
          type: "string"
          description: "Presence of Pool"
          example: "NOT PRESENT"
          maxLength: 80
        garagingDescription:
          type: "string"
          description: "Modifier that captures the presence of garages to specify where automobiles are parked and the relative protection from hail and similar hazards."
          example: "GARAGE - ATTACHED"
          maxLength: 256
        buildingValuationUpperRange:
          type: "number"
          format: "double"
          description: "Maximum probable building value for given property"
          example: 210000.0
        buildingValuationLowerRange:
          type: "number"
          format: "double"
          description: "Minimum probable building value for given property"
          example: 180000.0
        currencyCode:
          type: "string"
          description: "Currency of valuation. Two- or three-letter ISO code used to represent an individual currency."
          example: "USD"
          maxLength: 3
        versionId:
          type: "number"
          format: "double"
          description: "ESDB version id"
          example: 0.0
    CsRiskScoreOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        score50yr:
          type: "number"
          format: "integer"
          description: "The combined Risk Score at the 1 in 50 return period"
          example: 1
        score100yr:
          type: "number"
          format: "integer"
          description: "The combined Risk Score at the 1 in 100 return period"
          example: 1
        score250yr:
          type: "number"
          format: "integer"
          description: "The combined Risk Score at the 1 in 250 return period"
          example: 1
        scoreOverall:
          type: "number"
          format: "integer"
          description: "The combined Risk Score at the 1 in 100 return period"
          example: 1
        dominantSubperil:
          type: "number"
          format: "double"
          description: "The dominant sub-peril driving the combined Risk Score at the 1 in 100 return period - 1=Hail, 2=Tornado, 3=Wind, 0=no dominant peril (because 2 or 3 perils have the same value - very unlikely, but to handle this eventuality for completeness)"
          example: 1.1
        percentileAdmin1:
          type: "number"
          format: "double"
          description: "Percentile in State"
          example: 1.1
    CsLossCostOutput:
      type: object
      description: "`Loss cost`, also known as average annual loss (AAL), is derived using RMS models and account for hazard and vulnerability from detailed loss modeling of the peril region. To produce an annualized loss, losses from every event affecting each location are multiplied by the annual rate (probability) of the hazards causing that loss. The sum of the annualized losses at each location produces the AAL for that location, which is normalized by the exposure to yield the `annualized loss rate` (ALR). This calculation is performed for buildings, contents, and business interruption coverages. Total insured values (TIVs) for the relevant coverage are then applied to give the loss cost for each coverage."
      allOf:
        - $ref: '#/components/schemas/GuGrLossCostOutput'
        - type: object
          properties:
            buildingAlrHail:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Buildings coverage for hail"
              example: 1.1
            contentsAlrHail:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Contents coverage for hail"
              example: 1.1
            businessInterruptionAlrHail:
              type: "number"
              format: "double"
              description: "The annualized loss rate for BI coverage for hail"
              example: 1.1
            buildingAlrTornado:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Buildings coverage for tornado"
              example: 1.1
            contentsAlrTornado:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Contents coverage for tornado"
              example: 1.1
            businessInterruptionAlrTornado:
              type: "number"
              format: "double"
              description: "The annualized loss rate for BI coverage for tornado"
              example: 1.1
            buildingAlrWind:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Buildings coverage for wind"
              example: 1.1
            businessInterruptionAlrWind:
              type: "number"
              format: "double"
              description: "The annualized loss rate for BI coverage for wind"
              example: 1.1
            contentsAlrWind:
              type: "number"
              format: "double"
              description: "The annualized loss rate for Contents coverage for wind"
              example: 1.1
    FlSusceptibilityOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        dtmElevation:
          type: "number"
          format: "double"
          description: "DTM elevation"
          example: 108.07087
        firstFloorHeightAboveGround:
          type: "number"
          description: "Captures the height of first finished floor above ground in feet"
          example: 2
        percentBasement:
          type: "number"
          format: "double"
          description: "Basement likelihood for a location is a percentage. The presence of basement floors in a building can significantly increase flood losses, particularly in high-rise commercial buildings, which can have high contents value in basements."
          example: 0.05
    FlDepthBaseOutput:
      type: object
      description: "results for `wetOrDry` lookup"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        status:
          type: "string"
          description: "Status"
          enum:
            - "NOT FLOODED"
            - "FLOODED"
          example: "FLOODED"
    FlDepthInlandProximityOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/FlDepthBaseOutput'
        - type: object
      description: "results for `proximity` lookup"
      properties:
        maxDepthWithinRadius:
          type: "integer"
          description: "Max depth within radius"
          example: 1
    FlDepthInlandSurgeProximityOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/FlDepthInlandProximityOutput'
        - type: object
      description: "results for `proximity` lookup"
      properties:
        dominantFloodSource:
          type: "string"
          description: "Dominant flood source"
          enum:
            - "INLAND"
            - "SURGE"
          example: "INLAND"
    FlDepthInlandOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/FlDepthBaseOutput'
        - type: object
      description: "results for `floodDepth` lookup"
      properties:
        depthInlandUndef30yr:
          type: "integer"
          description: "Depth inland undefended 30-year"
          example: 4
        depthInlandDef30yr:
          type: "integer"
          description: "Depth inland defended 30-year"
          example: 3
        depthInlandUndef50yr:
          type: "integer"
          description: "Depth inland undefended 50-year"
          example: 5
        depthInlandDef50yr:
          type: "integer"
          description: "Depth inland defended 50-year"
          example: 3
        depthInlandUndef100yr:
          type: "integer"
          description: "Depth inland undefended 100-year"
          example: 5
        depthInlandDef100yr:
          type: "integer"
          description: "Depth inland defended 100-year"
          example: 5
        depthInlandUndef200yr:
          type: "integer"
          description: "Depth inland undefended 200-year"
          example: 6
        depthInlandDef200yr:
          type: "integer"
          description: "Depth inland defended 200-year"
          example: 6
        depthInlandUndef250yr:
          type: "integer"
          description: "Depth inland undefended 250-year"
          example: 6
        depthInlandDef250yr:
          type: "integer"
          description: "Depth inland defended 250-year"
          example: 6
        depthInlandUndef500yr:
          type: "integer"
          description: "Depth inland undefended 500-year"
          example: 6
        depthInlandDef500yr:
          type: "integer"
          description: "Depth inland defended 500-year"
          example: 6
        depthInlandUndef1000yr:
          type: "integer"
          description: "Depth inland undefended 1000-year"
          example: 6
        depthInlandDef1000yr:
          type: "integer"
          description: "Depth inland defended 1000-year"
          example: 6
    GlobalFlDepthInlandOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/FlDepthBaseOutput'
        - type: object
      description: "results for `global floodDepth` lookup"
      properties:
        depthInlandUndef30yr:
          type: "integer"
          description: "Depth inland undefended 30-year"
          example: 4
        depthInlandUndef50yr:
          type: "integer"
          description: "Depth inland undefended 50-year"
          example: 5
        depthInlandUndef100yr:
          type: "integer"
          description: "Depth inland undefended 100-year"
          example: 5
        depthInlandUndef200yr:
          type: "integer"
          description: "Depth inland undefended 200-year"
          example: 6
        depthInlandUndef250yr:
          type: "integer"
          description: "Depth inland undefended 250-year"
          example: 6
        depthInlandUndef500yr:
          type: "integer"
          description: "Depth inland undefended 500-year"
          example: 6
        depthInlandUndef1000yr:
          type: "integer"
          description: "Depth inland undefended 1000-year"
          example: 6
    FlDepthInlandSurgeOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/FlDepthInlandOutput'
        - type: object
      description: "results for `floodDepth` lookup"
      properties:
        depthSurgeUndef30yr:
          type: "integer"
          description: "Depth surge undefended 30-year"
          example: 0
        depthSurgeDef30yr:
          type: "integer"
          description: "Depth surge defended 30-year"
          example: 0
        depthSurgeUndef50yr:
          type: "integer"
          description: "Depth surge undefended 50-year"
          example: 0
        depthSurgeDef50yr:
          type: "integer"
          description: "Depth surge defended 50-year"
          example: 0
        depthSurgeUndef100yr:
          type: "integer"
          description: "Depth surge undefended 100-year"
          example: 0
        depthSurgeDef100yr:
          type: "integer"
          description: "Depth surge defended 100-year"
          example: 0
        depthSurgeUndef200yr:
          type: "integer"
          description: "Depth surge undefended 200-year"
          example: 0
        depthSurgeDef200yr:
          type: "integer"
          description: "Depth surge defended 200-year"
          example: 0
        depthSurgeUndef250yr:
          type: "integer"
          description: "Depth surge undefended 250-year"
          example: 0
        depthSurgeDef250yr:
          type: "integer"
          description: "Depth surge defended 250-year"
          example: 0
        depthSurgeUndef500yr:
          type: "integer"
          description: "Depth surge undefended 500-year"
          example: 0
        depthSurgeDef500yr:
          type: "integer"
          description: "Depth surge defended 500-year"
          example: 0
        depthSurgeUndef1000yr:
          type: "integer"
          description: "Depth surge undefended 1000-year"
          example: 0
        depthSurgeDef1000yr:
          type: "integer"
          description: "Depth surge defended 1000-year"
          example: 0
        depthCombinedUndef30yr:
          type: "integer"
          description: "Depth combined undefended 30-year"
          example: 4
        depthCombinedDef30yr:
          type: "integer"
          description: "Depth combined defended 30-year"
          example: 3
        depthCombinedUndef50yr:
          type: "integer"
          description: "Depth combined undefended 50-year"
          example: 5
        depthCombinedDef50yr:
          type: "integer"
          description: "Depth combined defended 50-year"
          example: 3
        depthCombinedUndef100yr:
          type: "integer"
          description: "Depth combined undefended 100-year"
          example: 5
        depthCombinedDef100yr:
          type: "integer"
          description: "Depth combined defended 100-year"
          example: 5
        depthCombinedUndef200yr:
          type: "integer"
          description: "Depth combined undefended 200-year"
          example: 6
        depthCombinedDef200yr:
          type: "integer"
          description: "Depth combined defended 200-year"
          example: 6
        depthCombinedUndef250yr:
          type: "integer"
          description: "Depth combined undefended 250-year"
          example: 6
        depthCombinedDef250yr:
          type: "integer"
          description: "Depth combined defended 250-year"
          example: 6
        depthCombinedUndef500yr:
          type: "integer"
          description: "Depth combined undefended 500-year"
          example: 6
        depthCombinedDef500yr:
          type: "integer"
          description: "Depth combined defended 500-year"
          example: 6
        depthCombinedUndef1000yr:
          type: "integer"
          description: "Depth combined undefended 1000-year"
          example: 6
        depthCombinedDef1000yr:
          type: "integer"
          description: "Depth combined defended 1000-year"
          example: 6
    FemaOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        panel:
          type: "string"
          description: "Numeric designation used to identify the FIRM Map associated with a given area. First six digits are the FEMA community number."
          example: "12095C0265F"
          maxLength: 12
        community:
          type: "string"
          description: "Political entity with the authority to adopt and enforce floodplain ordinances for the area under its jurisdiction. Community number is a unique six-digit number assigned by FEMA and used for identity in computer databases."
          example: "120186"
          maxLength: 6
        floodZone:
          type: "string"
          description: "FEMA issues Flood Insurance Rate Maps (FIRMs) with official flood zone designations for the purpose of rating flood policies."
          example: "X"
          maxLength: 6
        sfha:
          type: "string"
          description: "Special Flood Hazard Area (SFHA) is an area at high risk for flooding as determined by FEMA Flood Insurance Rate Maps (FIRMs). This is an area with a 1% annual chance of flooding. "
          enum:
            - "Yes"
            - "No"
          example: "No"
        panelDate:
          type: "string"
          format: "date"
          description: "Panel date is the date recorded in the FEMA FMSIS database, which is associated with the given panel number."
          example: "2009-09-25"
          maxLength: 10
        bfe:
          type: "integer"
          description: "Base Flood Elevation is defined by FEMA as the height of the base (100-year) flood in relation to a specified datum, usually the National Geodetic Vertical Datum of 1929 (NGVD 29) or North American Vertical Datum of 1988 (NAVD 88), in feet."
          example: -999
          default: -999
        annualProbability:
          type: "string"
          description: "Annual probability"
          example: "Less than 0.2%"
          maxLength: 256
        levees:
          type: "string"
          description: "Flood defenses can flood walls, levees, dykes, and embankments—typically designed to protect against a flood of a certain return period."
          enum:
            - "Yes"
            - "No"
          example: "No"
        otherZones:
          type: "string"
          description: "Other zones (within proximity distance)"
          example: ""
          maxLength: 256
        flMatch:
          type: "string"
          description: "Fl match"
          example: "1"
          maxLength: 2
        floodway:
          type: "string"
          description: "Any land area susceptible to being inundated by floodwaters from any source."
          enum:
            - "Yes"
            - "No"
          example: "No"
        cobra:
          type: "string"
          description: "The Coastal Barrier Resources Act of 1982 (COBRA) designated certain portions of the Gulf and East Coasts as undeveloped coastal barriers."
          enum:
            - "Yes"
            - "No"
          example: "No"
    UsWfRiskScoreOutput:
      type: object
      description: "U.S. Wildfire Risk Score Output"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        percentileAdmin1:
          type: "number"
          format: "double"
          description: "Percentile in Admin1 (State for US) for the reference return period"
          example: 0.002893825
        scoreOverall:
          type: "integer"
          description: "The Risk Score based on the composite ALR"
          example: 3
    RiskScoreBaseOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        score100yr:
          type: "integer"
          description: "100-year score"
          example: 1
        score250yr:
          type: "integer"
          description: "250-year score"
          example: 1
        score500yr:
          type: "integer"
          description: "500-year score"
          example: 3
        scoreOverall:
          type: "integer"
          description: "Overall score"
          example: 3
    RiskScoreCaOutput:
      $ref: '#/components/schemas/RiskScoreUsOutput'
    RiskScoreUsOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/RiskScoreBaseOutput'
        - type: object
          properties:
            percentileAdmin1:
              type: "number"
              format: "double"
              description: "Riskiness compared to other locations in the Admin1"
              example: 0.0085084662
    WtRiskScoreOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/RiskScoreUsOutput'
        - type: object
          properties:
            dominantSubperil:
              type: "number"
              format: "integer"
              description: "The dominant sub-peril driving the combined Risk Score at the 1 in 100 return period - 1=Wind, 2=Snow, 3=Freeze, 4=Ice, 0=no dominant peril (all sub-perils have the same value - exceptionally unlikely, but to handle this for completeness)"
              example: 2
    RiskScoreEuOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/RiskScoreBaseOutput'
        - type: object
          properties:
            percentileCountry:
              type: "number"
              format: "double"
              description: "Riskiness compared to other locations in the Country"
              example: 0.0085084662
    TrRiskScoreOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        score10000yr:
          type: "integer"
          description: "10000-year score"
          example: 3
        scoreOverall:
          type: "integer"
          description: "Overall score"
          example: 3
        percentileAdmin1:
          type: "number"
          format: "double"
          description: "Percentile in State"
          example: 1.1
    LossCostBaseOutput:
      type: object
      description: "`Loss cost`, also known as average annual loss (AAL), is derived using RMS models and account for hazard and vulnerability from detailed loss modeling of the peril region. To produce an annualized loss, losses from every event affecting each location are multiplied by the annual rate (probability) of the hazards causing that loss. The sum of the annualized losses at each location produces the AAL for that location, which is normalized by the exposure to yield the `annualized loss rate` (ALR). This calculation is performed for buildings, contents, and business interruption coverages. Total insured values (TIVs) for the relevant coverage are then applied to give the loss cost for each coverage."
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        buildingAlr:
          type: "number"
          format: "double"
          description: "Building annualized loss rate"
          example: 0.000863401691354315
        contentsAlr:
          type: "number"
          format: "double"
          description: "Contents annualized loss rate"
          example: 0.000358529682823589
        businessInterruptionAlr:
          type: "number"
          format: "double"
          description: "Business interruption annualized loss rate"
          example: 0.000559604863156912
    LossCostOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/LossCostBaseOutput'
        - type: object
          properties:
            grossLoss:
              type: "number"
              format: "double"
              description: "Loss to the insurer, accounting for the application of all insurance terms but without consideration for any reinsurance recoveries"
              example: 750.16
            groundUpLoss:
              type: "number"
              format: "double"
              description: "Total loss to the exposure, independent of any insurance or reinsurance terms"
              example: 901.43
    LossCostGuOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/LossCostBaseOutput'
        - type: object
          properties:
            groundUpLoss:
              type: "number"
              format: "double"
              description: "Total loss to the exposure, independent of any insurance or reinsurance terms"
              example: 901.43
    GuGrLossCostOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/LossCostOutput'
        - type: object
          properties:
            grossLoss2:
              type: "number"
              format: "double"
              description: "Loss to the insurer, accounting for the application of all insurance terms but without consideration for any reinsurance recoveries"
              example: 769.26
            grossLoss3:
              type: "number"
              format: "double"
              description: "Loss to the insurer, accounting for the application of all insurance terms but without consideration for any reinsurance recoveries"
              example: 817.11
    LossCostUsFlOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/LossCostOutput'
        - type: object
          properties:
            contentsAlrFlood:
              type: "number"
              format: "double"
              description: "Flood contents annualized loss rate"
              example: 5.308397E-4
            contentsAlrSurge:
              type: "number"
              format: "double"
              description: "Surge contents annualized loss rate"
              example: 0.0
            buildingAlrFlood:
              type: "number"
              format: "double"
              description: "Flood building annualized loss rate"
              example: 3.419841E-4
            buildingAlrSurge:
              type: "number"
              format: "double"
              description: "Surge building annualized loss rate"
              example: 0.
            businessInterruptionAlrFlood:
              type: "number"
              format: "double"
              description: "Flood business interruption annualized loss rate"
              example: 3.260721E-4
            businessInterruptionAlrSurge:
              type: "number"
              format: "double"
              description: "Surge business interruption annualized loss rate"
              example: 0.0
    AuRiskScoreOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        score100yr:
          type: "number"
          format: "integer"
          description: "100-year score"
          example: 1
        score200yr:
          type: "number"
          format: "integer"
          description: "200-year score"
          example: 2
        score500yr:
          type: "number"
          format: "integer"
          description: "500-year score"
          example: 3
        scoreOverall:
          type: "number"
          format: "integer"
          description: "The combined Risk Score at the 1 in 500 return period"
          example: 3
    CAWildfireOutput:
      type: object
      properties:
        fuelCodeDescription:
          type: "string"
          description: "Fuel Type Description"
          example: "Shrubs - Brush"
          maxLength: 256
        slopeInPercent:
          type: "number"
          format: "integer"
          description: "Slope in percent"
          example: 3
        distanceToVegetationUnit:
          type: "string"
          description: "Distance to Vegetation Unit"
          example: "feet"
          maxLength: 8
        distanceToVegetation:
          type: "string"
          description: "Distance to Vegetation"
          example: "5"
          maxLength: 5
        fuelCode:
          type: "number"
          format: "integer"
          description: "Fuel Type Code"
          example: 1
    USWildfireOutput:
      type: object
      properties:
        fuelCodeDescription:
          type: "string"
          description: "Fuel Type Description"
          example: "Short Grass (1 foot)"
          maxLength: 256
        slopeInPercent:
          type: "number"
          format: "integer"
          description: "Slope in percent"
          example: 3
        distanceToVegetationUnit:
          type: "string"
          description: "Distance to Vegetation Unit"
          example: "feet"
          maxLength: 8
        distanceToVegetation:
          type: "string"
          description: "Distance to Vegetation"
          example: "5"
          maxLength: 5
        fuelCode:
          type: "number"
          format: "integer"
          description: "Fuel Type Code"
          example: 1
    USSubsidenceOutput:
      type: object
      properties:
        mines:
          type: array
          description: "Nearest 5 mines"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "Mine name"
                example: "Lambert Mine"
                maxLength: 80
              mineType:
                type: "string"
                description: "Mine Type"
                example: "Unknown"
                maxLength: 80
              status:
                type: "string"
                description: "Mine status"
                example: "Active"
                maxLength: 32
              area:
                type: "number"
                format: "double"
                description: "Area of mine in square footage"
                example: 45.38
              distance:
                type: "number"
                description: "Distance from mine"
                example: 3.61
        sinkholes:
          type: array
          description: "Nearest 5 sinkholes"
          items:
            type: object
            properties:
              area:
                type: "number"
                format: "double"
                description: "Area of sinkhole in square footage"
                example: 58.34
              distance:
                type: "number"
                description: "Distance from Sinkhole"
                example: 3.61
        distanceUnit:
          type: "string"
          enum:
            - "feet"
            - "meters"
            - "miles"
            - "km"
          description: "Distance unit"
          example: "miles"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    UsEqFaultOutput:
      type: object
      properties:
        faults:
          type: array
          description: "Nearest 5 faults"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "fault name"
                example: "NM NMSZ USGS West Full"
                maxLength: 80
              distance:
                type: "number"
                description: "Distance to fault"
                example: 3.61
              returnPeriodM60:
                type: "number"
                description: "Return Period for Magnitude 6.0+"
                example: 27013
              returnPeriodM65:
                type: "number"
                description: "Return Period for Magnitude 6.5+"
                example: 108050
              returnPeriodM70:
                type: "number"
                description: "Return Period for Magnitude 7.0+"
                example: 120056
        backgroundRates:
          type: array
          description: "Background return period of magnitude 6.0+ earthquakes for 8 neighboring cells and, in the array's fifth position, the address's cell."
          items:
            type: "number"
          example: [310, 720, 950, 1085, 2120, 4340, 3500, 7690, 11605]
        distanceUnit:
          type: "string"
          enum:
            - "feet"
            - "meters"
            - "miles"
            - "km"
          description: "Distance unit"
          example: "miles"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    UsTrD2TOutput:
      type: object
      properties:
        targets:
          type: array
          description: "Nearest 5 terrorism targets"
          items:
            type: object
            properties:
              id:
                type: "number"
                description: "Target Id"
                example: 23840
              name:
                type: "string"
                description: "Target name"
                example: "FBI El Paso Field Office"
                maxLength: 80
              city:
                type: "string"
                description: "City"
                example: "El Paso"
                maxLength: 256
              admin1Code:
                type: "string"
                description: "Target State"
                example: "TX"
                maxLength: 16
              category:
                type: "string"
                description: "Target category"
                example: "Government Building"
                maxLength: 80
              score:
                type: "string"
                description: "Target score. Range of scores is from a to f."
                example: "f"
                maxLength: 1
              distance:
                type: "number"
                description: "Distance from target"
                example: 1988.17
        distanceUnit:
          type: "string"
          enum:
            - "feet"
            - "meters"
            - "miles"
            - "km"
          description: "Distance unit"
          example: "miles"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    UsD2FireStationOutput:
      type: object
      properties:
        fireStations:
          type: array
          description: "Nearest 3 fire stations"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "Fire Station name"
                example: "MAZON COMMUNITY FIRE DEPARTMENT"
                maxLength: 256
              address:
                type: "string"
                description: "Fire Station address"
                example: "700 PARK STREET"
                maxLength: 256
              city:
                type: "string"
                description: "Fire Station City"
                example: "MAZON"
                maxLength: 256
              admin1Code:
                type: "string"
                description: "Fire Station State"
                example: "IL"
                maxLength: 16
              postalCode:
                type: "string"
                description: "Fire Station zip code"
                example: "60444"
                maxLength: 16
              admin2Name:
                type: "string"
                description: "Fire Station County"
                example: "GRUNDY"
                maxLength: 256
              level:
                type: "string"
                description: "Fire Station category"
                example: ""
                maxLength: 256
              fireStationType:
                type: "string"
                description: "Fire Station type"
                example: "VOLUNTEER"
                maxLength: 80
              ems:
                type: "string"
                description: "Fire Station Emergency Medical Services presence"
                example: "Y"
                maxLength: 1
              longitude:
                type: "number"
                description: "Fire Station longitude"
                example: -88.27
              latitude:
                type: "number"
                description: "Fire Station latitude"
                example: 41.39
              distance:
                type: "number"
                description: "Distance from fire station"
                example: 1988.17
        distanceUnit:
          type: "string"
          enum:
            - "miles"
          description: "Distance unit"
          example: "miles"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    UsD2LandfillOutput:
      type: object
      properties:
        landfills:
          type: array
          description: "Nearest landfill"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "landfill name"
                example: "PINE RIDGE LANDFILL (AKA 545 SANIFILL LF)"
                maxLength: 256
              type:
                type: "string"
                description: "landfill type"
                example: "C&D"
                maxLength: 80
              status:
                type: "string"
                description: "landfill status"
                example: "OPEN"
                maxLength: 32
              owner:
                type: "string"
                description: "Landfill owner"
                example: "WASTE MANAGEMENT INC OF FLORIDA"
                maxLength: 128
              longitude:
                type: "number"
                description: "Landfill longitude"
                example: 28.48198442
              latitude:
                type: "number"
                description: "Landfill latitude"
                example: -81.64954714
              distance:
                type: "number"
                description: "Distance from landfill"
                example: 5887.84
        distanceUnit:
          type: "string"
          enum:
            - "miles"
          description: "Distance unit"
          example: "miles"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    UsD2InnerCoastOutput:
      type: object
      properties:
        distanceUnit:
          type: "string"
          enum:
            - "feet"
            - "meters"
            - "miles"
            - "km"
          description: "Distance unit"
          example: "miles"
        distance:
          type: "string"
          description: "Distance to Coastal Line. If the location is more than 10 miles inland, distance will return as >10 miles"
          example: "0.41"
          maxLength: 10
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    GlobalNuclearD2TOutput:
      type: object
      properties:
        nuclearPowerPlant:
          type: array
          description: "Nearest nuclear power plant within 30 km of the given point"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "Nuclear plant name"
                example: "Dresden Generating Station"
                maxLength: 256
              capacity:
                type: "number"
                description: "Nuclear plant capacity"
                example: 2018.6
              country:
                type: "string"
                description: "Nuclear plant country"
                example: "United States of America"
                maxLength: 256
              longitude:
                type: "number"
                description: "Nuclear plant longitude"
                example: -88.27
              latitude:
                type: "number"
                description: "Nuclear plant latitude"
                example: 41.39
              distance:
                type: "number"
                description: "Distance from the nuclear power plant"
                example: 18737.69
        distanceUnit:
          type: "string"
          enum:
            - "meters"
          description: "Distance unit"
          example: "meters"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    GlobalVolcanoD2TOutput:
      type: object
      properties:
        volcanoes:
          type: array
          description: "Nearest volcano within 100 km of the given point"
          items:
            type: object
            properties:
              name:
                type: "string"
                description: "Volcano name"
                example: "Atakor Volcanic Field"
                maxLength: 256
              volcanoType:
                type: "string"
                description: "Volcano type"
                example: "Pyroclastic cone(s)"
                maxLength: 80
              lastEruptionYear:
                type: "string"
                description: "Volcano last eruption date"
                example: "0"
                maxLength: 6
              country:
                type: "string"
                description: "Volcano country"
                example: "Algeria"
                maxLength: 80
              region:
                type: "string"
                description: "Volcano region"
                example: "Africa and Red Sea"
                maxLength: 80
              subRegion:
                type: "string"
                description: "Volcano subRegion"
                example: "Africa (northern)"
                maxLength: 80
              longitude:
                type: "number"
                description: "Volcano longitude"
                example: -88.27
              latitude:
                type: "number"
                description: "Volcano latitude"
                example: 41.39
              elevation:
                type: "number"
                description: "Volcano elevation"
                example: 2918
              elevationMetrics:
                type: "string"
                description: "Volcano elevation unit - always reported in feet"
                example: "feet"
                maxLength: 8
              majorRock:
                type: "string"
                description: "Volcano's most major rock"
                example: "Phonolite"
                maxLength: 256
              minorRock:
                type: "string"
                description: "Volcano's most minor rock"
                example: "Trachyandesite / Basaltic Trachyandesite"
                maxLength: 256
              pop30Km:
                type: "number"
                description: "Human population within 30 km of the volcano"
                example: 1222436
              distance:
                type: "number"
                description: "Distance from the Volcano"
                example: 18737.69
        distanceUnit:
          type: "string"
          enum:
            - "meters"
          description: "Distance unit"
          example: "meters"
        warnings:
          $ref: '#/components/schemas/WarningOutput'
    USWildfireSupplementalOutput:
      type: object
      properties:
        distanceToWuiInterface:
          type: "string"
          description: "Distance to Wildlands Interface in meters"
          example: "5745"
          maxLength: 8
        distanceToWuiIntermix:
          type: "string"
          description: "Distance to Wildlands Intermix in meters"
          example: "3523"
          maxLength: 8
        distanceToWuiUnit:
          type: "string"
          description: "Distance to Wildlands Unit of Measure"
          example: "meters"
          maxLength: 8
        distanceToCalfireVeryHigh:
          type: "string"
          description: "Distance to CalFIRE Very High Risk Zone in meters"
          example: "1600"
          maxLength: 8
        distanceToCalfireHigh:
          type: "string"
          description: "Distance to CalFIRE High Risk Zone in meters"
          example: "800"
          maxLength: 8
        distanceToCalfireMedium:
          type: "string"
          description: "Distance to CalFIRE Medium Risk Zone in meters"
          example: "500"
          maxLength: 8
        distanceToCalfireUnit:
          type: "string"
          description: "Distance to CalFIRE Unit of Measure"
          example: "meters"
          maxLength: 8
        histFireYearCount250M:
          type: "number"
          format: "integer"
          description: "Count of years with historical fires at this location"
          example: 1
        histFireYearCount2Km:
          type: "number"
          format: "integer"
          description: "Count of years with historical fires within 2 kilometers of this location"
          example: 2
        histFireYearCount5Km:
          type: "number"
          format: "integer"
          description: "Count of years with historical fires within 5 kilometers of this location"
          example: 3
        histFireYearCount10Km:
          type: "number"
          format: "integer"
          description: "Count of years with historical fires within 10 kilometers of this location"
          example: 4
        histFireYearCount20Km:
          type: "number"
          format: "integer"
          description: "Count of years with historical fires within 20 kilometers of this location"
          example: 8
        yearLastHistFire250M:
          type: "number"
          format: "integer"
          description: "Year of last historical fire at this location"
          example: 2015
        stochasticBurnProb:
          type: "number"
          format: "double"
          description: "Likelihood of burn from 50,000 year simulations, expressed between 0 - 100"
          example: 0.15
        urbanConflagrationScore:
          type: "number"
          format: "integer"
          description: "Bin Score of Urban Conflagration incidents in simulated 50,000 year period, expressed between 0 - 4"
          example: 1
    UsWindSpeedOutput:
      type: object
      properties:
        gust3Pct50Yr:
          type: "string"
          description: "3 second gust 3% probability of exceedance in 50 years for Exposure C category"
          example: "120-130"
          maxLength: 10
        gust7Pct50Yr:
          type: "string"
          description: "3 second gust 7% probability of exceedance in 50 years for Exposure C category"
          example: ">=110"
          maxLength: 10
        gust15Pct50Yr:
          type: "string"
          description: "3 second gust 15% probability of exceedance in 50 years for Exposure C category"
          example: "130-140"
          maxLength: 10
        windspeedUnit:
          type: "string"
          description: "Constant value: MPH as in Miles Per Hour"
          example: "MPH"
          maxLength: 3
    EarthquakeHazardOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        soilIndex:
          type: "number"
          description: "soil index"
          example: 1.08
        landslideIndex:
          type: "number"
          description: "landslide index"
          example: 1.0
        liquefactionIndex:
          type: "number"
          description: "liquefaction index"
          example: 1.13
        soilDescription:
          type: "string"
          description: "soil index description"
          example: "Stiff Soil"
          maxLength: 256
        liquefactionDescription:
          type: "string"
          description: "landslide index description"
          example: "High"
          maxLength: 256
        landslideDescription:
          type: "string"
          description: "liquefaction index description"
          example: "Very Low"
          maxLength: 256
    HurricaneHazardOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        elevationGround:
          type: "string"
          description: "elevation"
          example: "1822.11"
          maxLength: 30
        distanceToCoast:
          type: "string"
          description: "distance to coast"
          example: "91.4007"
          maxLength: 30
        elevationGroundUnit:
          type: "string"
          description: "elevation ground unit"
          example: "feet"
          maxLength: 8
        distanceToCoastUnit:
          type: "string"
          description: "distance to coast unit"
          example: "miles"
          maxLength: 8
    WindpoolZoneOutput:
      type: object
      description: "results"
      properties:
        warnings:
          $ref: '#/components/schemas/WarningOutput'
        windpoolZone:
          type: "string"
          description: "Windpool Zone"
          example: "Zone 5"
          maxLength: 60
    CompositeOutput:
      type: array
      description: "results"
      items:
        type: object
        properties:
          name:
            type: "string"
            description: "Layer name"
            example: "geocode"
          version:
            type: "string"
            description: "Layer version"
            example: "latest"
          results:
            type: object
            additionalProperties:
              anyOf:
                - type: string
                - type: integer
                - type: number
                - type: boolean
                - type: object
                - type: array
              description: "For result fields, see the individual layer documentation"
          errors:
            type: array
            items:
              $ref: '#/components/schemas/ErrorItem'
    CompositeInput:
      type: object
      required:
        - location
        - layers
      properties:
        location:
          $ref: '#/components/schemas/LocationInput'
        layers:
          type: array
          items:
            type: object
            required:
              - name
              - version
            properties:
              name:
                type: "string"
                description: "Layer name"
                example: "geocode"
              version:
                type: "string"
                description: "Layer version"
                example: "latest"
              options:
                description: "Layer options"
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                    - type: object
    GenericInput:
      type: object
      required:
        - location
      properties:
        location:
          $ref: '#/components/schemas/LocationInput'
        layerOptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
              description: "For result fields, see the individual layer documentation"
    GenericOutput:
      type: object
      description: "results"
      additionalProperties:
        type: string
    WarningItem:
      type: object
      properties:
        code:
          type: string
          example: "FLG_XXXX"
          description: |
            Warning codes:
            |   Code   | Description |
            |----------|-------------|
            | FLG_4001 | Layer option was skipped. Response based on its default value. |
            | FLG_4002 | Layer option was skipped. Response based on its maximum value. |
            | FLG_4101 | Hazard values are calculated based on default floodDepth. |
            | FLG_4102 | Hazard values are calculated based on maximum proximityDistance. |
            | FLG_4103 | No additional options can be provided to this lookup. |
            | FLG_4201 | Location not matched in ESDB building attributes database. |
            | FLG_4202 | Location is not eligible for ESDB building attribute return. Client input occupancy does not match ESDB occupancy. |
            | FLG_4203 | Location matched in ESDB building attributes database. Where values are not populated, they are not available in database. |
            | FLG_4204 | Insufficient geocoding information. Lookup will proceed with the default value for the missing field. |
            | FLG_4205 | The geocoding version used is not recommended for this layer. |
            | FLG_4206 | Input address has poor geocoding resolution. Response might have limited precision. |
            | FLG_4207 | The geocoding version used is not recommended for this layer at coarse geocoding resolutions (5 or higher). |
            | FLG_4208 | Insufficient geocoding information to look up requested data. |
            | FLG_4301 | No coverage values provided. Ground-up and gross loss cannot be calculated. |
            | FLG_4302 | One or more grossLoss values were not calculated due to invalid/missing deductibleAmount. |
            | FLG_4304 | Invalid/missing deductibleType. Valid deductibleTypes are 1 to 5. |
            | FLG_4305 | Deductible amount is treated as currency amount instead of percentage. |
            | FLG_4306 | Missing required field to perform gross loss calculations. |
            | FLG_4307 | Gross losses can only be calculated for reference view. |
            | FLG_4400 | [User input] is not a valid value for this layer option. Response based on default value. |
            | FLG_4401 | No data found for this location. |
            | FLG_4500 | The combination of input characteristics has not been found, no results have been provided. |
            | FLG_4402 | [LayerOption] is only valid for version 21 and has been ignored |
            | FLG_4403 | The location entered is outside of supported region, Response based on default value
        message:
          type: string
          example: "Warning message"
    WarningOutput:
      type: array
      items:
        $ref: '#/components/schemas/WarningItem'
    ErrorItem:
      type: object
      properties:
        code:
          type: string
          example: "ERR_XXXX"
          description: |
            Error codes:
            |   Code   | Description |
            |----------|-------------|
            | ERR_4000 | No details found for requested layer. |
            | ERR_4001 | Insufficient geocoding information. A required field is missing. |
            | ERR_4002 | Insufficient geocoding resolution to look up requested data. |
            | ERR_4003 | Location is in a region that is not supported by this layer. |
            | ERR_4005 | Insufficient information to look up requested data. |
            | ERR_4041 | Invalid input. |
            | ERR_4100 | Invalid lookupType. Valid lookups are 'wetOrDry', 'floodDepth', and 'proximity'. |
            | ERR_4101 | Invalid distanceUnit. Valid distanceUnits are 'meters' and 'feet'. |
            | ERR_4102 | Invalid returnPeriod. Valid returnPeriods are 30, 50, 100, 200, 250, 500, and 1000. |
            | ERR_4103 | Invalid defended option. Valid defended options are 'true' and 'false'. |
            | ERR_4104 | Invalid proximityDistance. Valid proximityDistances are positive numbers. |
            | ERR_4105 | Invalid distanceUnit. Valid distanceUnits are 'feet', 'meters', 'miles', and 'km'. |
            | ERR_4106 | Insufficient information to look up requested data. Missing one or both of distanceUnit and proximityDistance. |
            | ERR_4300 | Invalid basement. Valid basements are 'yes', 'no', and 'default'. |
            | ERR_4400 | General error for the layer. |
            | ERR_4401 | Invalid address input. Incorrect field. |
            | ERR_4010 | Forbidden. |
            | ERR_4030 | Unauthorized. |
            | ERR_4040 | Not found. |
            | ERR_4050 | Method not allowed. |
            | ERR_4060 | Not acceptable. |
            | ERR_4080 | Request timeout. |
            | ERR_4130 | Request too large. |
            | ERR_4150 | Unsupported media type. |
            | ERR_4220 | Unprocessable entity. |
            | ERR_4290 | Quota exceeded. |
            | ERR_5000 | Internal server error. |
            | ERR_5040 | Gateway timeout. |
        message:
          type: string
          example: "Error message"
    ErrorOutput:
      type: object
      properties:
        contextId:
          type: string
          example: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        additionalInfo:
          type: string
          example: ""
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    CaAddress:
      value:
        countryCode: "CA"
        countryScheme: "ISO2A"
        countryRmsCode: "CA"
        admin1Code: "AB"
        latitude: 53.55
        longitude: -113.35
        rmsGeoModelResolutionCode: 1
        postalCode: "T8H 0E7"
        locationCode: "T8H"
    NzAddress:
      value:
        countryCode: "NZ"
        countryScheme: "ISO2A"
        countryRmsCode: "NZ"
        latitude: -36.84491
        longitude: 174.7335
        admin1GeoId: 15021756
        rmsGeoModelResolutionCode: 1
    KrAddress:
      value:
        countryCode: "KR"
        countryScheme: "ISO2A"
        countryRmsCode: "KR"
        latitude: 37.577013
        longitude: 126.999299
        admin2GeoId: 61759072
        rmsGeoModelResolutionCode: 1
    SvAddress:
      value:
        countryCode: "SV"
        countryScheme: "ISO2A"
        countryRmsCode: "SV"
        latitude: 13.691045
        longitude: -89.214974
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2345301
    BrAddress:
      value:
        countryCode: "BR"
        countryScheme: "ISO2A"
        countryRmsCode: "BR"
        latitude: -12.25743
        longitude: -38.946338
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2344848
    VnAddress:
      value:
        countryCode: "VN"
        countryScheme: "ISO2A"
        countryRmsCode: "VN"
        latitude: 10.794132
        longitude: 106.622704
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2347728
    InAddress:
      value:
        countryCode: "IN"
        countryScheme: "ISO2A"
        countryRmsCode: "IN"
        latitude: 19.102055
        longitude: 72.898758
        postalCode: "400072"
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2345750
    PlAddress:
      value:
        countryCode: "PL"
        countryScheme: "ISO2A"
        countryRmsCode: "PL"
        latitude: 53.3610246
        longitude: 14.31923382
        rmsGeoModelResolutionCode: 1
    PhAddress:
      value:
        countryCode: "PH"
        countryScheme: "ISO2A"
        countryRmsCode: "PH"
        latitude: 6.934632
        longitude: 126.259708
        rmsGeoModelResolutionCode: 1
    JpAddress:
      value:
        countryCode: "JP"
        countryScheme: "ISO2A"
        countryRmsCode: "JP"
        latitude: 26.1955
        longitude: 127.6665
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2345896
        admin4GeoId: 62252250
        zone1GeoId: 60345722
        cityGeoId: 60197884
    GuAddress:
      value:
        countryCode: "GU"
        countryScheme: "ISO2A"
        countryRmsCode: "GU"
        latitude: 13.495093
        longitude: 144.780626
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 60073592
        admin3GeoId: 60073615
    HkAddress:
      value:
        countryCode: "HK"
        countryRmsCode: "HK"
        countryScheme: "ISO2A"
        rmsGeoModelResolutionCode: 4
        latitude: 22.449
        longitude: 114.044
        admin1GeoId: 24703004
        admin2GeoId: 24703143
        zone1GeoId: 60345327
        cityGeoId: 2165358
    AuAddress:
      value:
        countryCode: "AU"
        countryScheme: "ISO2A"
        countryRmsCode: "AU"
        latitude: -19.284868
        longitude: 146.772049
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2344702
        postalCodeGeoId: 12708445
    IlAddress:
      value:
        countryCode: "IL"
        countryScheme: "ISO2A"
        countryRmsCode: "IL"
        latitude: 31.111381
        longitude: 34.836804
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 2345791
    TwAddress:
      value:
        countryCode: "TW"
        countryScheme: "ISO2A"
        countryRmsCode: "TW"
        latitude: 26.223921
        longitude: 119.998842
        rmsGeoModelResolutionCode: 1
    CnAddress:
      value:
        countryCode: "CN"
        countryScheme: "ISO2A"
        countryRmsCode: "CN"
        latitude: 33.867154
        longitude: 113.486655
        rmsGeoModelResolutionCode: 1
        admin1GeoId: 12577999
    CnRiskIndexAddress:
      value:
        countryCode: "CN"
        countryScheme: "ISO2A"
        countryRmsCode: "CN"
        latitude: 22.538668
        longitude: 114.096738
        rmsGeoModelResolutionCode: 1
    IdAddress:
      value:
        countryCode: "ID"
        countryScheme: "ISO2A"
        countryRmsCode: "ID"
        latitude: -8.451797
        longitude: 118.730615
        rmsGeoModelResolutionCode: 1
    DrAddress:
      value:
        countryCode: "DR"
        countryFips: "DR"
        countryScheme: "FIPS"
        countryRmsCode: "CB"
        latitude: 18.9833
        longitude: -69.3833
        rmsGeoModelResolutionCode: 1
        admin3GeoId: 60375492
        cityGeoId: 74125
    UsCaAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "CA"
        latitude: 37.5412
        longitude: -122.06061
        admin2GeoId: 99999206001
        rmsGeoModelResolutionCode: 1
    UsTxAddressEsdb:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "TX"
        postalCode: "78669"
        rmsGeoModelResolutionCode: 2
        ugid: "USS3194364891900"
        geoMatchCode: "K6-99999783726670-K1T1P1A1-K95T100P100A100-T1P1A1-00-AB-TP-X"
        cityName: "SPICEWOOD"
        streetAddress: "1900 LAS ENTRADAS"
    UsFlAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "FL"
        latitude: 28.514108
        longitude: -81.37189
        rmsGeoModelResolutionCode: 1
    UsFlAddressExtended:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "FL"
        latitude: 28.514108
        longitude: -81.37189
        rmsGeoModelResolutionCode: 1
        postalCodeGeoId: 99999432806
        admin1GeoId: 99999112
    UsCsAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "ME"
        latitude: 45.75
        longitude: -67.25
        rmsGeoModelResolutionCode: 1
        postalCodeGeoId: 99999404491
        admin1GeoId: 99999123
    NaWsAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "DE"
        latitude: 38.9264
        longitude: -75.4281
        rmsGeoModelResolutionCode: 1
        postalCodeGeoId: 99999419963
        admin1GeoId: 99999110
        admin2GeoId: 99999210005
    CaCsAddress:
      value:
        countryCode: "CA"
        countryScheme: "ISO2A"
        countryRmsCode: "CA"
        admin1Code: "QC"
        latitude: 51.25
        longitude: -63.25
        rmsGeoModelResolutionCode: 1
        postalCodeGeoId: 23803454
        admin1GeoId: 2344924
    EuGbAddress:
      value:
        countryCode: "GB"
        countryScheme: "ISO2A"
        countryRmsCode: "GB"
        latitude: 54.988537
        longitude: -2.138128
        postalCode: "NE46 4SJ"
        postalCodeGeoId: 21225450
        rmsGeoModelResolutionCode: 1
    EuFrAddress:
      value:
        countryCode: "FR"
        countryScheme: "ISO2A"
        countryRmsCode: "FR"
        latitude: 45.77006542
        longitude: 4.828696969
        postalCodeGeoId: 12726916
        rmsGeoModelResolutionCode: 1
    CharacteristicsBasic:
      value:
        construction: "ATC1"
        occupancy: "ATC1"
        yearBuilt: 1973
        numOfStories: 3
    CharacteristicsFloorArea:
      value:
        construction: "ATC1"
        occupancy: "ATC1"
        yearBuilt: 1973
        numOfStories: 3
        floorArea: 1100
    CharacteristicsWF:
      value:
        construction: "RMS1"
        occupancy: "ATC2"
        yearBuilt: 2005
        numOfStories: 1
    CharacteristicsEuBasic:
      value:
        construction: "ATC0"
        occupancy: "RMS1"
        yearBuilt: 1990
        numOfStories: 0
    CharacteristicsEuFl:
      value:
        construction: "ATC0"
        occupancy: "RMS1"
        yearBuilt: 1990
        numOfStories: 0
        basement: "YES"
    CharacteristicsFlood:
      value:
        construction: "ATC16"
        occupancy: "ATC37"
        yearBuilt: 1964
        numOfStories: 1
        firstFloorHeightAboveGround: 1
        basement: "YES"
        foundationType: 0
    CoverageValuesFlood:
      value:
        buildingValue: 1093488.618
        contentsValue: 966388.5339
        businessInterruptionValue: 44393.0543
    USSubsidenceAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "CA"
        latitude: 37.272
        longitude: -91.719
        rmsGeoModelResolutionCode: 1
    UsTrD2TAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        latitude: 31.810899
        longitude: -106.53353
        rmsGeoModelResolutionCode: 1
    UsNuclearD2TAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        latitude: 41.285261
        longitude: -88.445496
        rmsGeoModelResolutionCode: 1
    UsLandfillD2LAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        latitude: 38.619671
        longitude: -96.78517
        rmsGeoModelResolutionCode: 1
    UsLandfillD2InnerCoastAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "SC"
        latitude: 32.821745
        longitude: -79.981808
        rmsGeoModelResolutionCode: 1
    USWindpoolZoneAddress:
      value:
        countryCode: "US"
        countryScheme: "ISO2A"
        countryRmsCode: "US"
        admin1Code: "AL"
        latitude: 30.905307
        longitude: -88.043782
        rmsGeoModelResolutionCode: 1
    MxAddress:
      value:
        countryCode: "MX"
        countryScheme: "ISO2A"
        countryRmsCode: "MX"
        latitude: 31.304932
        longitude: -115.669525
        rmsGeoModelResolutionCode: 1
  responses:
    400Response:
      description: The request was unacceptable, likely due to missing a required input.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorOutput'
    401Response:
      description: No valid API key provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorOutput'
    404Response:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorOutput'
    500Response:
      description: Something went wrong on our end (this happens rarely)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorOutput'
security:
  - apiKey: []
